<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAJSAAAAEAIACoEwAAFgAAACgAAAAlAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAMAAAC1AAAA4QAAAOEAAADhAAAA4QAAAOEAAADhAAAA4QAAAOEAAADhAAAA4QAAAOEAAADhAAAA4QAA
        AOEAAADhAAAA4QAAAOEAAADhAAAA4QAAAOEAAADhAAAA4QAAAOEAAADhAAAA4QAAAOEAAACoAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAA/gAAAMMAAABlAAAAZAAAAGQAAABkAAAAZAAA
        AGQAAABkAAAAZAAAAGQAAABkAAAAZAAAAGQAAABkAAAAZAAAAGQAAABkAAAAZAAAAGQAAABkAAAAZAAA
        AGQAAABkAAAAZAAAAGYAAADMAAAA+gAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAA
        AP4AAABSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWwAAAPoAAAAGAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAD+AAAAUAAAAAAAAAABAAAADQAAABAAAAAQAAAABwAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAnAAAA6wAAAP8AAAD/AAAA/wAAAPkAAABNAAAAAAAAAAAAAAAAAAAAAAAA
        AAgAAAD+AAAAUAAAAAAAAAAAAAAADAAAABAAAAAQAAAABQAAAAAAAAAAAAAACgAAABAAAAAQAAAABwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADoAAADzAAAA/wAA
        AP8AAAD/AAAA9AAAADwAAAAAAAAAAAAAAAAAAAAIAAAA/gAAAFEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAQAAAATAAAAPkAAAD/AAAA/wAAAP8AAADsAAAALgAAAAAAAAAAAAAACAAA
        AP4AAACzAAAATQAAAEwAAABMAAAATAAAAEwAAABMAAAATAAAAEwAAABMAAAATAAAAEwAAABMAAAATAAA
        AEwAAABMAAAATAAAAEwAAABMAAAATAAAAEwAAABMAAAATAAAAEwAAABNAAAAvgAAAIcAAABfAAAA/AAA
        AP8AAAD/AAAA/wAAAOMAAAAhAAAAAAAAAAgAAAD+AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD6AAAABgAAAHIAAAD+AAAA/wAAAP8AAAD/AAAAyAAAAAIAAAAIAAAA/gAA
        AP8AAAD/AAAA/wAAAPEAAADsAAAA7AAAAPIAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAADxAAAA7AAAAOwAAADyAAAA/wAAAP8AAAD/AAAA+gAAAAYAAAABAAAAhwAA
        AP8AAAD/AAAA/wAAAPcAAAAHAAAACAAAAP4AAAD/AAAA/wAAAIwAAABAAAAAZwAAAGYAAAA4AAAApgAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAACXAAAAPAAAAGYAAABmAAAAOwAA
        AJwAAAD/AAAA/wAAAPoAAAAGAAAAAAAAAAIAAACaAAAA/wAAAP8AAACdAAAAAAAAAAgAAAD+AAAA/wAA
        AP8AAABaAAAA+QAAAP8AAAD/AAAA7QAAAGIAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAAVQAAAPUAAAD/AAAA/wAAAPIAAABZAAAA/wAAAP8AAAD6AAAABgAAAAAAAAAAAAAAAgAA
        AD4AAABCAAAAAwAAAAAAAAAGAAAA9QAAAP8AAAD/AAAAYgAAAP8AAAD/AAAA/wAAAPYAAABlAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAF4AAAD8AAAA/wAAAP8AAAD7AAAAYAAA
        AP8AAAD/AAAA7AAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMAAABgAAAAYAAA
        ADcAAAD/AAAA/wAAAP8AAAD2AAAAKQAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAA
        AGAAAAAyAAAA/AAAAP8AAAD/AAAA+wAAADEAAABgAAAAXwAAAC0AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfAAAA/wAAAP8AAAD/AAAA9gAAAAcAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGQAAAPwAAAD/AAAA/wAAAPsAAAAVAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEwAA
        APQAAAD/AAAA/wAAAOUAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAwAAADuAAAA/wAAAP8AAADrAAAACgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlAAAARwAAAEcAAAAeAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIgAAAEcAAABHAAAAIQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//
        ///4AAAA//////gAAAAAAAAD+AAAAAAAAAP4AAAAH///4/gAAAAQYePj+AAAABAA4OP4AAAAEADg4/gA
        AAAQAPBj+AAAABAA8CP4AAAAEAD4A/gAAAAf//wD+AAAABAA/gf4AAAAEAD/AfgAAAAQAP+B+AAAABAA
        /8D4AAAAEAD/wHgAAAAYYf/gOAAAAB///+AYAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAggA
        AAAAAAADCAAAAAAAAAP4AAAAgAAAB/gAAADwP/A/+AAAAPA/8D/4AAAA+H/4f/gAAAD/////+AAAAP//
        ///4AAAA//////gAAAA=
</value>
  </data>
</root>