<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAABAQE9AQEBhwEBAYcBAQGHAQEBhwEBAYcBAQGHAQEBhwEBAYcBAQGHAQEBhwEBAYcBAQGHAQEBhwEB
        AYcBAQGHAQEBhwEBAYcBAQGHAQEBhwEBAYcBAQGHAQEBhwEBAYcBAQGHAQEBhwEBAYcBAQGHAQEBhwEB
        AYcBAQGHAQEBPAEBAYgBAQGlAQEBaAEBAWgBAQFoAQEBaAEBAWgBAQFoAQEBaAEBAWgBAQFoAQEBaAEB
        AWgBAQFoAQEBaAEBAWgBAQFoAQEBaAEBAYoBAQHUAQEBaAEBAWgBAQFqAQEBcAEBAWgBAQFoAQEBaAEB
        AWgBAQFoAQEBaAEBAaYBAQGHAQEBiAEBAWgBAQEtAQEBmQEBAZkBAQFJAQEBLQEBAZkBAQGZAQEBSQEB
        AS0BAQGZAQEBmQEBAUkBAQEtAQEBmQEBAZkBAQFBAQEBOQEBAbYAAAAAAAAAAAEBAVIBAQG2AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAQEBaAEBAYcBAQGIAQEBaAEBAVwBAQG4AQEBmgEBAY0BAQFcAQEBuAEB
        AZoBAQGNAQEBXAEBAbgBAQGaAQEBjQEBAVwBAQG4AQEBogEBAYABAQE5AQEBtgAAAAAAAAAAAQEBmQEB
        AfYBAQELAAAAAAAAAAAAAAAAAAAAAAAAAAABAQFoAQEBhwEBAYgBAQFoAQEBXAEBAdYBAQHFAQEBjAEB
        AVwBAQHWAQEBxQEBAYwBAQFcAQEB1gEBAcUBAQGMAQEBXAEBAZMBAQFwAQEBgAEBATkBAQG2AAAAAAAA
        AAEBAQHcAQEB1gEBAUkAAAAAAQEBYQEBAbYBAQG2AQEBcgEBAWgBAQGHAQEBiAEBAWgBAQETAQEBUQEB
        AVEBAQEgAQEBEwEBAVEBAQFRAQEBIAEBARMBAQFRAQEBUQEBASABAQFcAQEBkwEBAXABAQGAAQEBOQEB
        AbYAAAAAAQEBIQEBAdoBAQF1AQEBjQAAAAABAQEZAQEBOQEBATkBAQEeAQEBaAEBAYcBAQGIAQEBaAEB
        ATEBAQGlAQEBpQEBAU8BAQExAQEBpQEBAaUBAQFPAQEBMQEBAaUBAQGlAQEBTwEBAVwBAQGTAQEBcAEB
        AYABAQE5AQEBtgAAAAABAQFjAQEBmwEBAS8BAQHUAQEBAAEBAUIBAQGAAQEBgAEBAU0BAQFoAQEBhwEB
        AYgBAQFoAQEBXAEBAbMBAQGTAQEBjQEBAVwBAQGzAQEBkwEBAY0BAQFcAQEBswEBAZMBAQGNAQEBXAEB
        AZMBAQFwAQEBgAEBATkBAQG2AAAAAAEBAagBAQFYAQEBAwEBAeMBAQEdAQEBOQEBAXABAQFwAQEBQwEB
        AWgBAQGHAQEBiAEBAWgBAQFcAQEB2wEBAcwBAQGMAQEBXAEBAdsBAQHMAQEBjAEBAVwBAQHbAQEBzAEB
        AYwBAQFcAQEB2wEBAdABAQF/AQEBOQEBAbYBAQEAAQEB2gEBAfEBAQHwAQEB+gEBAU4BAQEqAQEBWAEB
        AVgBAQEyAQEBaAEBAYcBAQGIAQEBaAEBAQ8BAQFFAQEBRQEBARsBAQEPAQEBRQEBAUUBAQEbAQEBDwEB
        AUUBAQFFAQEBGwEBAQ8BAQFFAQEBRQEBARkBAQE5AQEBtgEBAQABAQHYAQEBDAEBAQABAQGeAQEBUQEB
        AVEBAQGaAQEBmgEBAV8BAQFoAQEBhwEBAYgBAQFoAQEBMQEBAaUBAQGlAQEBTwEBATEBAQGlAQEBpQEB
        AU8BAQExAQEBpQEBAaUBAQFPAQEBMQEBAaUBAQGlAQEBRwEBATkBAQG2AQEBAAEBAdgBAQEOAAAAAAEB
        AZ4BAQFSAQEBDQEBASEBAQEhAQEBEAEBAWgBAQGHAQEBiAEBAWgBAQFcAQEBswEBAZMBAQGNAQEBXAEB
        AbMBAQGTAQEBjQEBAVwBAQGzAQEBkwEBAY0BAQFcAQEBswEBAZsBAQGAAQEBOQEBAbYBAQEAAQEB2AEB
        AQ8AAAAAAQEBnQEBAVMBAQFtAQEBzgEBAc4BAQGAAQEBaAEBAYcBAQGIAQEBaAEBAVsBAQHbAQEBzAEB
        AYsBAQFbAQEB2wEBAcwBAQGLAQEBWwEBAdsBAQHMAQEBiwEBAVsBAQHbAQEB0AEBAX8BAQE5AQEBtgEB
        AQABAQHYAQEBEAAAAAABAQGbAQEBVAAAAAAAAAACAAAAAgAAAAEBAQFoAQEBhwEBAYgBAQFoAQEBDAEB
        ATkBAQE5AQEBFgEBAQwBAQE5AQEBOQEBARYBAQEMAQEBOQEBATkBAQEWAQEBDAEBATkBAQE5AQEBEwEB
        ATkBAQG2AQEBAAEBAdgBAQERAAAAAAEBAZoBAQFVAQEBdgEBAeIBAQHiAQEBigEBAWgBAQGHAQEBiAEB
        AWgBAQGPAQEB6gEBAegBAQHoAQEB6AEBAegBAQHoAQEB6AEBAegBAQHoAQEB6AEBAegBAQHoAQEB6AEB
        AekBAQG8AQEBOQEBAbYBAQEAAQEB2AEBARIAAAAAAQEBmQEBAVYBAQEEAQEBDAEBAQwBAQEFAQEBaAEB
        AYcBAQGIAQEBaAEBAaYBAQFQAQEBBwEBAQcBAQEHAQEBBwEBAQcBAQEHAQEBBwEBAQcBAQEHAQEBBwEB
        AQcBAQEHAAAAIAEBAdcBAQE5AQEBtgEBAQABAQHYAQEBEwAAAAABAQGYAQEBVwEBAWABAQGzAQEBswEB
        AXABAQFoAQEBhwEBAYgBAQFoAQEBpgEBAUsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAaAQEB1wEBATkBAQG2AQEBAAEBAdcBAQEVAAAAAAEBAZcBAQFYAQEBGwEB
        AT0BAQE9AQEBIQEBAWgBAQGHAQEBiAEBAWgBAQGmAQEBSwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABoBAQHXAQEBOQEBAbYBAQEAAQEB1gEBARcAAAAAAQEBlgEB
        AVkBAQFBAQEBfgEBAX4BAQFMAQEBaAEBAYcBAQGIAQEBaAEBAaYBAQFzAQEBOQEBATkBAQE5AQEBOQEB
        ATkBAQE5AQEBOQEBATkBAQE5AQEBOQEBATkBAQE5AQEBTQEBAdcBAQE5AQEBtgEBAQABAQHVAQEBGQAA
        AAABAQGVAQEBWgEBAToBAQFzAQEBcwEBAUQBAQFoAQEBhwEBAYgBAQFoAQEBbAEBAbcBAQG3AQEBtwEB
        AbcBAQG3AQEBtwEBAbcBAQG3AQEBtwEBAbcBAQG3AQEBtwEBAbcBAQG3AQEBjQEBATkBAQG2AQEBAAEB
        AdQBAQEbAAAAAAEBAZQBAQFbAAAAAAAAAAAAAAAAAAAAAAEBAWgBAQGHAQEBiAEBAYYBAQEyAQEBMgEB
        ATIBAQEyAQEBMgEBATIBAQEyAQEBMgEBATIBAQEyAQEBMgEBATIBAQEyAQEBMgEBATIBAQEyAQEBYAEB
        AbYAAAAAAQEBsgEBAXwBAQFNAQEBzQEBAT0AAAAAAAAAAAAAAAAAAAAAAQEBaAEBAYcBAQFaAQEBvwEB
        Ab8BAQG/AQEBvwEBAcABAQH4AQEBwAEBAb8BAQG/AQEBvwEBAb8BAQG/AQEBvwEBAb8BAQG/AQEBvwEB
        Ab8BAQG/AQEBfQAAAAABAQEYAQEBiQEBAZkBAQFfAAAAAAAAAAAAAAAAAAAAAAAAAAABAQFoAQEBhwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABgEBAeUBAQEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQFRAQEBdAEBAXQBAQF0AQEBdAEBAXQBAQF0AQEBdAEB
        Aa0BAQGHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAQEB5QEBAQQBAQFDAQEBYAEBAWABAQFgAQEBYAEB
        AWABAQFgAQEBYAEBAWABAQFgAQEBYAEBAWABAQFPAAAAAAEBAcsBAQGaAQEBiAEBAYgBAQGIAQEBiAEB
        AYgBAQG0AQEB8wEBAT4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYBAQHlAQEBBAEBAc4BAQGeAQEBjwEB
        AY8BAQGPAQEBjwEBAY8BAQGPAQEBjwEBAY8BAQGPAQEBkAEBAfEBAQEAAQEBywEBASYAAAAAAAAAAAAA
        AAAAAAAAAQEBNQEBAd0BAQE9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgEBAeUBAQEEAQEBzgEB
        ASEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQECAQEB8AEBAQABAQHLAQEBJgAA
        AAAAAAAAAAAAAAEBATwBAQHdAQEBNgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAQEB5QEB
        AQQBAQHOAQEBIQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAQIBAQHwAQEBAAEB
        AcsBAQEmAAAAAAEBAQABAQFEAQEB3QEBATAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAYBAQHlAQEBBAEBAc4BAQEiAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAwEB
        AfABAQEAAQEBywEBASYAAAAAAQEBTAEBAdsBAQEqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABgEBAeUBAQEEAQEBwAEBAe0BAQHrAQEB6wEBAesBAQHrAQEB6wEBAesBAQHrAQEB6wEB
        AesBAQHrAQEB4AEBAQABAQHLAQEBJgEBAVUBAQHZAQEBJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAGAQEB5QEBAQQAAAACAAAABQAAAAUAAAAFAAAABQAAAAUAAAAFAAAABQAA
        AAUAAAAFAAAABQAAAAUAAAADAAAAAAEBAcsBAQGDAQEB1gEBAR8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYBAQHrAQEBagEBAWgBAQFoAQEBaAEBAWgBAQFoAQEBaAEB
        AWgBAQFoAQEBaAEBAWgBAQFoAQEBaAEBAWgBAQFoAQEB4AEBAdQBAQEaAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEBAXkBAQGIAQEBiAEBAYgBAQGIAQEBiAEB
        AYgBAQGIAQEBiAEBAYgBAQGIAQEBiAEBAYgBAQGIAQEBiAEBAYgBAQGEAQEBFgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAz8AAAMfAAACEAAAAhAAAAIQAAACAAAAAgAAAAJAAAA
        CQAAAAkAAAAJIAAACQAAAAkAAAAJAA//CQAP/wkAAAAJAAAACTwAAAg8AAAIfPj//AD4AAQA+AAE8fg/
        5OP4P+TH+AAEj/gABB/4AAQ/+AAAf/gAAP8=
</value>
  </data>
</root>