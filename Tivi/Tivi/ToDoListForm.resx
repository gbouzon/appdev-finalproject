<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAAAwAAAANAAAADQAAAA0AAAANAAAADQAAAA0AAAANAAAADQAA
        AA0AAAANAAAADQAAAA0AAAANAAAADQAAAA0AAAANAAAADQAAAA0AAAANAAAADQAAAA0AAAAMAAAABgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAGgAAAJoAAADBAAAAtAAAALMAAACzAAAAswAAALMAAACzAAAAswAA
        ALMAAACzAAAAswAAALMAAACzAAAAswAAALMAAACzAAAAswAAALMAAACzAAAAswAAALMAAACzAAAAswAA
        ALQAAADBAAAAkwAAABQAAAAAAAAAAAAAABAAAADOAAAAWQAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAMAAABjAAAAxwAAAAoAAAAAAAAAWgAAAKcAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0AAAATAAAAAAAAABrAAAAkAAAAAAAAAAAAAAAAAAA
        AAEAAAACAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ4AAABdAAAAAAAAAGsAAACQAAAAAAAA
        AAAAAABOAAAAvQAAAL4AAAC1AAAAMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAngAAAF0AAAAAAAAAawAA
        AJAAAAAAAAAAIQAAANcAAAAaAAAAAQAAADoAAADWAAAACwAAAAAAAAAWAAAATwAAAFAAAABQAAAAUAAA
        AFAAAABQAAAAUAAAAFAAAABQAAAAUAAAAFAAAABQAAAAUAAAAFAAAAAxAAAAAAAAAAAAAACeAAAAXQAA
        AAAAAABrAAAAkAAAAAAAAAAoAAAA0wAAAA0AAAAAAAAAJwAAANwAAAAPAAAAAAAAACMAAABxAAAAcQAA
        AHEAAABxAAAAcQAAAHEAAABxAAAAcQAAAHEAAABxAAAAcQAAAHEAAABxAAAAcQAAAEsAAAAAAAAAAAAA
        AJ4AAABdAAAAAAAAAGsAAACQAAAAAAAAAAAAAABsAAAAxAAAALAAAADFAAAASwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAngAAAF0AAAAAAAAAawAAAJAAAAAAAAAAAAAAAAAAAAAIAAAAEQAAAAUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAACeAAAAXQAAAAAAAABrAAAAkAAAAAAAAAAAAAAAAAAAAAIAAAAFAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ4AAABdAAAAAAAAAGsAAACQAAAAAAAAAAAAAABXAAAAwgAA
        ALcAAAC0AAAAOgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAngAAAF0AAAAAAAAAawAAAJAAAAAAAAAAIwAA
        ANcAAABTAAAAxQAAAIgAAADYAAAADQAAAAAAAAAaAAAAVwAAAFgAAABYAAAAWAAAAFgAAABYAAAAWAAA
        AFgAAABYAAAAWAAAAFgAAABYAAAAWAAAAFgAAAA4AAAAAAAAAAAAAACeAAAAXQAAAAAAAABrAAAAkAAA
        AAAAAAAmAAAA6AAAAMoAAABAAAAAwQAAAO0AAAAWAAAAAAAAAB8AAABmAAAAZwAAAGcAAABnAAAAZwAA
        AGcAAABnAAAAZwAAAGcAAABnAAAAZwAAAGcAAABnAAAAZwAAAEMAAAAAAAAAAAAAAJ4AAABdAAAAAAAA
        AGsAAACQAAAAAAAAAAAAAABjAAAAyAAAALkAAADDAAAAngAAALwAAAAdAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAngAA
        AF0AAAAAAAAAawAAAJAAAAAAAAAAAAAAAAAAAAAFAAAACwAAAAMAAAAAAAAASwAAAEYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACeAAAAXQAAAAAAAABrAAAAkAAAAAAAAAAAAAAAAAAAAAQAAAAKAAAAAwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAJ4AAABdAAAAAAAAAGsAAACQAAAAAAAAAAAAAABhAAAAxgAAALsAAADCAAAAQgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAngAAAF0AAAAAAAAAawAAAJAAAAAAAAAAJQAAANUAAAASAAAAAAAA
        AC8AAADaAAAADgAAAAAAAAAfAAAAZQAAAGYAAABmAAAAZgAAAGYAAABmAAAAZgAAAGYAAABmAAAAZgAA
        AGYAAABmAAAAZgAAAGYAAABCAAAAAAAAAAAAAACeAAAAXQAAAAAAAABrAAAAkAAAAAAAAAAkAAAA1gAA
        ABQAAAAAAAAAMgAAANkAAAANAAAAAAAAABoAAABYAAAAWAAAAFgAAABYAAAAWAAAAFgAAABYAAAAWAAA
        AFgAAABYAAAAWAAAAFgAAABYAAAAWAAAADgAAAAAAAAAAAAAAJ4AAABdAAAAAAAAAGsAAACQAAAAAAAA
        AAAAAABbAAAAxQAAAL8AAAC/AAAAPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAngAAAF0AAAAAAAAAawAA
        AJAAAAAAAAAAAAAAAAAAAAADAAAABgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACeAAAAXQAA
        AAAAAABrAAAAkAAAAAAAAAAAAAAAAAAAAAgAAAAPAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AJ4AAABdAAAAAAAAAGsAAACQAAAAAAAAAAAAAABsAAAAxgAAALEAAAC/AAAATAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAngAAAF0AAAAAAAAAawAAAJAAAAAAAAAAKAAAANQAAABfAAAA2AAAAJMAAADdAAAADwAA
        AAAAAAAiAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAA
        AHAAAABKAAAAAAAAAAAAAACeAAAAXQAAAAAAAABrAAAAkAAAAAAAAAAhAAAA6wAAAMIAAAAsAAAAugAA
        AO8AAAAaAAAAAAAAABUAAABOAAAATgAAAE4AAABOAAAATgAAAE4AAABOAAAATgAAAE4AAABOAAAATgAA
        AE4AAABOAAAATgAAADEAAAAAAAAAAAAAAJ4AAABdAAAAAAAAAGsAAACQAAAAAAAAAAAAAABOAAAAvwAA
        AL4AAAC2AAAAhwAAAMgAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAngAAAF0AAAAAAAAAawAAAJAAAAAAAAAAAAAA
        AAAAAAABAAAAAgAAAAEAAAAAAAAAOQAAAD4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACeAAAAXQAAAAAAAABaAAAApwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALQAAABMAAAAAAAA
        ABAAAADOAAAAWQAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAABjAAAAxwAA
        AAoAAAAAAAAAAAAAABoAAACbAAAAwwAAALYAAAC1AAAAtQAAALUAAAC1AAAAtQAAALUAAAC1AAAAtQAA
        ALUAAAC1AAAAtQAAALUAAAC1AAAAtQAAALUAAAC1AAAAtQAAALUAAAC1AAAAtQAAALUAAAC2AAAAwwAA
        AJQAAAAVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAADQAAAA4AAAAOAAAADgAAAA4AAAAOAAAADgAA
        AA4AAAAOAAAADgAAAA4AAAAOAAAADgAAAA4AAAAOAAAADgAAAA4AAAAOAAAADgAAAA4AAAAOAAAADgAA
        AA0AAAAGAAAAAAAAAAAAAAAA8AAAB8AAAAGH///wn////Jx///yYP//8kBAADJEQAAyYP//8nH///Jx/
        //yYP//8kBAADJAQAAyYD//8nE///Jx///yYP//8kRAADJEQAAyYP//8nH///Jx///yYP//8kBAADJAQ
        AAyYD//8nE///J////yH///wwAAAAfAAAAc=
</value>
  </data>
</root>