<?xml version="1.0"?>
<doc>
    <assembly>
        <name>C1.Win.C1Schedule.4.5.2</name>
    </assembly>
    <members>
        <member name="T:C1.Win.Localization.Design.ControlLocalizeRules">
            <summary>
            Defines the default rules of enduser localization.
            </summary>
        </member>
        <member name="M:C1.Win.Localization.Design.ControlLocalizeRules.GetLocalizedProperties(System.Type,System.Object)">
            <summary>
            Returns the list of properties that should be localized
            for specified type of control.
            </summary>
            <param name="controlType">Type of control.</param>
            <param name="endUserLocalizeOptions">The EndUserLocalizeOptionsAttribute specified for type.</param>
            <returns>Returns the list of properties' names or null if control should no localized.</returns>
        </member>
        <member name="P:C1.Win.Localization.Design.Product.Projects">
            <summary>
            Gets the list of projects containing this product.
            </summary>
        </member>
        <member name="T:C1.Win.Localization.Design.PropsStoreBase">
            <summary>
            Base class for store properties of visual controls, position of form for example.
            </summary>
        </member>
        <member name="T:C1.Win.Localization.Design.ResourceItemCollection">
            <summary>
            Collection of ResourceItem objects.
            </summary>
        </member>
        <member name="M:C1.Win.Localization.Design.ResourceItemCollection.GetStrings(System.Collections.Generic.List{C1.Win.Localization.Design.ResourceString})">
            <summary>
            Fills a list with all ResourceString objects containing
            in this collection and all its nested collections.
            </summary>
        </member>
        <member name="P:C1.Win.Localization.Design.ResourceItemCollection.HasChanged">
            <summary>
            Returns true if collection or any of its children
            has changed items.
            </summary>
        </member>
        <member name="T:C1.Win.Localization.Design.ResourceString">
            <summary>
            Represents the resource string for all cultures.
            </summary>
        </member>
        <member name="T:C1.Win.Localization.Design.ResourceStringValues">
            <summary>
            Contains values for each culture.
            </summary>
        </member>
        <member name="T:C1.Win.Localization.Design.ResourceGroup">
            <summary>
            Represents the group of resource strings.
            </summary>
        </member>
        <member name="T:C1.Win.Localization.Design.ControlsResourceGroup">
            <summary>
            Represents the group of resources containing the 
            strings for localizing the visual controls 
            (forms, user controls, controls on forms, etc).
            </summary>
        </member>
        <member name="T:C1.Win.Localization.Design.ControlResourceGroup">
            <summary>
            Represents the group of resource string containing the
            strings for localizing the separate control.
            </summary>
        </member>
        <member name="T:C1.Win.Localization.Design.RootResourceGroup">
            <summary>
            Represents the root resource group containing all other resources.
            </summary>
        </member>
        <member name="P:C1.Win.Localization.Design.RootResourceGroup.Cultures">
            <summary>
            Gets the list of all cultures in the resources.
            </summary>
        </member>
        <member name="M:C1.Win.Localization.Design.Utils.GetImage(System.String)">
            <summary>
            Loads an image from the entry assembly. 
            </summary>
            <param name="name">The name of the requested image.</param>
            <returns>The <see cref="T:System.Drawing.Image"/> if it is found; null otherwise.</returns>
        </member>
        <member name="M:C1.Win.Localization.Design.Utils.GetImage(System.Reflection.Assembly,System.String)">
            <summary>
            Loads an image from the specified assembly. 
            </summary>
            <param name="a">An <see cref="T:System.Reflection.Assembly"/> to load image from.</param>
            <param name="name">The name of the requested image.</param>
            <returns>The <see cref="T:System.Drawing.Image"/> if it is found; null otherwise.</returns>
        </member>
        <member name="T:C1.Win.Localization.Design.DesignLocalizationStrings">
            <summary>
            Contains localizable design-time strings.
            </summary>
        </member>
        <member name="P:C1.Win.Localization.Design.DesignLocalizationStrings.Warning">
            <summary>
            Gets the "Warning" string.
            </summary>
        </member>
        <member name="P:C1.Win.Localization.Design.DesignLocalizationStrings.Question">
            <summary>
            Gets the "Question" string.
            </summary>
        </member>
        <member name="P:C1.Win.Localization.Design.DesignLocalizationStrings.None">
            <summary>
            Gets the "None" string.
            </summary>
        </member>
        <member name="P:C1.Win.Localization.Design.DesignLocalizationStrings.Error">
            <summary>
            Gets the "Error" string.
            </summary>
        </member>
        <member name="T:C1.Win.Localization.Design.DesignLocalizationStrings.RootResourceGroup">
            <summary>
            Contains localizable design-time strings for the root group.
            </summary>
        </member>
        <member name="P:C1.Win.Localization.Design.DesignLocalizationStrings.RootResourceGroup.ReadOnlyFile">
            <summary>
            Gets the "overwrite a readonly file?" format string.
            </summary>
        </member>
        <member name="T:C1.Win.Localization.Design.DesignLocalizationStrings.RootResourceGroup.Errors">
            <summary>
            Contains error strings.
            </summary>
        </member>
        <member name="P:C1.Win.Localization.Design.DesignLocalizationStrings.RootResourceGroup.Errors.SaveToFile">
            <summary>
            Gets the "errors while saving resources" format string.
            </summary>
        </member>
        <member name="T:C1.Win.Localization.Design.DesignLocalizationStrings.StringsDesigner">
            <summary>
            Contains strings designer strings.
            </summary>
        </member>
        <member name="P:C1.Win.Localization.Design.DesignLocalizationStrings.StringsDesigner.AllStringsCaption">
            <summary>
            Gets the "All" string.
            </summary>
        </member>
        <member name="T:C1.Win.Localization.Design.DesignLocalizationStrings.StringsDesigner.Errors">
            <summary>
            Contains error strings.
            </summary>
        </member>
        <member name="P:C1.Win.Localization.Design.DesignLocalizationStrings.StringsDesigner.Errors.CantInitializeDte">
            <summary>
            Gets the "Localizer can be used under MS Visual Studio only." string.
            </summary>
        </member>
        <member name="T:C1.Win.Localization.Design.DesignLocalizationStrings.Localizer">
            <summary>
            Contains localizer strings.
            </summary>
        </member>
        <member name="P:C1.Win.Localization.Design.DesignLocalizationStrings.Localizer.DesignActionCaption">
            <summary>
            Gets the "Localize..." string.
            </summary>
        </member>
        <member name="P:C1.Win.Localization.Design.DesignLocalizationStrings.Localizer.CultureAlreadyExists">
            <summary>
            Gets the "Culture [{0}] already added to the current translation." format string.
            </summary>
        </member>
        <member name="P:C1.Win.Localization.Design.DesignLocalizationStrings.Localizer.LoadResXStringsException">
            <summary>
            Gets the "Exception occurs during loading strings from resource file:\r{0}\rException message:\r{1}" format string.
            </summary>
        </member>
        <member name="P:C1.Win.Localization.Design.DesignLocalizationStrings.Localizer.SaveQuestion">
            <summary>
            Gets the "The translation has been changed, save?" string.
            </summary>
        </member>
        <member name="P:C1.Win.Localization.Design.DesignLocalizationStrings.Localizer.NewTranslation">
            <summary>
            Gets the "Select product to translate" string.
            </summary>
        </member>
        <member name="P:C1.Win.Localization.Design.DesignLocalizationStrings.Localizer.SaveAsDialogCaption">
            <summary>
            Gets the "Select project to store translation" string.
            </summary>
        </member>
        <member name="P:C1.Win.Localization.Design.DesignLocalizationStrings.Localizer.ImageResourceNotFound">
            <summary>
            Gets the "Resource image with name [{0}] is not found." format string.
            </summary>
        </member>
        <member name="P:C1.Win.Localization.Design.DesignLocalizationStrings.Localizer.InvariantCultureDescription">
            <summary>
            Gets the "Invariant culture" string.
            </summary>
        </member>
        <member name="P:C1.Win.Localization.Design.DesignLocalizationStrings.Localizer.DeleteCultureWarning">
            <summary>
            Gets the "You have selected {0} culture to delete, there are {1} strings of this culture. Are you sure?" format string.
            </summary>
        </member>
        <member name="P:C1.Win.Localization.Design.DesignLocalizationStrings.Localizer.DeleteCulturesWarning">
            <summary>
            Gets the "You have selected {0} cultures to delete, there are {1} strings of these cultures. Are you sure?" format string.
            </summary>
        </member>
        <member name="P:C1.Win.Localization.Design.DesignLocalizationStrings.Localizer.CantCreateLocalizedFolder">
            <summary>
            Gets the "Can't create the [{0}] folder in the project.\rError message:\r{1}" format string.
            </summary>
        </member>
        <member name="T:C1.Win.Localization.Design.DesignLocalizationStrings.Localizer.OpenTranslationDialog">
            <summary>
            Contains the open translation dialog strings.
            </summary>
        </member>
        <member name="P:C1.Win.Localization.Design.DesignLocalizationStrings.Localizer.OpenTranslationDialog.SolutionMask">
            <summary>
            Gets the "Solution '{0}'" format string.
            </summary>
        </member>
        <member name="P:C1.Win.Localization.Design.DesignLocalizationStrings.Localizer.OpenTranslationDialog.NoCultures">
            <summary>
            Gets the "Can't build list of cultures" string.
            </summary>
        </member>
        <member name="F:C1.Win.Localization.Design.DeleteCultureDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.Localization.Design.DeleteCultureDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.Localization.Design.DeleteCultureDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:C1.Win.Localization.Design.OpenTranslationDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.Localization.Design.OpenTranslationDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.Localization.Design.OpenTranslationDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:C1.Win.Localization.Design.SelectCultureDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.Localization.Design.SelectCultureDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.Localization.Design.SelectCultureDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:C1.Win.Localization.Design.SelectProductDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.Localization.Design.SelectProductDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.Localization.Design.SelectProductDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:C1.Win.Localization.Design.SelectProjectDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.Localization.Design.SelectProjectDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.Localization.Design.SelectProjectDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Win.Localization.Design.LocalizeActionList">
            <summary>
            Represents a localization <see cref="T:System.ComponentModel.Design.DesignerActionList"/>.
            </summary>
        </member>
        <member name="M:C1.Win.Localization.Design.LocalizeActionList.#ctor(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentDesigner)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.Localization.Design.LocalizeActionList"/> class.
            </summary>
            <param name="component">The designed component.</param>
            <param name="designer">The component designer.</param>
        </member>
        <member name="M:C1.Win.Localization.Design.LocalizeActionList.GetSortedActionItems">
            <summary>
            Returns the list of associated action items.
            </summary>
            <returns>The list containing the "Localize" item.</returns>
        </member>
        <member name="M:C1.Win.Localization.Design.LocalizeActionList.Localize">
            <summary>
            Performs localizaion.
            </summary>
        </member>
        <member name="M:C1.Win.Localization.Design.LocalizeActionList.Localize(System.ComponentModel.Design.ComponentDesigner)">
            <summary>
            Performs localizaion.
            </summary>
            <param name="designer">The designer to localize.</param>
        </member>
        <member name="M:C1.Win.Localization.Design.StringsDesigner.New">
            <summary>
            Create the new translation.
            </summary>
        </member>
        <member name="F:C1.Win.Localization.Design.StringsDesigner.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.Localization.Design.StringsDesigner.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.Localization.Design.StringsDesigner.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.C1FrameworkHelper.ApplyStyle(C1.Win.C1Themes.Shared.C1ThemeProxy,C1.Framework.Style,System.String)">
            <summary>
            fills style props with values from the specified path
            </summary>
            <param name="tp"></param>
            <param name="style"></param>
            <param name="path"></param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.C1FrameworkHelper.ApplyHotStyle(C1.Win.C1Themes.Shared.C1ThemeProxy,C1.Framework.Style,System.String)">
            <summary>
            
            </summary>
            <param name="tp"></param>
            <param name="style">reference to the framework style, for which hot style should be applied</param>
            <param name="path">xml path to the hot style</param>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.Dock_SizeMode">
            <summary>
            Used in:
            C1DockingTab\Style
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Dock_SizeMode.Normal">
            <summary>
            Borders are shown only for headers of columns.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Dock_SizeMode.Fit">
            <summary>
            No borders.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Dock_SizeMode.FillToEnd">
            <summary>
            Only left and right borders of columns are shown.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.TreeViewBorderStyleEnum">
            <summary>
            Used in:
            C1TreeView\Style
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.TreeViewBorderStyleEnum.ColumnsHeaderOnly">
            <summary>
            Borders are shown only for headers of columns.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.TreeViewBorderStyleEnum.None">
            <summary>
            No borders.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.TreeViewBorderStyleEnum.ColumnsLineOnly">
            <summary>
            Only left and right borders of columns are shown.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.TreeViewBorderStyleEnum.Full">
            <summary>
            Borders are shown for all cells.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.CheckBoxStyleEnum">
            <summary>
            Used in:
            C1TreeView\Style
            C1MultiSelect\C1CheckList\Style
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.CheckBoxStyleEnum.System">
            <summary>
            Standard system view.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.CheckBoxStyleEnum.Office2007Black">
            <summary>
            Like a MS Office 2007 Black.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.CheckBoxStyleEnum.Office2007Blue">
            <summary>
            Like a MS Office 2007 Blue.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.CheckBoxStyleEnum.Office2007Silver">
            <summary>
            Like a MS Office 2007 Silver.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.CheckBoxStyleEnum.Office2010Black">
            <summary>
            Like a MS Office 2010 Black.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.CheckBoxStyleEnum.Office2010Blue">
            <summary>
            Like a MS Office 2010 Blue.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.CheckBoxStyleEnum.Office2010Silver">
            <summary>
            Like a MS Office 2010 Silver.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.CheckBoxStyleEnum.Office2013">
            <summary>
            Like a MS Office 2013.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.CheckBoxStyleEnum.Windows10">
            <summary>
            Like a Windows 10.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.BackgroundPictureDrawModeEnum">
            <summary>
            Used in:
            C1TrueDBGrid\Style
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BackgroundPictureDrawModeEnum.Center">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BackgroundPictureDrawModeEnum.Stretch">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BackgroundPictureDrawModeEnum.Tile">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BackgroundPictureDrawModeEnum.Fill">
            <summary>
            The image is stretched and aspect ratio is saved.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.BorderType">
            <summary>
            Used in:
            C1TrueDBGrid\GridBorder
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BorderType.None">
            <summary>
            No borders.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BorderType.Flat">
            <summary>
            Borders have a Flat appearance.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BorderType.Raised">
            <summary>
            Borders have a 3D raised appearance.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BorderType.Inset">
            <summary>
            Borders have a 3D inset appearance.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BorderType.Groove">
            <summary>
            A line around the inside of the border.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BorderType.Fillet">
            <summary>
            A fillet type border.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BorderType.RaisedBevel">
            <summary>
            Borders have a 3D raised with a bevel.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BorderType.InsetBevel">
            <summary>
            Borders have a 3D inset with a bevel.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.ForegroundPicturePosition">
            <summary>
            Used in:
            C1TrueDBGrid\Style
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ForegroundPicturePosition.Near">
            <summary>
            Image is rendered in the near side of the cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ForegroundPicturePosition.Far">
            <summary>
            Image is rendered in the far side of the cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ForegroundPicturePosition.LeftOfText">
            <summary>
            Image is rendered to the left of any text in the cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ForegroundPicturePosition.RightOfText">
            <summary>
            Image is rendered to the right of any text in the cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ForegroundPicturePosition.TopOfText">
            <summary>
            Image is rendered on top of any text in the cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ForegroundPicturePosition.BottomOfText">
            <summary>
            Image is rendered below any text in the cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ForegroundPicturePosition.PictureOnly">
            <summary>
            Text is not displayed.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ForegroundPicturePosition.TextOnly">
            <summary>
            Image is not displayed.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.AlignHorzEnum">
            <summary>
            Used in:
            C1TrueDBGrid\Style
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.AlignHorzEnum.General">
            <summary>
            Text is aligned Near and numeric values Far
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.AlignHorzEnum.Near">
            <summary>
            Text is aligned to the left.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.AlignHorzEnum.Center">
            <summary>
            Text is aligned centered.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.AlignHorzEnum.Far">
            <summary>
            Text is aligned to the right.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.AlignHorzEnum.Justify">
            <summary>
            Text is aligned with respect to the cells boundries.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.AlignVertEnum">
            <summary>
            Used in:
            C1TrueDBGrid\Style
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.AlignVertEnum.Top">
            <summary>
            Text is rendered at the top of the cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.AlignVertEnum.Center">
            <summary>
            Text is rendered at the center of the cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.AlignVertEnum.Bottom">
            <summary>
            Text is rendered at the bottom of the cell.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.LineStyle">
            <summary>
            Used in:
            C1TrueDBGrid\GridLines
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.LineStyle.None">
            <summary>
            No line.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.LineStyle.Single">
            <summary>
            Single line.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.LineStyle.Double">
            <summary>
            Double line.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.LineStyle.Raised">
            <summary>
            Line with 3D raised appearance.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.LineStyle.Inset">
            <summary>
            Line with 3D inset appearance.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.PaletteType">
            <summary>
            Used in:
            C1Schedule\PaletteType
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.PaletteType.Office2007">
            <summary>
            Office 2007 palette includes back and border colors 
            of free and working hours and days, day headers, grid borders 
            and calendar tabs. 
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.PaletteType.Office2010">
            <summary>
            Office 2010 palette includes back and border colors 
            of free and working hours and days, day headers, grid borders 
            and calendar tabs. 
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.PaletteType.Office2016">
            <summary>
            Office 2016 palette includes accent color to use in calendar headers and additional darker color for current day.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.PaletteType.Office2016Dark">
            <summary>
            Office 2016 dark palette includes accent color to use in calendar headers and additional darker color for current day.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.GroupTabStyle">
            <summary>
            Used in:
            C1Schedule\GroupTabStyle
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.GroupTabStyle.FullWidth">
            <summary>
            Group headers of rectangular shape take the full width of the corresponding group.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.GroupTabStyle.Office2007">
            <summary>
            Group headers of Office2007 appearance.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.GroupTabStyle.Office2016">
            <summary>
            Group headers of Office2016 appearance.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.WeekTabStyle">
            <summary>
            Used in:
            C1Schedule\WeekTabStyle
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.WeekTabStyle.Office2007">
            <summary>
            Week tabs of Office2007 appearance.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.WeekTabStyle.Office2016">
            <summary>
            Week tabs of Office2016 appearance.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BackgroundGradient.None">
            <summary>
            Use no background gradient.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BackgroundGradient.Automatic">
            <summary>
            Use a gradient that matches the current system Visual Style.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BackgroundGradient.Silver">
            <summary>
            Use a silver background gradient.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BackgroundGradient.Blue">
            <summary>
            Use a blue background gradient.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BackgroundGradient.Gold">
            <summary>
            Use a gold background gradient.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BackgroundGradient.Olive">
            <summary>
            Use an olive background gradient.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BackgroundGradient.Vista">
            <summary>
            Use the Vista-style background gradient.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.GradientMode.None">
            <summary>
            No gradient.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.GradientMode.Horizontal">
            <summary>
            Horizontal gradient (left to right).
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.GradientMode.Vertical">
            <summary>
            Vertical gradient (top to bottom).
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.GradientMode.DiagonalDown">
            <summary>
            Diagonal gradient (left-top to right-bottom).
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.GradientMode.DiagonalUp">
            <summary>
            Diagonal gradient (left-bottom to right-top).
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.GradientMode.Radial">
            <summary>
            Radial gradient.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageAlignment.LeftTop">
            <summary>
            Image is vertically aligned at the top, 
            and horizontally aligned on the left. 
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageAlignment.CenterTop">
            <summary>
            Image is vertically aligned at the top, 
            and horizontally aligned at the center.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageAlignment.RightTop">
            <summary>
            Image is vertically aligned at the top, 
            and horizontally aligned on the right. 
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageAlignment.LeftCenter">
            <summary>
            Image is vertically aligned in the middle, 
            and horizontally aligned on the left. 
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageAlignment.CenterCenter">
            <summary>
            Image is vertically aligned in the middle, 
            and horizontally aligned at the center. 
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageAlignment.RightCenter">
            <summary>
            Image is vertically aligned in the middle, 
            and horizontally aligned on the right. 
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageAlignment.LeftBottom">
            <summary>
            Image is vertically aligned at the bottom, 
            and horizontally aligned on the left. 		
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageAlignment.CenterBottom">
            <summary>
            Image is vertically aligned at the bottom, 
            and horizontally aligned at the center.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageAlignment.RightBottom">
            <summary>
            Image is vertically aligned at the bottom, 
            and horizontally aligned on the right. 
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageScaling.Clip">
            <summary>
            Use the image's original size, clipping it to the display area if necessary.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageScaling.Stretch">
            <summary>
            Stretch the image to fill the display area. 
            This mode will usually change the image's aspect ratio.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageScaling.Scale">
            <summary>
            Scale the image to fit the display area. 
            This mode may increase or reduce the size of the image 
            while maintaining its aspect ratio.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageScaling.Tile">
            <summary>
            Tile the image to fill the display area.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageScaling.TileStretch">
            <summary>
            Tile the image into the 3x3 matrix and stretch it to fill the display area.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageScaling.TileStretchHorizontal">
            <summary>
            Tile the image into the row of 3 images and stretch it to fill the display area.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageScaling.TileStretchVertical">
            <summary>
            Tile the image into the column of 3 images and stretch it to fill the display area.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageScaling.Hide">
            <summary>
            Hide the image.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Alignment.NotSet">
            <summary>
            Default value.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Alignment.Near">
            <summary>
            Near.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Alignment.Far">
            <summary>
            Far.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Alignment.Center">
            <summary>
            Center.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Alignment.Spread">
            <summary>
            Spread.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.TextDirection.Normal">
            <summary>
            Text is drawn in the horizontal direction, left to right.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.TextDirection.Up">
            <summary>
            Text is draw vertically, from the bottom up.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.TextDirection.Down">
            <summary>
            Text is draw vertically, from the top down.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.RadialMenuTooltipPosition.None">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.RadialMenuTooltipPosition.Left">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.RadialMenuTooltipPosition.Top">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.RadialMenuTooltipPosition.Right">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.RadialMenuTooltipPosition.Bottom">
            <summary>For internal use.</summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.ImageSetEnum">
            <summary>
            Describes the image set used for toolbar images of the
            preview actions.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageSetEnum.Classic">
            <summary>
            Classic image set.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageSetEnum.Flat">
            <summary>
            Flat image set.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageSetEnum.XP">
            <summary>
            XP image set.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageSetEnum.XP2">
            <summary>
            XP alternative image set.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageSetEnum.XP3">
            <summary>
            XP second alternative image set.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageSetEnum.Adobe">
            <summary>
            Adobe image set.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageSetEnum.OsX">
            <summary>
            Os X image set.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageSetEnum.Original">
            <summary>
            Original (C1Preview "classic") image set.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_BorderDirEnum.Both">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_BorderDirEnum.Horizontal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_BorderDirEnum.Vertical">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_BorderStyleEnum.None">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_BorderStyleEnum.Flat">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_BorderStyleEnum.Double">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_BorderStyleEnum.Raised">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_BorderStyleEnum.Inset">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_BorderStyleEnum.Groove">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_BorderStyleEnum.Fillet">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_BorderStyleEnum.Dotted">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_DisplayEnum.TextOnly">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_DisplayEnum.ImageOnly">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_DisplayEnum.Overlay">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_DisplayEnum.Stack">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_DisplayEnum.None">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.LeftTop">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.LeftCenter">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.LeftBottom">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.CenterTop">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.CenterCenter">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.CenterBottom">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.RightTop">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.RightCenter">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.RightBottom">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.Scale">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.Stretch">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.Tile">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.Hide">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.TileStretch">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextAlignEnum.LeftTop">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextAlignEnum.LeftCenter">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextAlignEnum.LeftBottom">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextAlignEnum.CenterTop">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextAlignEnum.CenterCenter">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextAlignEnum.CenterBottom">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextAlignEnum.RightTop">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextAlignEnum.RightCenter">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextAlignEnum.RightBottom">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextAlignEnum.GeneralTop">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextAlignEnum.GeneralCenter">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextAlignEnum.GeneralBottom">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextDirectionEnum.Normal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextDirectionEnum.Up">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextDirectionEnum.Down">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextEffectEnum.Flat">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextEffectEnum.Raised">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextEffectEnum.Inset">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TreeStyleFlags.None">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TreeStyleFlags.Lines">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TreeStyleFlags.Symbols">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TreeStyleFlags.ButtonBar">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TreeStyleFlags.Leaf">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TreeStyleFlags.Complete">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TreeStyleFlags.Simple">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TreeStyleFlags.CompleteLeaf">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TreeStyleFlags.SimpleLeaf">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_FocusRectEnum.None">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_FocusRectEnum.Light">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_FocusRectEnum.Heavy">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_FocusRectEnum.Solid">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_FocusRectEnum.Raised">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_FocusRectEnum.Inset">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_BarShape.None">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_BarShape.ThickBar">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_BarShape.TopBar">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_BarShape.MiddleBar">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_BarShape.BottomBar">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_BarShape.TopLine">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_BarShape.MiddleLine">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_BarShape.BottomLine">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_BarShape.Frame">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_BarShape.HalfFrame">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.Empty">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.SolidBrush">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.Gradient">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.Percent25">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.Percent50">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.Percent70">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.ForwardDiagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.BackwardDiagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.DiagonalCross">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.Vertical">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.Horizontal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.NarrowVertical">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.NarrowHorizontal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.Confetti">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.ZigZag">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.None">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.Name">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.Mode">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.Calendar">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.Duration">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.DurationUnits">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.Start">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.Finish">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.PercentComplete">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.Deadline">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.ConstraintType">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.ConstraintDate">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.Predecessors">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.ResourceNames">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.Notes">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_ProgressLineStyle.None">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_ProgressLineStyle.Solid">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_ProgressLineStyle.Dash">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_ProgressLineStyle.Dot">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_ProgressLineStyle.DashDot">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_ProgressLineStyle.DashDotDot">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon_ThemeColor.Azure">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon_ThemeColor.Blue">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon_ThemeColor.Green">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon_ThemeColor.Orange">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon_ThemeColor.Orchid">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon_ThemeColor.Red">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon_ThemeColor.Teal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon_ThemeColor.Violet">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon_ThemeLightness.DarkGray">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon_ThemeLightness.LightGray">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon_ThemeLightness.White">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon365_ThemeLightness.Colorful">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon365_ThemeLightness.Black">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon365_ThemeLightness.DarkGray">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon365_ThemeLightness.White">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.CopyCurrentToCustom">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Custom">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Standard">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Office">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.GrayScale">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Apex">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Aspect">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Civic">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Concourse">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Equity">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Flow">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Foundry">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Median">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Metro">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Module">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Opulent">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Oriel">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Origin">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Paper">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Solstice">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Technic">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Trek">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Urban">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Verve">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_GradientStyleEnum.None">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_GradientStyleEnum.Horizontal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_GradientStyleEnum.HorizontalCenter">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_GradientStyleEnum.Vertical">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_GradientStyleEnum.VerticalCenter">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_GradientStyleEnum.Diagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_GradientStyleEnum.DiagonalCenter">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_GradientStyleEnum.DiagonalBack">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_GradientStyleEnum.DiagonalBackCenter">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_GradientStyleEnum.Radial">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_GradientStyleEnum.FromCenter">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.None">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Horizontal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Vertical">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.ForwardDiagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.BackwardDiagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Cross">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.DiagonalCross">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Percent05">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Percent10">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Percent20">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Percent25">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Percent30">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Percent40">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Percent50">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Percent60">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Percent70">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Percent75">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Percent80">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Percent90">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.LightDownwardDiagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.LightUpwardDiagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.DarkDownwardDiagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.DarkUpwardDiagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.WideDownwardDiagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.WideUpwardDiagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.LightVertical">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.LightHorizontal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.NarrowVertical">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.NarrowHorizontal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.DarkVertical">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.DarkHorizontal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.DashedDownwardDiagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.DashedUpwardDiagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.DashedHorizontal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.DashedVertical">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.SmallConfetti">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.LargeConfetti">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.ZigZag">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Wave">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.DiagonalBrick">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.HorizontalBrick">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Weave">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Plaid">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Divot">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.DottedGrid">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.DottedDiamond">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Shingle">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Trellis">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Sphere">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.SmallGrid">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.SmallCheckerBoard">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.LargeCheckerBoard">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.OutlinedDiamond">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.SolidDiamond">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_AlignImageEnum.Hide">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_AlignImageEnum.Left">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_AlignImageEnum.Right">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_AlignImageEnum.Top">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_AlignImageEnum.Bottom">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_AlignImageEnum.Center">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_AlignImageEnum.Scale">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_AlignImageEnum.Stretch">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_AlignImageEnum.Tile">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_RotationEnum.Rotate0">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_RotationEnum.Rotate90">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_RotationEnum.Rotate180">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_RotationEnum.Rotate270">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.NotSet">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.None">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.Empty">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.Solid">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.Raised">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.Inset">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.RaisedBevel">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.InsetBevel">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.Groove">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.Fillet">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.Double">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.Dashed">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.Opaque">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Custom">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.System">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Office2007Blue">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Office2007Black">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Office2007Silver">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Office2010Blue">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Office2010Black">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Office2010Silver">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Windows7">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.WinXPBlue">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.WinXPSilver">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.WinXPOlive">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Royale">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Yahoo">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Aero">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Office2003Blue">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Office2003Olive">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Office2003Silver">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.OfficeXP">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Classic">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.WindowsXP">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1GaugeBorderStyle.None">
            <summary>
            Hides the border.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1GaugeBorderStyle.Solid">
            <summary>
            Specifies a solid line.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1GaugeBorderStyle.Dash">
            <summary>
            Specifies a line consisting of dashes.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1GaugeBorderStyle.Dot">
            <summary>
            Specifies a line consisting of dots.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1GaugeBorderStyle.DashDot">
            <summary>
            Specifies a line consisting of a repeating pattern of dash-dot.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1GaugeBorderStyle.DashDotDot">
            <summary>
            Specifies a line consisting of a repeating pattern of dash-dot-dot.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapDashStyle.Solid">
            <summary>
            Specifies a solid line.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapDashStyle.Dash">
            <summary>
            Specifies a line consisting of dashes.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapDashStyle.Dot">
            <summary>
            Specifies a line consisting of dots.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapDashStyle.DashDot">
            <summary>
            Specifies a line consisting of a repeating pattern of dash-dot.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapDashStyle.DashDotDot">
            <summary>
            Specifies a line consisting of a repeating pattern of dash-dot-dot.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapGradientStyle.None">
            <summary>
            No gradient filling.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapGradientStyle.Horizontal">
            <summary>
            From left (first color) to right (second color).
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapGradientStyle.HorizontalCenter">
            <summary>
            From center (first color) to left and right (second color).
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapGradientStyle.Vertical">
            <summary>
            From top (first color) to bottom (second color).
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapGradientStyle.VerticalCenter">
            <summary>
            From center (first color) to top and bottom (second color).
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapGradientStyle.Diagonal">
            <summary>
            From left-bottom (first color) to right-top (second color).
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapGradientStyle.DiagonalCenter">
            <summary>
            From center (first color) to left-bottom and right-top (second color).
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapGradientStyle.DiagonalBack">
            <summary>
            From left-top (first color) to right-bottom (second color).
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapGradientStyle.DiagonalBackCenter">
            <summary>
            From center (first color) to left-top and right-bottom (second color).
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapGradientStyle.Radial">
            <summary>
            From center (first color) to corners (second color) in radial direction.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapGradientStyle.FromCenter">
            <summary>
            From center (first color) to corners (second color).
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.IC1ThemeControl.ThemeChanged(System.Object)">
            <summary>
            For internal use.
            </summary>
            <param name="theme"></param>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.ThemeBrushBase">
            <summary>
            Abstract base class for all classes representing a brush in a theme.
            Use the <see cref="M:C1.Win.C1Themes.Shared.ThemeBrushBase.GetBrush(System.Drawing.Rectangle)"/> method to get an actual matching GDI+ brush.
            Classes derived from <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> override Equals() and
            GetHashCode() methods and compare objects by content rather than by references.
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeBrushBase.EncodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeBrushBase.DecodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeBrushBase.AssignFrom(C1.Win.C1Themes.Shared.ThemeBrushBase)">
            <summary>
            Assigns (copies) properties from another <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> to the current object.
            </summary>
            <param name="source">The source object to copy properties from.</param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeBrushBase.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/>.
            </summary>
            <returns>The <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> this method creates.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeBrushBase.GetBrush(System.Drawing.Rectangle)">
            <summary>
            Returns a GDI+ brush matching the theme brush.
            It is the caller's responsibility to dispose this brush when it is no longer needed.
            </summary>
            <param name="brushRect">The brush rectangle (used for gradient brushes).</param>
            <returns>The GDI+ <see cref="T:System.Drawing.Brush"/> object.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeBrushBase.DependOnRect">
            <summary>
            Returns true if a GDI+ brush created for this theme brush depends on the rectangle
            passed to the <see cref="M:C1.Win.C1Themes.Shared.ThemeBrushBase.GetBrush(System.Drawing.Rectangle)"/> method. E.g. gradient brushes return
            true in this method while solid return false.
            </summary>
            <returns>True if the GDI+ brush depends on the application area, false otherwise.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeBrushBase.EncodeToString">
            <summary>
            Encodes this <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> object to string.
            </summary>
            <returns>String represengin this <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> object.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeBrushBase.IsBrushesEqual(C1.Win.C1Themes.Shared.ThemeBrushBase,C1.Win.C1Themes.Shared.ThemeBrushBase)">
            <summary>
            Checks whether the two <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> objects are equal by value
            (i.e. represent identically described theme brushes).
            </summary>
            <param name="tb1">First <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> object.</param>
            <param name="tb2">Second <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> object.</param>
            <returns>True if the two brushes are identical, or are both null.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeBrushBase.TryDecodeFromString(System.String,C1.Win.C1Themes.Shared.ThemeBrushBase@)">
            <summary>
            Create <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> object from specified string.
            </summary>
            <param name="s">String representing <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> object.</param>
            <param name="value"><see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> object created from string.</param>
            <returns>True if string was successfully parsed, false otherwise.</returns>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.ThemeSolidBrush">
            <summary>
            Represents a solid theme brush.
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeSolidBrush.EncodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeSolidBrush.DecodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeSolidBrush.AssignFrom(C1.Win.C1Themes.Shared.ThemeBrushBase)">
            <summary>
            Overridden, assigns (copies) properties from another <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> to the current object.
            </summary>
            <param name="source">The source object to copy properties from.</param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeSolidBrush.GetBrush(System.Drawing.Rectangle)">
            <summary>
            Overridden, creates a GDI+ <see cref="T:System.Drawing.SolidBrush"/> matching this <see cref="T:C1.Win.C1Themes.Shared.ThemeSolidBrush"/> object.
            Can return null if color is not specified or transparent.
            </summary>
            <param name="brushRect">Target application area for the brush (ignored).</param>
            <returns>A <see cref="T:System.Drawing.SolidBrush"/> object.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeSolidBrush.DependOnRect">
            <summary>
            For internal use.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeSolidBrush.GetHashCode">
            <summary>
            For internal use.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeSolidBrush.Equals(System.Object)">
            <summary>
            For internal use.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeSolidBrush.Color">
            <summary>
            Gets or sets the color of this solid brush.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.ThemeGradientBrush">
            <summary>
            Abstract base class for gradient theme brushes.
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeGradientBrush.DependOnRect">
            <summary>
            For internal use.
            </summary>
            <returns></returns>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.ThemeLinearBrush">
            <summary>
            Abstract base class for linear gradient theme brushes.
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeLinearBrush.EncodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeLinearBrush.DecodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeLinearBrush.AssignFrom(C1.Win.C1Themes.Shared.ThemeBrushBase)">
            <summary>
            Overridden, assigns (copies) properties from another <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> to the current object.
            </summary>
            <param name="source">The source object to copy properties from.</param>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeLinearBrush.GammaCorrection">
            <summary>
            Gets or sets a value indicating whether gamma correction is enabled,
            same as LinearGradientBrush.GammaCorrection.
            </summary>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeLinearBrush.Angle">
            <summary>
            Gets or sets the angle, measured in degrees clockwise from the x-axis,
            of the gradient's orientation line. 
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush">
            <summary>
            Represents a linear gradient brush based on the starting and ending colors,
            and a <see cref="P:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush.Blend"/> object.
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush.EncodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush.DecodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush.AssignFrom(C1.Win.C1Themes.Shared.ThemeBrushBase)">
            <summary>
            Overridden, assigns (copies) properties from another <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> to the current object.
            </summary>
            <param name="source">The source object to copy properties from.</param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush.GetBrush(System.Drawing.Rectangle)">
            <summary>
            Overridden, creates a <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush"/> matching this <see cref="T:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush"/> object.
            </summary>
            <param name="brushRect">The gradient rectangle.</param>
            <returns>A <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush"/> object.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush.GetHashCode">
            <summary>
            For internal use.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush.Equals(System.Object)">
            <summary>
            For internal use.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush.StartColor">
            <summary>
            Gets or sets the starting gradient color.
            </summary>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush.EndColor">
            <summary>
            Gets or sets the ending gradient color.
            </summary>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush.Blend">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush.Blend"/> object. Can be null.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.ThemeMultiColorLinearBrush">
            <summary>
            Represents a multicolor linear gradient brush.
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeMultiColorLinearBrush.EncodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeMultiColorLinearBrush.DecodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeMultiColorLinearBrush.AssignFrom(C1.Win.C1Themes.Shared.ThemeBrushBase)">
            <summary>
            Overridden, assigns (copies) properties from another <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> to the current object.
            </summary>
            <param name="source">The source object to copy properties from.</param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeMultiColorLinearBrush.GetBrush(System.Drawing.Rectangle)">
            <summary>
            Overridden, creates a <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush"/> matching this <see cref="T:C1.Win.C1Themes.Shared.ThemeMultiColorLinearBrush"/> object.
            </summary>
            <param name="brushRect">Gradient brush rectangle.</param>
            <returns>A <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush"/> object.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeMultiColorLinearBrush.GetHashCode">
            <summary>
            For internal use.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeMultiColorLinearBrush.Equals(System.Object)">
            <summary>
            For internal use.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeMultiColorLinearBrush.InterpolationColors">
            <summary>
            Gets or sets a <see cref="T:System.Drawing.Drawing2D.ColorBlend"/> that defines a multicolor linear gradient.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.ThemeRadialBrush">
            <summary>
            Abstract base class for radial gradient theme brushes.
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeRadialBrush.CreateBrush(System.Drawing.Rectangle)">
            <summary>
            For internal use.
            </summary>
            <param name="brushRect"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeRadialBrush.EncodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeRadialBrush.DecodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeRadialBrush.AssignFrom(C1.Win.C1Themes.Shared.ThemeBrushBase)">
            <summary>
            Overridden, assigns (copies) properties from another <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> to the current object.
            </summary>
            <param name="source">The source object to copy properties from.</param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeRadialBrush.DependOnRect">
            <summary>
            For internal use.
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeRadialBrush.Center">
            <summary>
            Gets or sets a <see cref="T:System.Drawing.Point"/> structure that defines position
            of center point.
            (0,0) is the top-left corner, (100,100) is the bottom-right corner.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush">
            <summary>
            Represents a radial gradient brush based on center point,
            surrounding color and a <see cref="P:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush.Blend"/> object.
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush.EncodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush.DecodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush.AssignFrom(C1.Win.C1Themes.Shared.ThemeBrushBase)">
            <summary>
            Overridden, assigns (copies) properties from another <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> to the current object.
            </summary>
            <param name="source">The source object to copy properties from.</param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush.GetBrush(System.Drawing.Rectangle)">
            <summary>
            Overridden, creates a <see cref="T:System.Drawing.Drawing2D.PathGradientBrush"/> matching this <see cref="T:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush"/> object.
            </summary>
            <param name="brushRect">The gradient rectangle.</param>
            <returns>A <see cref="T:System.Drawing.Drawing2D.PathGradientBrush"/> object.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush.Equals(System.Object)">
            <summary>
            For internal use.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush.GetHashCode">
            <summary>
            For internal use.
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush.CenterColor">
            <summary>
            Gets or sets the color at the center of the radial gradient.
            </summary>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush.SurroundColor">
            <summary>
            Gets or sets the surrounding color of the radial gradient.
            </summary>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush.Blend">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush.Blend"/> object. Can be null.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.ThemeMultiColorRadialBrush">
            <summary>
            Represents a multicolor radial gradient brush.
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeMultiColorRadialBrush.EncodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeMultiColorRadialBrush.DecodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeMultiColorRadialBrush.AssignFrom(C1.Win.C1Themes.Shared.ThemeBrushBase)">
            <summary>
            Overridden, assigns (copies) properties from another <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> to the current object.
            </summary>
            <param name="source">The source object to copy properties from.</param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeMultiColorRadialBrush.GetBrush(System.Drawing.Rectangle)">
            <summary>
            Overridden, creates a <see cref="T:System.Drawing.Drawing2D.PathGradientBrush"/> matching this <see cref="T:C1.Win.C1Themes.Shared.ThemeMultiColorRadialBrush"/> object.
            </summary>
            <param name="brushRect">The gradient rectangle.</param>
            <returns>A <see cref="T:System.Drawing.Drawing2D.PathGradientBrush"/> object.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeMultiColorRadialBrush.Equals(System.Object)">
            <summary>
            For internal use.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeMultiColorRadialBrush.GetHashCode">
            <summary>
            For internal use.
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeMultiColorRadialBrush.InterpolationColors">
            <summary>
            Gets or sets a <see cref="T:System.Drawing.Drawing2D.ColorBlend"/> that defines this multicolor radiant gradient.
            </summary>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeBrushHelper.ForeignBrush">
            <summary>
            Gets or sets a brush object which is stored but not managed by this ThemeBrushHelper -
            i.e. it will not be disposed when this ThemeBrushHelper is disposed, or a new brush is
            assigned to it.
            Note that while the 'get' accessor is provided for this property, there is no need to use it -
            just use the <see cref="M:C1.Win.C1Themes.Shared.ThemeBrushHelper.GetBrush(System.Drawing.Rectangle)"/> method to get a usable GDI+ brush.
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeBrushHelper.CreateThemeBrushNoTransparentOrEmpty(C1.Win.C1Themes.Shared.C1ThemeProxy,System.String,C1.Win.C1Themes.Shared.ThemeBrushBase)">
            <summary>
            Creates brush based on specified theme path.
            Returns defaultValue if brush can not be created or it is solid and color is transparent or empty.
            </summary>
            <param name="themeProxy"></param>
            <param name="path"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.Utils.Utils.IsBlendEqual(System.Drawing.Drawing2D.Blend,System.Drawing.Drawing2D.Blend)">
            <summary>
            For internal use.
            </summary>
            <param name="b1"></param>
            <param name="b2"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.Utils.Utils.IsColorBlendEqual(System.Drawing.Drawing2D.ColorBlend,System.Drawing.Drawing2D.ColorBlend)">
            <summary>
            For internal use.
            </summary>
            <param name="cb1"></param>
            <param name="cb2"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.Utils.Utils.GradientModeToAngle(C1.Win.C1Themes.Shared.GradientMode)">
            <summary>
            For internal use.
            </summary>
            <param name="gradientMode"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.Utils.Utils.AngleToGradientMode(System.Single)">
            <summary>
            For internal use.
            </summary>
            <param name="angle"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.ThemeVersions">
            <summary>
            Versions of c1theme XML.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVersions.c_PlatformVersionPrefix">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVersions.c_InitialFormatVersion">
            <summary>
            First public versions of C1Themes.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVersions.c_NewBackgroundsFormatVersion">
            <summary>
            Version of theme XML when structure of BackgroundProp was changed.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVersions.c_NewRibbonFormatVersion">
            <summary>
            Version of theme XML when structure of C1Ribbon theme was changed
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.C1Calendar">
            <summary>
            The <see cref="T:C1.Win.C1Schedule.C1Calendar"/> control is a fully functional 
            Outlook-style calendar that enables end-users to select the current date or 
            the set of dates to navigate through the <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control.
            Depending on the amount of space available, the <see cref="T:C1.Win.C1Schedule.C1Calendar"/> 
            control can display one or more months at a time. 
            </summary>
            <remarks>
            A functional scheduling application can be created without using 
            the <see cref="T:C1.Win.C1Schedule.C1Calendar"/> control, 
            but the <see cref="T:C1.Win.C1Schedule.C1Calendar"/> provides visual navigational capabilities.
            </remarks>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Calendar.ThemeChanged(System.Object)">
            <summary>
            For internal use.
            </summary>
            <param name="newTheme"></param>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Calendar.SelectionChanged">
            <summary>
            Occurs when the range of selected days is changed.
            </summary>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Calendar.BeforeDayTooltipShow">
            <summary>
            Occurs before the day tooltip is shown.
            </summary>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Calendar.BeforeDayFormat">
            <summary>
            Occurs before the day tooltip is shown.
            </summary>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Calendar.DisplayRangeChanged">
            <summary>
            Occurs when display range changed.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Calendar.OnDisplayRangeChanged(System.Windows.Forms.DateRangeEventArgs)">
            <summary>
            Rises the <see cref="E:C1.Win.C1Schedule.C1Calendar.DisplayRangeChanged"/> event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Calendar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Schedule.C1Calendar"/> control.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Calendar.Schedule">
            <summary>
            Gets or sets the reference to the <see cref="T:C1.Win.C1Schedule.C1Schedule"/> 
            control associated with the <see cref="T:C1.Win.C1Schedule.C1Calendar"/> control.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Calendar.CalendarInfo">
            <summary>
            Gets the <see cref="P:C1.Win.C1Schedule.C1Calendar.CalendarInfo"/> object for the <see cref="T:C1.Win.C1Schedule.C1Calendar"/> control.
            </summary>
            <remarks>If <see cref="T:C1.Win.C1Schedule.C1Calendar"/> control is attached to the <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control,
            this property returns the same object as <see cref="P:C1.Win.C1Schedule.C1Schedule.CalendarInfo"/> property.</remarks>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Calendar.ShouldSerializeCalendarInfo">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Calendar.ShowNavigationButtons">
            <summary>
            Determines whether control displays navigation buttons in the month header.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Calendar.ShowWeekNumbers">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value indicating whether 
            <see cref="T:C1.Win.C1Schedule.C1Calendar"/> control displays week numbers to 
            the left of each row of days.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Calendar.MaxSelectionCount">
            <summary>
            Gets or sets the maximum number of days that can be selected in the <see cref="T:C1.Win.C1Schedule.C1Calendar"/> control.
            The default value is 42.
            </summary>
            <exception cref="T:System.ArgumentException">The value is less than 1.</exception>
            <remarks>This property is ignored if C1Calendar control is attached to C1Schedule control and
            property value is greater than it is allowable for C1Schedule navigation. </remarks>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Calendar.DropDownMonthCount">
            <summary>
            Gets or sets the number of items in dropdown month/year selectors in the month header.
            The default value is 9.
            </summary>
            <remarks>This property value cannot be less than 1 or greater than 12.</remarks>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Calendar.CalendarDimensions">
            <summary>
            Gets or sets the maximum number of months to display in control.
            Actual number of months depends on the available space.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Calendar.CurrentMonthDisplayOffset">
            <summary>
            Gets or sets the current month display offset.
            </summary>
            <example>
            This example shows current month at the center of the multi-dimensional calendar.
            <code>
              c1Calendar1.CalendarDimensions = 3;
              c1Calendar1.CurrentMonthDisplayOffset = 1;
            </code>
            </example>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Calendar.Theme">
            <summary>
            Gets the <see cref="P:C1.Win.C1Schedule.C1Calendar.Theme"/> object determining the control appearance.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Calendar.SelectedDates">
            <summary>
            Gets or sets an array of selected dates.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Calendar.BoldedDates">
            <summary>
            Gets or sets an array of bolded dates.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Calendar.ShouldSerializeTheme">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Calendar.VisualStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1Schedule.C1Calendar.VisualStyle"/> value determining 
            control's visual style.
            The default is <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.System"/>.
            </summary>
            <remarks><para>Setting this property to any value changes the value 
            of the <see cref="P:C1.Win.C1Schedule.C1Calendar.Theme"/> property. </para>
            <para>Setting this property to <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.Custom"/> value 
            results in creating the editable copy of currently used theme.
            The new theme has <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.Custom"/> style
            and an unique string as the Name property.</para></remarks>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Calendar.RightToLeftLayout">
             <summary>
             Gets or sets a value indicating whether the control can be laid out from right to left.
             </summary>
             <remarks>
             When the RightToLeft and RightToLeftLayout properties are both true, control is displayed with the right to left layout.
            </remarks>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Calendar.ShouldSerializeVisualStyle">
            <summary>
            Gets a value that determines whether the <see cref="P:C1.Win.C1Schedule.C1Calendar.VisualStyle"/> 
            property is set explicitly and should be persisted.
            </summary>
            <returns>True if the property was explicitly set by the user.</returns>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Calendar.ResetVisualStyle">
            <summary>
            Resets the value of the <see cref="P:C1.Win.C1Schedule.C1Calendar.VisualStyle"/> ambient property.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Calendar.OnAmbientChangedVisualStyle">
            <summary>
            Method invoked when the <see cref="P:C1.Win.C1Schedule.C1Calendar.VisualStyle"/> property changes.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Calendar.GetDisplayRange(System.Boolean)">
            <summary>
            Returns date information that represents the low and high limits of the displayed dates of the control.
            </summary>
            <param name="visible">True to retrieve only the dates that are fully contained in displayed months; 
            otherwise, false.</param>
            <returns>The begin and end dates of the displayed calendar.</returns>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Calendar.Refresh">
            <summary>
            Forces the control to invalidate its client area and immediately redraw 
            itself and any child controls.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Calendar._calendar_SelectionChanged(System.Object,C1.Win.C1Schedule.SelectionChangedEventArgs)">
            Navigates associated C1Schedule control to the selected date.
        </member>
        <member name="T:C1.Win.C1Schedule.C1Schedule">
            <summary> The <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control is a fully functional 
            Outlook-style schedule that allows users to add, edit, and manage their appointments 
            by loading all of the appointment data either from a bound DataSource or 
            the built-in DataSource, which saves and loads data from binary, XML or iCal file formats. 
            By default, the <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control will display 
            the appointment data in the <see cref="F:C1.Win.C1Schedule.ScheduleViewEnum.DayView"/> mode, 
            and the current day is the first date displayed.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Schedule.ThemeChanged(System.Object)">
            <summary>
            For internal use.
            </summary>
            <param name="newTheme"></param>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.IsGrouped">
            <summary>
            Gets a <see cref="T:System.Boolean"/> value determining whether grouping has been set for the <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.SelectedGroupItem">
            <summary>
            Gets the selected <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem"/> object or returns null if the selection is empty. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.GroupPageSize">
            <summary>
            Gets or sets the <see cref="T:System.Int32"/> value determining the maximum number of the <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem"/> objects
            displayed in UI at the same time. Increasing this value might affect performance.
            </summary>
            <value>The default value is 2.</value>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.GroupBy">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value determining the type of grouping.
            </summary>
            <value>The default value is an empty string.</value>
            <remarks>
            <para>
            This property can be equal to one for the next supported keywords:
            <list>
            <item> <term>An empty string</term><description>no grouping.</description></item>
            <item> <term>"Owner"</term><description>grouping by Appointment.Owner property value.</description></item>
            <item> <term>"Category"</term><description>grouping by Appointment.Categories property value.</description></item>
            <item> <term>"Contact"</term><description>grouping by Appointment.Links property value.</description></item>
            <item> <term>"Resource"</term><description>grouping by Appointment.Resources property value.</description></item>
            </list>
            </para>
            </remarks>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.ShowEmptyGroupItem">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value determining whether the <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control
            should display an empty group item.
            </summary>
            <value>The default value is false.</value>
            <remarks>
            This property only makes sense when the <see cref="P:C1.Win.C1Schedule.C1Schedule.GroupBy"/> property is set.
            If this property is set to True, the <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control will display a group item 
            without assigned owner (resource, contact or category). This group item will contain all appointments, 
            which don't fall into other group items. 
            </remarks>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.ShowGroupNavigation">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value determining whether the <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control
            should display group navigation buttons.
            </summary>
            <value>The default value is true.</value>
            <remarks>
            This property only makes sense when the <see cref="P:C1.Win.C1Schedule.C1Schedule.GroupBy"/> property is set.
            </remarks>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.EmptyGroupName">
            <summary>
            Gets or sets a <see cref="T:System.String"/> value used as default value for the <see cref="P:C1.Win.C1Schedule.ScheduleGroupItem.Name"/> property.
            The default value is "Calendar".
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.GroupItems">
            <summary>
            Gets a collection of all available <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem"/> objects for the currently set type of grouping.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.VisibleGroupItems">
            <summary>
            Gets a collection of currently visible <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem"/> objects.
            This collection can be used in xaml in the <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control templates.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Schedule.NavigateToScheduleGroup(System.Int32)">
            <summary>
            Navigates the <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control back or forth to another 
            <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem"/> object by the specified increment.
            </summary>
            <param name="increment">The <see cref="T:System.Int32"/> value specifying the number of groups to navigate.</param>
            <remarks>This method only makes sense when the <see cref="P:C1.Win.C1Schedule.C1Schedule.GroupBy"/> property is set.</remarks>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.Settings">
            <summary>
            Gets the <see cref="T:C1.Win.C1Schedule.C1ScheduleSettings"/> object for the <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.AppointmentComparison">
            <summary>
            Gets or sets the <see cref="T:System.Comparison`1"/> delegate which is used by 
            the <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control to sort appointments.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Schedule.Compare(C1.C1Schedule.Appointment,C1.C1Schedule.Appointment)">
            <summary>
            Performs a comparison of two <see cref="T:C1.C1Schedule.Appointment"/> objects based on their start time and subject. 
            </summary>
            <param name="x">The first <see cref="T:C1.C1Schedule.Appointment"/> to compare.</param>
            <param name="y">The second <see cref="T:C1.C1Schedule.Appointment"/> to compare.</param>
            <returns>The <see cref="T:System.Int32"/> value determining the comparison result.</returns>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Schedule.BoldedDatesChanged">
            <summary>
            Occurs when the list of dates which have any <see cref="T:C1.C1Schedule.Appointment"/> objects
            is changed.
            </summary>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Schedule.BeforeViewChange">
            <summary>
            Fired before the <see cref="P:C1.Win.C1Schedule.C1Schedule.ViewType"/> property change.
            </summary>
            <remarks>Change BeforeViewChangeEventArgs properties to cancel action, to set other
            view type or to set other range of dates.</remarks>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Schedule.BeforeAppointmentTooltipShow">
            <summary>
            Occurs before the appointment tooltip is shown.
            </summary>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Schedule.BeforeAppointmentFormat">
            <summary>
            Occurs before the appointment content is formatted.
            </summary>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Schedule.BeforeTimeFormat">
             <summary>
             Occurs before the time interval is formatted. 
             </summary>
             <remarks>Use this event to alter default time interval appearance. 
             For example, to display different working hours for different days.</remarks>
             <example> This sample shows how to alter time interval appearance depending on <see cref="T:C1.Win.C1Schedule.BeforeTimeFormatEventArgs"/> properties.
             <code>
            private void c1Schedule1_BeforeTimeFormat(object sender, BeforeTimeFormatEventArgs e)
            {
                if (e.Start.TimeOfDay == TimeSpan.FromMinutes(120))
                {
                    e.WorkTime = true;
                    if (e.Start.DayOfWeek == DayOfWeek.Sunday)
                    {
                        e.Background = Color.Red;
                    }
                }
                else if (e.Start.TimeOfDay == TimeSpan.FromMinutes(240) &amp;&amp;  e.Start.DayOfWeek != DayOfWeek.Sunday)
                {
                    e.Background = c1Schedule1.Theme.Palette.FreeHourBorder;
               }
                else
                {
                    if (e.Start.DayOfWeek == DayOfWeek.Sunday &amp;&amp; e.Duration.TotalDays == 1)
                    {
                        e.Background = Color.Navy;
                    }
                }
            }        
             </code>
             </example>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Schedule.BeforeGroupHeaderFormat">
             <summary>
             Occurs before the group header is formatted. 
             </summary>
             <remarks>Use this event to alter default group header appearance. 
             You can change group header style, tab shape or displayed content.</remarks>
             <example> This sample shows how to alter group header appearance depending on <see cref="T:C1.Win.C1Schedule.BeforeGroupHeaderFormatEventArgs"/> properties.
             <code>
            private void c1Schedule1_BeforeGroupHeaderFormat(object sender, BeforeGroupHeaderFormatEventArgs e)
            {
                Contact owner = e.Group.Owner as Contact;
                if (owner != null)
                {
                    TestSchedule.NwindDataSet.EmployeesRow row = this.nwindDataSet.Employees.FindByEmployeeID((int)owner.Key[0]);
                    if (row != null)
                    {
                        string imageName = "photo" + row.EmployeeID + ".bmp";
                        if (File.Exists(imageName))
                        {
            					// use image from file
            					// note, C1Schedule only accepts images from internet (http://..), 
            					// application resources (res://..) and local file system (file:///...).
            					e.Html = row.FirstName + " " + row.LastName + "&lt;br&gt;&lt;img src=file:///" + imageName + "/&gt;";
                        }
                    }
                }
                if (e.Style.Hot != null)
                {
                    // Hot style is applied to the group header when ScheduleGroupItem is selected.
                    e.Style.Hot.BackColor2 = e.Style.Hot.BorderColor = Color.DarkSlateGray;
                    e.Style.Hot.ForeColor = Color.WhiteSmoke;
                }
                // use rectangular tab
                e.TriangleTab = false;
            }
             </code>
             </example>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Schedule.AppointmentLinkClicked">
            <summary>
            Event that fires when the user clicks a hyperlink within the appointment element.
            </summary>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Schedule.BeforeContextMenuShow">
            <summary>
            Occurs before the context menu is shown.
            This event gets fired even if <see cref="P:C1.Win.C1Schedule.C1Schedule.ShowContextMenu"/> property is false.
            </summary>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Schedule.SelectionChanged">
            <summary>
            Occurs when the range of visible days is changed.
            </summary>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Schedule.SelectedIntervalChanged">
            <summary>
            Occurs when selected time interval is changed.
            </summary>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Schedule.SelectedAppointmentsChanged">
            <summary>
            Occurs when the list of selected appointments is changed.
            </summary>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Schedule.SelectedDaysChanged">
            <summary>
            Occurs when the range of available days is changed.
            </summary>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Schedule.BeforeReminderShow">
            <summary>
            Occurs immediately before the Reminder dialog box is displayed.
            </summary>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Schedule.BeforeAppointmentShow">
            <summary>
            Occurs immediately before the Appointment dialog box is displayed.
            </summary>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Schedule.BeforeAppointmentCreate">
            <summary>
            Occurs immediately before the new <see cref="T:C1.C1Schedule.Appointment"/> object is created.
            </summary>
            <remarks><para>CancelAppointmentEventArgs for this event is initialized according 
            to the currently selected view and date. For example: </para>
            <list type="bullet">
            <item><term></term><description>If there are some selected slots in the DayView, 
            then <see cref="P:C1.C1Schedule.Appointment.Start"/> and 
            <see cref="P:C1.C1Schedule.Appointment.End"/> properties will be initialized 
            accordingly.</description></item>
            <item><term></term><description>If there is a selected day in a WeekView 
            or in a MonthView, the <see cref="P:C1.C1Schedule.Appointment.AllDayEvent"/> 
            property will be set to true.</description></item>
            </list>
            <para>Use this event to prevent the appointment creation or to fill-in some additional appointment properties.</para>
            </remarks>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Schedule.BeforeAppointmentDelete">
            <summary>
            Occurs before an <see cref="T:C1.C1Schedule.Appointment"/> object is deleted by end-user by pressing
            'Delete' button.
            </summary>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Schedule.BeforeAppointmentDrop">
            <summary>
            Occurs before an <see cref="T:C1.C1Schedule.Appointment"/> object is dropped by end-user.
            </summary>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Schedule.BeforeAppointmentResize">
            <summary>
            Occurs before an <see cref="T:C1.C1Schedule.Appointment"/> object is resized by end-user.
            </summary>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Schedule.BeforeAppointmentEdit">
            <summary>
            Occurs before the <see cref="T:C1.C1Schedule.Appointment"/> object is edited in-place.
            </summary>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Schedule.AppointmentsLoaded">
            <summary>
            Occurs when <see cref="T:C1.C1Schedule.AppointmentCollection"/> has been loaded by the C1ScheduleStorage.Import method.
            </summary>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Schedule.BeforeExport">
            <summary>
            Occurs before export operation performed by the <see cref="M:C1.Win.C1Schedule.C1Schedule.Export(System.Object,System.String)"/> method.
            </summary>
            <remarks>Note, this event is not fired if you export data from your code using <see cref="M:C1.C1Schedule.Appointment.SaveAs(System.String,C1.C1Schedule.FileFormatEnum)"/> 
            or C1ScheduleStorage.Export methods.</remarks>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Schedule.BeforeAppointmentSave">
            <summary>
            Occurs before the <see cref="T:C1.C1Schedule.Appointment"/> object is saved by end-user.
            </summary>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Schedule.AppointmentRecurrenceStateChanged">
            <summary>
            Occurs when the <see cref="P:C1.C1Schedule.Appointment.RecurrenceState"/> property of 
            an <see cref="T:C1.C1Schedule.Appointment"/> object is changed.
            </summary>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Schedule.AppointmentCustomAction">
            <summary>
            Occurs immediately before a custom action of an <see cref="T:C1.C1Schedule.Appointment"/> object executes. 
            </summary>
            <example>
            <code>
            <![CDATA[
            private void c1Schedule1_AppointmentAdded(object sender, AppointmentEventArgs e)
            {
            	// create a new action
            	Action action = new Action();
            	action.Command = "http://www.grapecity.com";
            	// set appointment action
            	e.Appointment.Action = action;
            }
            ]]>
            </code>
            </example>
            <remarks>
            To cancel default handling, set CancelAppointmentEventArgs.Cancel property to true.
            </remarks>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Schedule.AppointmentAdded">
            <summary>
            Occurs when an <see cref="T:C1.C1Schedule.Appointment"/> object is added.
            </summary>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Schedule.AppointmentDeleted">
            <summary>
            Occurs when an <see cref="T:C1.C1Schedule.Appointment"/> object is deleted.
            </summary>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Schedule.AppointmentChanged">
            <summary>
            Occurs when an <see cref="T:C1.C1Schedule.Appointment"/> object is changed.
            </summary>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Schedule.ReminderAdd">
            <summary>
            Occurs after a <see cref="T:C1.C1Schedule.Reminder"/> object is added.
            </summary>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Schedule.ReminderChange">
            <summary>
            Occurs after a <see cref="T:C1.C1Schedule.Reminder"/> object has been modified.
            </summary>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Schedule.ReminderFire">
            <summary>
            Occurs before the <see cref="T:C1.C1Schedule.Reminder"/> object is executed.
            </summary>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Schedule.ReminderSnooze">
            <summary>
            Occurs when a <see cref="T:C1.C1Schedule.Reminder"/> object is dismissed using the Snooze button.
            </summary>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Schedule.ReminderRemove">
            <summary>
            Occurs when a <see cref="T:C1.C1Schedule.Reminder"/> object has been removed from the collection.
            </summary>
            <remarks>A reminder can be removed from the <see cref="T:C1.C1Schedule.ReminderCollection"/> collection 
            by any of the following means:
            <list type="bullet">
            <item><term></term><description>The <see cref="T:C1.C1Schedule.ReminderCollection"/>'s 
            Remove method.</description></item>
            <item><term></term><description>The <see cref="M:C1.C1Schedule.Reminder.Dismiss"/> 
            method.</description></item>
            <item><term></term><description>When the user clicks the Dismiss button.
            </description></item>
            <item><term></term><description>When a user turns off a meeting reminder 
            from within the associated item.</description></item>
            <item><term></term><description>When a user deletes an item that contains 
            a reminder.</description></item>
            </list></remarks>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Schedule.BeforeOptionsFormShow">
            <summary>
            Occurs before showing print options form.
            </summary>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Schedule.BeforePrint">
            <summary>
            Occurs before printing.
            </summary>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Schedule.BeforePrintPreview">
            <summary>
            Occurs before print preview.
            </summary>
        </member>
        <member name="E:C1.Win.C1Schedule.C1Schedule.PrintDocumentStarting">
            <summary>
            Occurs when the print document building is started.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Schedule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Schedule.C1Schedule"/> component.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.Theme">
            <summary>
            Gets the <see cref="P:C1.Win.C1Schedule.C1Schedule.Theme"/> object determining the control appearance.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Schedule.ShouldSerializeTheme">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.VisualStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1Schedule.C1Schedule.VisualStyle"/> value determining 
            control's visual style.
            The default is <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.System"/>.
            </summary>
            <remarks><para>Setting this property to any value changes the value 
            of the <see cref="P:C1.Win.C1Schedule.C1Schedule.Theme"/> property. </para>
            <para>Setting this property to <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.Custom"/> value 
            results in creating the editable copy of currently used theme.
            The new theme has <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.Custom"/> style
            and an unique string as the Name property.</para></remarks>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Schedule.ShouldSerializeVisualStyle">
            <summary>
            Gets a value that determines whether the <see cref="P:C1.Win.C1Schedule.C1Schedule.VisualStyle"/> 
            property is set explicitly and should be persisted.
            </summary>
            <returns>True if the property was explicitly set by the user.</returns>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Schedule.ResetVisualStyle">
            <summary>
            Resets the value of the <see cref="P:C1.Win.C1Schedule.C1Schedule.VisualStyle"/> ambient property.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Schedule.OnAmbientChangedVisualStyle">
            <summary>
            Method invoked when the <see cref="P:C1.Win.C1Schedule.C1Schedule.VisualStyle"/> property changes.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.LargeButtons">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value determining whether the control 
            and its dialogs should use large icons and buttons.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.AppointmentHeight">
            <summary>
            Gets or sets the <see cref="T:System.Int32"/> value determining the height of appointment elements
            in Month, TimeLine and Office 2003 Week View modes.
            Default value is -1. If this property is set to default value, appointment height will be
            determined automatically according to the current view font size.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.MinAppointmentWidth">
            <summary>
            Gets or sets the <see cref="T:System.Int32"/> value determining the minimal width of appointment elements in TimeLine view.
            Default value is -1.  If this property is set to default value, appointment width is determined automatically according to current view settings and style options.
            </summary>
            <remarks>The actual width might be bigger depending on used font size.</remarks>        
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.MinSlotWidth">
            <summary>
            Gets or sets the <see cref="T:System.Int32"/> value determining the minimal width of slots in TimeLine view.
            Default value is -1.  If this property is set to default value, slot width is determined automatically according to current view settings and style options.
            </summary>
            <remarks>The actual width might be bigger depending on used font size.</remarks>        
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.MinDaySlotWidth">
            <summary>
            Gets or sets the <see cref="T:System.Int32"/> value determining the minimal width of day slots in TimeLine view when <see cref="P:C1.Win.C1Schedule.C1Schedule.TimeLineStyle"/> is <see cref="F:C1.Win.C1Schedule.TimeLineStyleEnum.Days"/>.
            Default value is -1.  If this property is set to default value, slot width is determined automatically according to current view settings and style options.
            </summary>
            <remarks>The actual width might be bigger depending on used font size.</remarks>        
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.WeekViewStyle">
            <summary>
            Gets or sets the <see cref="T:C1.Win.C1Schedule.WeekViewStyleEnum"/> value determining 
            Week View style.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.TimeLineStyle">
            <summary>
            Gets or sets the <see cref="T:C1.Win.C1Schedule.TimeLineStyleEnum"/> value determining 
            the Time Line style.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.ShowTitle">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value determining whether the control 
            shows the title panel.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.ViewType">
            <summary>
            Gets or sets the <see cref="T:C1.Win.C1Schedule.ScheduleViewEnum"/> value determining 
            currently displayed view.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.ShowWorkTimeOnly">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value indicating whether the control should show 
            only working hours in Day and TimeLine views.  
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.ShowAllDayArea">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value indicating whether the control should show 
            All-Day area in a Day View. The default value is True. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.ShowWeekends">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value indicating whether the control should show 
            weekends in a Month View. The default value is True. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.WeekTabFormat">
            <summary>
            Determines the content of week tabs in the month view mode.
            The default value is <see cref="F:C1.Win.C1Schedule.WeekTabFormat.Floating"/>.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.EditOptions">
            <summary>
            Gets or sets a <see cref="P:C1.Win.C1Schedule.C1Schedule.EditOptions"/> value, determining which 
            actions are allowed to the end-user.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.ShowContextMenu">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value indicating whether the control 
            should show context menu.  
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.ContextMenuStrip">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1Schedule.C1Schedule.ContextMenuStrip"/> associated with this control.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.ShowAppointmentToolTip">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value indicating whether the control should show 
            tooltip when mouse is over an appointment.  
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.ShowAppointmentStatus">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value indicating whether the control should show 
            appointment status in Day, WorkingWeek, Week and TimeLine views.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.ShowReminderForm">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value indicating whether the control 
            should show the reminder form when a reminder alerts.  
            </summary>
            <remarks>At runtime user can close Reminder Form by 'x' button.
            This operation doesn't actually dispose Reminder Form or 
            change <see cref="P:C1.Win.C1Schedule.C1Schedule.ShowReminderForm"/> property. 
            It just hides the form. In any moment you can show Reminder Form 
            again by setting the <see cref="P:C1.Win.C1Schedule.C1Schedule.ShowReminderForm"/> property to true.</remarks>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.CalendarInfo">
            <summary>
            Gets the <see cref="P:C1.Win.C1Schedule.C1Schedule.CalendarInfo"/> object for the <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.DataStorage">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.C1ScheduleStorage"/> object for the <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.BoldedDates">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.DateList"/> object that determines 
            which dates contain appointments. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.Locations">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.List`1"/> list containing string descriptions of available locations.
            </summary>
            <remarks>The <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control uses this list to populate Locations ComboBox in the
            <see cref="T:C1.Win.C1Schedule.Forms.AppointmentForm"/> form. 
            You can pre-populate this list at application start.
            The <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control extends this list automatically every time when the new
            location value is used in one of the <see cref="T:C1.C1Schedule.Appointment"/> objects.
            You can use this list to fill Locations comboBox in the custom appointment dialog.</remarks>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.SelectedDates">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.DateList"/> object that determines 
            currently selected dates in the <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.CurrentDate">
            <summary>
            Gets the <see cref="T:System.DateTime"/> value that determines 
            currently selected date in the <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.SelectedInterval">
            <summary>
            Gets the <see cref="T:C1.Win.C1Schedule.TimeInterval"/> object representing 
            currently selected time interval.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.SelectedAppointments">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.AppointmentList"/> object containing 
            the list of currently selected <see cref="T:C1.C1Schedule.Appointment"/> objects.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.AllowDrop">
            <summary>
            Gets or sets a value indicating whether the control can accept data
            that the user drags onto it.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.PrintInfo">
            <summary>
            Gets the <see cref="P:C1.Win.C1Schedule.C1Schedule.PrintInfo"/> object responsible for printing support.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Schedule.GetDateTimeAtPoint(System.Drawing.Point)">
            <summary>
            Returns the <see cref="T:System.DateTime"/> value which is located
            in the Schedule at the given screen point.
            </summary>
            <param name="location">The <see cref="T:System.Drawing.Point"/> value in screen coordinates.</param>
            <returns>The <see cref="T:System.DateTime"/> value at given point if it's a point inside 
            of scheduled area; the value of <see cref="P:C1.Win.C1Schedule.C1Schedule.CurrentDate"/> property in other case.</returns>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Schedule.GetAppointmentAtPoint(System.Drawing.Point)">
            <summary>
            Returns the <see cref="T:C1.C1Schedule.Appointment"/> object which is located
            in the Schedule at the given screen point.
            </summary>
            <param name="location">The <see cref="T:System.Drawing.Point"/> value in screen coordinates.</param>
            <returns>The <see cref="T:C1.C1Schedule.Appointment"/> value at given point if any; Null in other case.</returns>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Schedule.GoToDate(System.DateTime)">
            <summary>
            Sets the specified date as the start date of the scheduler, 
            meaning that on this date the scheduler will show its data. 
            This operation doesn't change the type of view.
            </summary>
            <param name="date">The <see cref="T:System.DateTime"/> value.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Schedule.EnsureVisibleTime(System.TimeSpan)">
            <summary>
            Ensures that the specified time is visible within the control, 
            scrolling the contents if necessary.
            This method doesn't make sense for MonthView and Office 2003 WeekView modes.
            </summary>
            <param name="time"></param>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Schedule.ShowDates(System.DateTime[])">
            <summary>
            Shows specified dates in the scheduler choosing appropriate type of view.
            </summary>
            <param name="dates">The array of <see cref="T:System.DateTime"/> values.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Schedule.ShowDates(System.DateTime[],System.Nullable{C1.Win.C1Schedule.ScheduleViewEnum})">
            <summary>
            Shows specified dates in the scheduler with the specified view type.
            </summary>
            <param name="dates">The array of <see cref="T:System.DateTime"/> values.</param>
            <param name="view">The <see cref="T:C1.Win.C1Schedule.ScheduleViewEnum"/> value to show. 
            If this parameter has no value, the <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control 
            will select the most appropriate view depending on specified dates.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Schedule.Export(System.Object,System.String)">
            <summary>
            Shows the <see cref="T:System.Windows.Forms.SaveFileDialog"/> and exports specified data to the selected file.
            </summary>
            <param name="parameter">an <see cref="T:System.Object"/> to export. This parameter can be one of the next:
            <list type="bullet">
            <item><term>null</term><description> for export all C1Schedule data;</description></item>
            <item><term><see cref="T:C1.C1Schedule.Appointment"/>;</term></item>
            <item><term><see cref="T:System.Collections.Generic.IList`1"/>.</term></item></list>
            </param>
            <param name="dialogTitle">the <see cref="T:System.String"/> value used as a SaveFileDialog title.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Schedule.Import(System.String)">
            <summary>
            Shows the <see cref="T:System.Windows.Forms.OpenFileDialog"/> and tries to export data from the selected file.
            </summary>
            <param name="dialogTitle">the <see cref="T:System.String"/> value used as an OpenFileDialog title.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Schedule.CreateAppointment">
            <summary>
            Creates a new <see cref="T:C1.C1Schedule.Appointment"/> object with default settings, 
            shows it in the Edit Appointment dialog, and then adds it 
            to the <see cref="P:C1.C1Schedule.AppointmentStorage.Appointments"/> collection. 
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Schedule.CreateAllDayEvent">
            <summary>
            Creates a new all-day <see cref="T:C1.C1Schedule.Appointment"/> object, 
            shows it in the Edit Appointment dialog, and then adds it 
            to the <see cref="P:C1.C1Schedule.AppointmentStorage.Appointments"/> collection. 
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Schedule.CreateReccuringAllDayEvent">
            <summary>
            Creates a new recurring all-day <see cref="T:C1.C1Schedule.Appointment"/> object, 
            shows it in the Edit Appointment dialog, and then adds it 
            to the <see cref="P:C1.C1Schedule.AppointmentStorage.Appointments"/> collection. 
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Schedule.CreateReccuringAppointment">
            <summary>
            Creates a new recurring <see cref="T:C1.C1Schedule.Appointment"/> object, 
            shows it in the Edit Appointment dialog, and then adds it 
            to the <see cref="P:C1.C1Schedule.AppointmentStorage.Appointments"/> collection. 
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Schedule.EditRecurrence(C1.C1Schedule.Appointment)">
            <summary>
            Opens <see cref="T:C1.Win.C1Schedule.Forms.RecurrenceForm"/> dialog for editing existent or newly created <see cref="T:C1.C1Schedule.RecurrencePattern"/> object for the specified <see cref="T:C1.C1Schedule.Appointment"/>.
            </summary>
            <param name="appointment">The <see cref="T:C1.C1Schedule.Appointment"/> object to edit.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Schedule.EditAppointment(C1.C1Schedule.Appointment)">
            <summary>
            Shows specified <see cref="T:C1.C1Schedule.Appointment"/> object in the Edit Appointment dialog. 
            </summary>
            <param name="app">The <see cref="T:C1.C1Schedule.Appointment"/> object to edit.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Schedule.RemoveAppointment(C1.C1Schedule.Appointment)">
            <summary>
            Removes specified <see cref="T:C1.C1Schedule.Appointment"/> object from the <see cref="T:C1.C1Schedule.AppointmentStorage"/>. 
            </summary>
            <param name="app">The <see cref="T:C1.C1Schedule.Appointment"/> object to remove.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Schedule.SelectAppointment(C1.C1Schedule.Appointment,System.Boolean)">
            <summary>
            Selects specified <see cref="T:C1.C1Schedule.Appointment"/> object in the user interface.
            </summary>
            <remarks>This method doesn't change or scroll current view.
            Use <see cref="M:C1.Win.C1Schedule.C1Schedule.GoToDate(System.DateTime)"/> method to bring desired <see cref="T:C1.C1Schedule.Appointment"/> 
            object into view:
            <code>GoToDate(appointment.Start);</code>
            </remarks>
            <param name="appointment">The <see cref="T:C1.C1Schedule.Appointment"/> object to select.</param>
            <param name="extendSelection">The <see cref="T:System.Boolean"/> value specifying the kind
            of selection to be made. 
            If true, specified <see cref="T:C1.C1Schedule.Appointment"/> object 
            will be added to the current selection.
            If false, current selection will be changed 
            by the specified <see cref="T:C1.C1Schedule.Appointment"/> object.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Schedule.BeginUpdate">
            <summary>
            Prevents the control from drawing until the <see cref="M:C1.Win.C1Schedule.C1Schedule.EndUpdate"/> method 
            is called.
            </summary>
            <remarks>Call to <see cref="M:C1.Win.C1Schedule.C1Schedule.BeginUpdate"/> method must be paired with 
            a call to <see cref="M:C1.Win.C1Schedule.C1Schedule.EndUpdate"/> method.
            Use try ... finally statements to ensure that <see cref="M:C1.Win.C1Schedule.C1Schedule.EndUpdate"/> method
            is always called.</remarks>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Schedule.EndUpdate">
            <summary>
            Resumes drawing of the control after drawing is suspended by 
            the <see cref="M:C1.Win.C1Schedule.C1Schedule.BeginUpdate"/> method.
            </summary>
            <remarks>Call to <see cref="M:C1.Win.C1Schedule.C1Schedule.BeginUpdate"/> method must be paired with 
            a call to <see cref="M:C1.Win.C1Schedule.C1Schedule.EndUpdate"/> method.
            Use try ... finally statements to ensure that <see cref="M:C1.Win.C1Schedule.C1Schedule.EndUpdate"/> method
            is always called.</remarks>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Schedule.OnHandleCreated(System.EventArgs)">
            <summary>
            Overrides the default behavior.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.BorderStyle">
            <summary>
            Gets or sets the type of border around the control.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.Cursor">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1Schedule.C1Schedule.Cursor"/> that appears when 
            the mouse moves over the control.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.System#ComponentModel#ISite#Component">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.System#ComponentModel#ISite#Container">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.System#ComponentModel#ISite#DesignMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.System#ComponentModel#ISite#Name">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Schedule.System#IServiceProvider#GetService(System.Type)">
            <summary>
            
            </summary>
            <param name="serviceType"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Schedule.Refresh">
            <summary>
            Refreshes the control.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.ScrollPosition">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.Point"/> value determining the current scroll position.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.ScrollSize">
            <summary>
            Gets the size of the document.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1Schedule.ScrollableRectangle">
            <summary>
            This property is used to get the scroll page size.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.C1Schedule.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Schedule.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.C1Schedule.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.WeekTabFormat">
            <summary>
            Determines the content of week tabs in the C1Schedule month view.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.WeekTabFormat.Floating">
            <summary>
            Use long or short date pattern depending on the available space.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.WeekTabFormat.Short">
            <summary>
            Always show date range using short date pattern.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.WeekTabFormat.WeekNumber">
            <summary>
            Display the week of the year number.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.WeekTabStyle">
            <summary>
            Determines appearance of week tabs in the Month view.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.WeekTabStyle.Office2007">
            <summary>
            Week tabs of Office2007 appearance.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.WeekTabStyle.Office2016">
            <summary>
            Week tabs of Office2016 appearance.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.ScheduleViewEnum">
            <summary>
            Determines the type of view to display in the <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.ScheduleViewEnum.DayView">
            <summary>
            Day view.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.ScheduleViewEnum.WorkWeekView">
            <summary>
            Work week view.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.ScheduleViewEnum.WeekView">
            <summary>
            Week view.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.ScheduleViewEnum.MonthView">
            <summary>
            Month view.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.ScheduleViewEnum.TimeLineView">
            <summary>
            Time Line view.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.WeekViewStyleEnum">
            <summary>
            Determines the type of week view to display in the <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.WeekViewStyleEnum.Office2003">
            <summary>
            Office 2003 week view.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.WeekViewStyleEnum.Office2007">
            <summary>
            Office 2007 week view (7 full days as in Day View).
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.TimeLineStyleEnum">
            <summary>
            Determines the type of the time line to display in the <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.TimeLineStyleEnum.Hours">
            <summary>
            The time line with time scale, defined by the <see cref="P:C1.C1Schedule.CalendarInfo.TimeScale"/> property value.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.TimeLineStyleEnum.Days">
            <summary>
            The time line with 1 day time scale.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.GroupTabStyle">
            <summary>
            Determines appearance of group headers in the Week, Day and Month views of the <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.GroupTabStyle.FullWidth">
            <summary>
            Group headers of rectangular shape take the full width of the corresponding group.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.GroupTabStyle.Office2007">
            <summary>
            Group headers of Office2007 appearance.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.GroupTabStyle.Office2016">
            <summary>
            Group headers of Office2016 appearance.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.EditOptions">
            <summary>
            Determines the set of edit options available to the end-user.	
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.EditOptions.None">
            <summary>
            None of edit options are available to the end-user.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.EditOptions.AllowInplaceEdit">
            <summary>
            Allows activation of an in-place editor for an appointment.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.EditOptions.AllowDrag">
            <summary>
            Allows dragging and resizing operations for an appointment.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.EditOptions.AllowAppointmentEdit">
            <summary>
            Allows editing of an appointment by an end-user. 
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.EditOptions.AllowAppointmentCreate">
            <summary>
            Allows creating of new appointments by an end-user. 
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.EditOptions.AllowAppointmentDelete">
            <summary>
            Allows deleting of an appointment by an end-user. 
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.EditOptions.All">
            <summary>
            Allows all edit operations. It is the default value.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.SelectionChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.C1Schedule.C1Schedule.SelectionChanged"/> event 
            of the <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.SelectionChangedEventArgs.Selection">
            <summary>
            Gets an array of selected dates.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.TimeInterval">
            <summary>
            The <see cref="T:C1.Win.C1Schedule.TimeInterval"/> object represents continuous interval of time.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.TimeInterval.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Schedule.TimeInterval"/> class.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value representing 
            the beginning of time interval.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value representing 
            the end of time interval.</param>
        </member>
        <member name="P:C1.Win.C1Schedule.TimeInterval.Start">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value 
            representing the beginning of time interval.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.TimeInterval.End">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value 
            representing the end of time interval.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.TimeInterval.Contains(System.DateTime)">
            <summary>
            Returns a value indicating whether a specified <see cref="T:System.DateTime"/> value belongs to the current interval of time.
            </summary>
            <param name="date">The <see cref="T:System.DateTime"/> value to check.</param>
            <returns>True if value is in the interval; otherwise, False.</returns>
        </member>
        <member name="T:C1.Win.C1Schedule.SelectedIntervalChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.C1Schedule.C1Schedule.SelectedIntervalChanged"/> event 
            of the <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.SelectedIntervalChangedEventArgs.Interval">
            <summary>
            Gets the <see cref="T:C1.Win.C1Schedule.TimeInterval"/> object representing currently 
            selected time interval.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.BeforeViewChangeEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.C1Schedule.C1Schedule.BeforeViewChange"/> event 
            of the <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.BeforeViewChangeEventArgs.ViewType">
            <summary>
            Gets or sets <see cref="T:C1.Win.C1Schedule.ScheduleViewEnum"/> value determining 
            which type of view should be selected.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.BeforeViewChangeEventArgs.Dates">
            <summary>
            Gets or sets the range of dates which should be selected in the view. 
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.SelectionType">
            <summary>
            Determines the type of UI element which is currently selected in the <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control UI.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.SelectionType.Appointment">
            <summary>
            Appointment element.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.SelectionType.TimeInterval">
            <summary>
            Either day element or time slot element.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.SelectionType.DayTitle">
            <summary>
            Day title.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.SelectionType.TimeRuler">
            <summary>
            Time ruler element.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.SelectionType.GroupHeader">
            <summary>
            The group header.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.SelectionType.None">
            <summary>
            The selection area belongs to the <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control, 
            but doesn't belong to any active area described by the other <see cref="T:C1.Win.C1Schedule.SelectionType"/> members.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.BeforeContextMenuShowEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.C1Schedule.C1Schedule.BeforeContextMenuShow"/> event 
            of the <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.BeforeContextMenuShowEventArgs.Appointment">
            <summary>
            Gets the <see cref="P:C1.Win.C1Schedule.BeforeContextMenuShowEventArgs.Appointment"/> object for which context menu is about to show. 
            </summary>
            <remarks>This property can be null.</remarks>
        </member>
        <member name="P:C1.Win.C1Schedule.BeforeContextMenuShowEventArgs.SelectionType">
            <summary>
            Gets the <see cref="P:C1.Win.C1Schedule.BeforeContextMenuShowEventArgs.SelectionType"/> value determining the UI element type for which context menu is about to show.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.BeforeAppointmentTooltipShowEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.C1Schedule.C1Schedule.BeforeAppointmentTooltipShow"/> event 
            of the <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.BeforeAppointmentTooltipShowEventArgs.Text">
            <summary>
            Gets or sets tooltip text. 
            </summary>
            <remarks>Use html encoding to format the text.</remarks>
        </member>
        <member name="T:C1.Win.C1Schedule.BeforeDayTooltipShowEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.C1Schedule.C1Calendar.BeforeDayTooltipShow"/> event 
            of the <see cref="T:C1.Win.C1Schedule.C1Calendar"/> control. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.BeforeDayTooltipShowEventArgs.Text">
            <summary>
            Gets or sets tooltip text. The default text is an empty string. 
            </summary>
            <remarks>Use html encoding to format the text.</remarks>
        </member>
        <member name="P:C1.Win.C1Schedule.BeforeDayTooltipShowEventArgs.Day">
            <summary>
            Gets the date for which tooltip is about to be shown.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.BeforeDayFormatEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.C1Schedule.C1Calendar.BeforeDayFormat"/> event 
            of the <see cref="T:C1.Win.C1Schedule.C1Calendar"/> control. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.BeforeDayFormatEventArgs.Date">
            <summary>
            Gets the <see cref="T:System.DateTime"/> value determining the currently formatted date.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.BeforeDayFormatEventArgs.Style">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1Schedule.BeforeDayFormatEventArgs.Style"/> object, which will be used for displaying the date.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.AppointmentIcons">
            <summary>
            Determines the set of default icons shown in the appointment element.	
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.AppointmentIcons.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.AppointmentIcons.Occurrence">
            <summary>
            Shows 'occurrence' icon.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.AppointmentIcons.Exception">
            <summary>
            Shows 'exception' icon.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.AppointmentIcons.Locked">
            <summary>
            Shows 'locked' icon (for private appointments). 
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.AppointmentIcons.Reminder">
            <summary>
            Shows 'reminder' icon if reminder is set for appointment. 
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.AppointmentIcons.Continued">
            <summary>
            Shows 'continued' icon if element is a second or later 
            part of the single appointment. 
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.BeforeAppointmentFormatEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.C1Schedule.C1Schedule.BeforeAppointmentFormat"/> event 
            of the <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.BeforeAppointmentFormatEventArgs.Text">
            <summary>
            Gets or sets the text displayed in the appointment element. 
            </summary>
            <remarks>Use html encoding to format the text.</remarks>
        </member>
        <member name="P:C1.Win.C1Schedule.BeforeAppointmentFormatEventArgs.Icons">
            <summary>
            Gets or sets the <see cref="T:C1.Win.C1Schedule.AppointmentIcons"/> value, specifying the 
            set of icons to be displayed in the appointment element.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.BeforeAppointmentFormatEventArgs.BackColor">
            <summary>
            Gets or sets <see cref="T:System.Drawing.Color"/> value specifying custom
            background color for the appointment element. 
            </summary>
            <remarks>Leave this value <see cref="F:System.Drawing.Color.Empty"/> to
            use default background color determined by the <see cref="P:C1.C1Schedule.Appointment.Label"/> property.</remarks>
        </member>
        <member name="P:C1.Win.C1Schedule.BeforeAppointmentFormatEventArgs.BackColor2">
            <summary>
            Gets or sets <see cref="T:System.Drawing.Color"/> value specifying custom
            background gradient color for the appointment element. 
            </summary>
            <remarks>Leave this value <see cref="F:System.Drawing.Color.Empty"/> to
            use default background gradient color determined 
            by the <see cref="P:C1.C1Schedule.Appointment.Label"/> property.</remarks>
        </member>
        <member name="P:C1.Win.C1Schedule.BeforeAppointmentFormatEventArgs.UIElementDate">
            <summary>
            Gets the date of the current UI element representing appointment.
            </summary>
            <remarks>Multi day appointments are represented by several UI elements. Use this property
            to distinguish the first UI element, the second one, etc...</remarks>
        </member>
        <member name="P:C1.Win.C1Schedule.BeforeAppointmentFormatEventArgs.ForeColor">
            <summary>
            Gets or sets <see cref="T:System.Drawing.Color"/> value specifying custom
            foreground color for the appointment element. 
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.BeforeTimeFormatEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.C1Schedule.C1Schedule.BeforeTimeFormat"/> event 
            of the <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.BeforeTimeFormatEventArgs.Group">
            <summary>
            Gets the <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem"/> object which is currently formatted.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.BeforeTimeFormatEventArgs.Start">
            <summary>
            Gets the <see cref="T:System.DateTime"/> value determining the start date and time of the time interval to format.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.BeforeTimeFormatEventArgs.Duration">
            <summary>
            Gets the <see cref="T:System.TimeSpan"/> value determining the duration of the time interval to format.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.BeforeTimeFormatEventArgs.WorkTime">
            <summary>
            Gets or sets a value indicating whether time interval should be displayed as a working time.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.BeforeTimeFormatEventArgs.Background">
            <summary>
            Gets or sets <see cref="T:System.Drawing.Color"/> value specifying custom
            background color for the time interval element. 
            </summary>
            <remarks>Leave this value <see cref="F:System.Drawing.Color.Empty"/> to
            use default background color determined by the <see cref="P:C1.Win.C1Schedule.C1Schedule.CalendarInfo"/> settings 
            and by the <see cref="P:C1.Win.C1Schedule.BeforeTimeFormatEventArgs.WorkTime"/> property value.</remarks>
        </member>
        <member name="T:C1.Win.C1Schedule.AppointmentLinkClickedEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.C1Schedule.C1Schedule.AppointmentLinkClicked"/> event.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.AppointmentLinkClickedEventArgs.Button">
            <summary>
            Gets the button that was clicked on the link.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.AppointmentLinkClickedEventArgs.HRef">
            <summary>
            Gets the value of the link's HREF attribute.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.AppointmentLinkClickedEventArgs.Target">
            <summary>
            Gets the value of the link's TARGET attribute.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.SelectedAppointmentsChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.C1Schedule.C1Schedule.SelectedAppointmentsChanged"/> event.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.SelectedAppointmentsChangedEventArgs.Appointments">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.AppointmentList"/> object representing
            currently selected appointments. This value can be null if 
            there is no selected appointment.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.BeforeGroupHeaderFormatEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.C1Schedule.C1Schedule.BeforeGroupHeaderFormat"/> event 
            of the <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.BeforeGroupHeaderFormatEventArgs.Group">
            <summary>
            Gets the <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem"/> object which is currently formatted.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.BeforeGroupHeaderFormatEventArgs.Html">
            <summary>
            Gets or sets the html text displayed in the group header.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.BeforeGroupHeaderFormatEventArgs.TriangleTab">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value determining the group header tab appearance.
            If this property value is true, C1Schedule will show MS Outlook 2010-alike group headers. 
            If this property value is false, C1Schedule will display rectangular group headers.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.BeforeGroupHeaderFormatEventArgs.GroupTabStyle">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1Schedule.BeforeGroupHeaderFormatEventArgs.GroupTabStyle"/> value determining the group header tab appearance.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.BeforeGroupHeaderFormatEventArgs.Style">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1Schedule.BeforeGroupHeaderFormatEventArgs.Style"/> object, which will be used for displaying the group header.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.ExchangeEventArgs">
            <summary>
            Provides data for the <see cref="E:C1.Win.C1Schedule.C1Schedule.BeforeExport"/> event of the <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.ExchangeEventArgs.Data">
            <summary>
            Gets or sets the data which are about to be exported.
            This property should contain one of the next:
            <list type="bullet">
            <item><term>null</term><description> to export all content of the C1Schedule.DataStorage.AppointmentStorage.Appointments collection;</description></item>
            <item><term><see cref="T:C1.C1Schedule.Appointment"/>;</term></item>
            <item><term><see cref="T:System.Collections.Generic.IList`1"/>.</term></item></list>
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.ExchangeEventArgs.Format">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.FileFormatEnum"/> value, selected by the end-user.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.Design.C1CalendarActionList">
            <summary>
            Summary description for C1ScheduleActionList.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.Design.C1ScheduleActionList">
            <summary>
            Summary description for C1ScheduleActionList.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.Design.DataSourceEditor">
            <summary>
            <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor"/> used to edit data source properties. 
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.DataSourceEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Schedule.Design.DataSourceEditor"/> class.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.DataSourceEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <see cref="M:C1.Win.C1Schedule.Design.DataSourceEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)"/> method.
            </summary>
            <param name="ctx">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <returns>Always returns <b>UITypeEditorEditStyle.DropDown</b>.</returns>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.DataSourceEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the value of the specified object.
            </summary>
            <param name="ctx">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <param name="provider">An <see cref="T:System.IServiceProvider"/> through which editing services may be obtained.</param>
            <param name="value">An instance of the value being edited.</param>
            <returns>A <see cref="T:C1.Framework.Thickness"/> value containing the new value of the object.</returns>
        </member>
        <member name="F:C1.Win.C1Schedule.Design.ThicknessEditorControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.ThicknessEditorControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.ThicknessEditorControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.Design.ThicknessEditor">
            <summary>
            <see cref="T:System.Drawing.Design.UITypeEditor"/> used to edit thickness properties. 
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.ThicknessEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Schedule.Design.ThicknessEditor"/> class.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.ThicknessEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <see cref="M:C1.Win.C1Schedule.Design.ThicknessEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)"/> method.
            </summary>
            <param name="ctx">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <returns>Always returns <b>UITypeEditorEditStyle.DropDown</b>.</returns>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.ThicknessEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the value of the specified object.
            </summary>
            <param name="ctx">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <param name="provider">An <see cref="T:System.IServiceProvider"/> through which editing services may be obtained.</param>
            <param name="value">An instance of the value being edited.</param>
            <returns>A <see cref="T:C1.Framework.Thickness"/> value containing the new value of the object.</returns>
        </member>
        <member name="T:C1.Win.C1Schedule.Design.PointEditor">
            <summary>
            Implements the text editor for edit the Point.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.Design.BlendEditor">
            <summary>
            Implements the text editor for edit the Blend.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.Design.Forms.ErrorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.Forms.ErrorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.Forms.ErrorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.Design.Forms.ScheduleBehaviorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.Forms.ScheduleBehaviorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.Forms.ScheduleBehaviorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.Design.Forms.StorageEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.Forms.StorageEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.Forms.StorageEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.Design.Forms.AppointmentMappingControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.Forms.AppointmentMappingControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.Forms.AppointmentMappingControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.Design.Forms.BaseMappingControl`2.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.Forms.BaseMappingControl`2.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.Forms.BaseMappingControl`2.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.Design.Forms.BaseObjectMappingControl`1.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.Forms.BaseObjectMappingControl`1.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.Forms.BaseObjectMappingControl`1.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.Design.Forms.BaseThemeForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.Forms.BaseThemeForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.Forms.BaseThemeForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.Design.Forms.CalendarSettingsForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.Forms.CalendarSettingsForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.Forms.CalendarSettingsForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.Design.Forms.CalendarThemeForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.Forms.CalendarThemeForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.Forms.CalendarThemeForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.Design.Forms.CategoryMappingControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.Forms.CategoryMappingControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.Forms.CategoryMappingControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.Design.Forms.ContactMappingControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.Forms.ContactMappingControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.Forms.ContactMappingControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.Design.Forms.DataForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.Forms.DataForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.Forms.DataForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.Design.Forms.DayCollectionForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.Forms.DayCollectionForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.Forms.DayCollectionForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.Design.Forms.LabelMappingControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.Forms.LabelMappingControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.Forms.LabelMappingControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.Design.Forms.ResourceMappingControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.Forms.ResourceMappingControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.Forms.ResourceMappingControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.Design.Forms.ScheduleSettingsForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.Forms.ScheduleSettingsForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.Forms.ScheduleSettingsForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.Design.Forms.ScheduleThemeForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.Forms.ScheduleThemeForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.Forms.ScheduleThemeForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.Design.Forms.StatusMappingControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.Forms.StatusMappingControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.Forms.StatusMappingControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.Design.BaseDesigner.C1#Util#Design#Floaties#IFloatieOwner#Position">
            <summary>
            Position of small button with arrow for showing main floatie
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.Design.IconPicker">
            <summary>
            IconPicker
            Uses the Image UITypeEditor to show a form where users can pick icons
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.Design.BaseFloatieForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.BaseFloatieForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Design.BaseFloatieForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.Localization.C1DescriptionAttribute">
            <summary>
            C1DescriptionAttribute replaces the DescriptionAttribute
            and uses the StringsManager and DesignStrings classes to
            return the localized Attribute string.   
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.Localization.C1CategoryAttribute">
            <summary>
            C1CategoryAttribute replaces the CategoryAttribute
            and uses the StringsManager and DesignStrings classes to
            return the localized Attribute string.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.Localization.DesignStrings">
            <summary>
            The <see cref="T:C1.Win.C1Schedule.Localization.DesignStrings"/> class contains static properties used for UI design-time localization.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.Localization.DesignStrings.ResourceManager">
            <summary>
            The <see cref="P:C1.Win.C1Schedule.Localization.DesignStrings.ResourceManager"/> object used for lookup resources.
            </summary>
            <remarks>Set this property to the valid value if 
            you define resources in a Custom Control assembly.</remarks>
        </member>
        <member name="P:C1.Win.C1Schedule.Localization.DesignStrings.UICulture">
            <summary>
            Returns default <see cref="T:System.Globalization.CultureInfo"/> object used as fallback culture.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.Localization.Strings">
            <summary>
            The <see cref="T:C1.Win.C1Schedule.Localization.Strings"/> class contains static properties used for UI run-time localization.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.Localization.Strings.C1Schedule.Exceptions.StartEndValidationFailed">
            <summary>
            Determines the warning message, shown when Appointment End property value is greater than the Start property value.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.Localization.Strings.MiscStrings.PrintdocInitializationFailed">
            <summary>
            Determines the warning message, shown when C1PrintDocument can't be initialized.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.Printing.FontPicker.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Printing.FontPicker.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Printing.FontPicker.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.Printing.PrintOptionsForm">
            <summary>
            The <see cref="T:C1.Win.C1Schedule.Printing.PrintOptionsForm"/> allows selecting printing style from 
            the list of available styles and setting other printing options.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Printing.PrintOptionsForm.#ctor(C1.C1Schedule.Printing.PrintInfo,C1.C1Schedule.Printing.PrintStyle,C1.C1Schedule.Printing.PrintContextType)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Schedule.Printing.PrintOptionsForm"/> form.
            </summary>
            <param name="info">The <see cref="T:C1.C1Schedule.Printing.PrintInfo"/> object.</param>
            <param name="defaultStyle">The <see cref="T:C1.C1Schedule.Printing.PrintStyle"/> object which should be selected initially.</param>
            <param name="printContext">The <see cref="T:C1.C1Schedule.Printing.PrintContextType"/> value, determining the filter of styles which should be shown in a form.</param>
        </member>
        <member name="P:C1.Win.C1Schedule.Printing.PrintOptionsForm.SelectedStyle">
            <summary>
            Returns the currently selected <see cref="T:C1.C1Schedule.Printing.PrintStyle"/> object.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.Printing.PrintOptionsForm.StartDate">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value determining beginning of the printing range.
            </summary>
            <remarks>This property does make sense only for styles with PrintContextType.DateRange.</remarks>
        </member>
        <member name="P:C1.Win.C1Schedule.Printing.PrintOptionsForm.EndDate">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value determining the end of the printing range.
            </summary>
            <remarks>This property does make sense only for styles with PrintContextType.DateRange.</remarks>
        </member>
        <member name="P:C1.Win.C1Schedule.Printing.PrintOptionsForm.HidePrivateAppointments">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value determining whether control should
            hide details of private appointments in resulting document.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.Printing.PrintOptionsForm.PrintSelectedCalendar">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value determining whether control should only
            show appointments from the currently selected <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem"/> in the resulting document.
            By default resulting document contains all appointments regardless of the C1Schedule grouping.
            Set this property to true to show appointments from the currently selected <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem"/>.
            </summary>
            <remarks>This property only makes sense if the <see cref="P:C1.Win.C1Schedule.C1Schedule.GroupBy"/> property is set.</remarks>
        </member>
        <member name="F:C1.Win.C1Schedule.Printing.PrintOptionsForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Printing.PrintOptionsForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Printing.PrintOptionsForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.Printing.PrintStyleOptionsForm">
            <summary>
            The <see cref="T:C1.Win.C1Schedule.Printing.PrintStyleOptionsForm"/> allows setting properties of the specified printing style.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Printing.PrintStyleOptionsForm.#ctor(C1.C1Schedule.Printing.PrintStyle,System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Schedule.Printing.PrintStyleOptionsForm"/> form.
            </summary>
            <param name="style">The <see cref="T:C1.C1Schedule.Printing.PrintStyle"/> for editing.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> used by the form.</param>
        </member>
        <member name="F:C1.Win.C1Schedule.Printing.PrintStyleOptionsForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Printing.PrintStyleOptionsForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Printing.PrintStyleOptionsForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.Printing.PrintProgressForm">
            <summary>
            Print progress form.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Printing.PrintProgressForm.#ctor(C1.C1Schedule.Printing.PrintInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Schedule.Printing.PrintProgressForm"/> form.
            </summary>
            <param name="info">The <see cref="T:C1.C1Schedule.Printing.PrintInfo"/> object.</param>
        </member>
        <member name="P:C1.Win.C1Schedule.Printing.PrintProgressForm.TxtPrinting">
            <summary>
            Gets or sets the text used to display the current progress while printing/previewing.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.Printing.PrintProgressForm.TxtTitle">
            <summary>
            Gets or sets the Window caption.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.Printing.PrintProgressForm.Progress">
            <summary>
            Gets or sets the <see cref="T:System.Double"/> value specifying 
            an approximate progress ratio, from 0 (0% complete) to 1 (100% complete).
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.Printing.PrintProgressForm.CancelClicked">
            <summary>
            Gets a value indicating whether the print/preview has been cancelled.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.Printing.PrintProgressForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Printing.PrintProgressForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Printing.PrintProgressForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.ScheduleGroupItem">
            <summary>
            Holds all the data required for displaying individual UI part for the single resource, 
            category or contact when the <see cref="P:C1.Win.C1Schedule.C1Schedule.GroupBy"/> property is set,
            or default UI otherwise.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.ScheduleGroupItem.#ctor(C1.Win.C1Schedule.C1Schedule,C1.C1Schedule.BaseObject)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem"/> class.
            </summary>
            <param name="scheduler">The parent <see cref="T:C1.Win.C1Schedule.C1Schedule"/> object.</param>
            <param name="owner">An object which is the owner of the current <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem"/> instance.
            It might be one of the next:
            <list>
            <item> </item>
            <item> The <see cref="T:C1.C1Schedule.Category"/> object;</item>
            <item> The <see cref="T:C1.C1Schedule.Resource"/> object;</item>
            <item> The <see cref="T:C1.C1Schedule.Contact"/> object;</item>
            <item> Null.</item>
            </list>
            </param>
        </member>
        <member name="P:C1.Win.C1Schedule.ScheduleGroupItem.IsSelected">
            <summary>
            Gets or sets a value that determines whether the UI element that has this 
            <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem"/> as a DataContext is selected.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.ScheduleGroupItem.Scheduler">
            <summary>
            Gets the <see cref="P:C1.Win.C1Schedule.ScheduleGroupItem.Scheduler"/> that <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem"/> belongs to.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.ScheduleGroupItem.Owner">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.BaseObject"/> object representing the <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem"/> object owner.
            This property can be null for an empty group item.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.ScheduleGroupItem.Name">
            <summary>
            Gets the <see cref="T:System.String"/> value representing the name of the <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem"/> object.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.ScheduleGroupItem.DisplayName">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value representing the display name of the <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem"/> object.
            </summary>
            <value>The display name.</value>
        </member>
        <member name="P:C1.Win.C1Schedule.ScheduleGroupItem.PaletteColor">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.Color"/> value determining palette which should be used to display
            the <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem"/> object.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.ScheduleGroupItem.IsChecked">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value determining whether this <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem"/> object should be
            displayed in UI.  
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.ScheduleGroupItem.Tag">
            <summary>
            Gets or sets the object that contains custom data about the <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem"/> object.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.ScheduleGroupItem.ToString">
            <summary>
            Returns the string representation of the current <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem"/> object.
            </summary>
            <returns>The <see cref="P:C1.Win.C1Schedule.ScheduleGroupItem.DisplayName"/> property value.</returns>
        </member>
        <member name="T:C1.Win.C1Schedule.ScheduleGroupItemCollection">
            <summary>
            Represents a collection of the <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem"/> objects.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.ScheduleGroupItemCollection.Item(System.Int32)">
            <summary>
            Gets a <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem"/> object at the specified index.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.ScheduleGroupItemCollection.Item(System.Object)">
            <summary>
            Gets a <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem"/> object with the specified owner.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.C1ScheduleSettings">
            <summary>
            Determines auxiliary properties providing different <see cref="T:C1.Win.C1Schedule.C1Schedule"/> object settings.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.C1ScheduleSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Schedule.C1ScheduleSettings"/> class.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.C1ScheduleSettings.AllowContactsEditing">
            <summary>
            Determines whether end-user has permission to edit Contacts.
            </summary>
            <remarks>If this property is false, default dialogs will only allow selection from the existing items. 
            If this property is false and ContactCollection is empty, default Appointment dialog won't 
            show controls for editing Contacts.</remarks>
            <value>The default value is true.</value>
        </member>
        <member name="P:C1.Win.C1Schedule.C1ScheduleSettings.AllowContactsMultiSelection">
            <summary> 
            Determines whether multiple Contact objects might be assigned to the single Appointment object.
            </summary>
            <remarks>
            <para>If both <see cref="P:C1.Win.C1Schedule.C1ScheduleSettings.AllowContactsMultiSelection"/> and <see cref="P:C1.Win.C1Schedule.C1ScheduleSettings.AllowContactsEditing"/>
            properties are false, the default Appointment dialog will show ComboBox for selecting single Contact object.
            </para>
            <para>
            If this property is true, the default Appointment dialog will allow selecting multiple contacts in a separate dialog.
            </para>
            </remarks>
            <value>The default value is true.</value>
        </member>
        <member name="P:C1.Win.C1Schedule.C1ScheduleSettings.AllowResourcesEditing">
            <summary>
            Determines whether end-user has permission to edit Resources.
            </summary>
            <remarks>If this property is false, default dialogs will only allow selection from the existing items. 
            If this property is false and ResourceCollection is empty, default Appointment dialog won't 
            show controls for editing Resources.</remarks>
            <value>The default value is true.</value>
        </member>
        <member name="P:C1.Win.C1Schedule.C1ScheduleSettings.AllowResourcesMultiSelection">
            <summary> 
            Determines whether multiple Resource objects might be assigned to the single Appointment object.
            </summary>
            <remarks>
            <para>If both <see cref="P:C1.Win.C1Schedule.C1ScheduleSettings.AllowResourcesMultiSelection"/> and <see cref="P:C1.Win.C1Schedule.C1ScheduleSettings.AllowResourcesEditing"/>
            properties are false, the default Appointment dialog will show ComboBox for selecting single Resource object.
            </para>
            <para>
            If this property is true, the default Appointment dialog will allow selecting multiple resources in a separate dialog.
            </para>
            </remarks>
            <value>The default value is true.</value>
        </member>
        <member name="P:C1.Win.C1Schedule.C1ScheduleSettings.AllowCategoriesEditing">
            <summary>
            Determines whether end-user has permission to edit Categories.
            </summary>
            <remarks>If this property is false, default dialogs will only allow selection from the existing items. 
            If this property is false and CategoryCollection is empty, default Appointment dialog won't 
            show controls for editing Categories.</remarks>
            <value>The default value is true.</value>
        </member>
        <member name="P:C1.Win.C1Schedule.C1ScheduleSettings.AllowCategoriesMultiSelection">
            <summary> 
            Determines whether multiple Category objects might be assigned to the single Appointment object.
            </summary>
            <remarks>
            <para>If both <see cref="P:C1.Win.C1Schedule.C1ScheduleSettings.AllowCategoriesMultiSelection"/> and <see cref="P:C1.Win.C1Schedule.C1ScheduleSettings.AllowCategoriesEditing"/>
            properties are false, the default Appointment dialog will show ComboBox for selecting single Category object.
            </para>
            <para>
            If this property is true, the default Appointment dialog will allow selecting multiple categories in a separate dialog.
            </para>
            </remarks>
            <value>The default value is true.</value>
        </member>
        <member name="P:C1.Win.C1Schedule.C1ScheduleSettings.FirstVisibleTime">
            <summary>
            Gets or sets the <see cref="T:System.TimeSpan"/> value representing
            the first visible time slot in a Day/Working Week/Week/TimeLine views.
            </summary>
            <remarks>This property affects only initial scroll position.</remarks>
        </member>
        <member name="P:C1.Win.C1Schedule.C1ScheduleSettings.AutoScrollToFirstAppointment">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value determining whether control
            scrolls itself to the earliest appointment in the current view.
            This property only affects Day/Work Week/Week/TimeLine views.
            </summary>
            <remarks>This property only affects initial scroll position.</remarks>
        </member>
        <member name="P:C1.Win.C1Schedule.C1ScheduleSettings.SetReminder">
            <summary>
            Gets or sets whether reminder should be set for the newly created appointments.
            </summary>
            <remarks>This property only affects initial setting. End-user will be able to change reminder settings
            for every individual <see cref="T:C1.C1Schedule.Appointment"/> object.</remarks>
        </member>
        <member name="P:C1.Win.C1Schedule.C1ScheduleSettings.ReminderTimeBeforeStart">
            <summary>
            Gets or sets the default <see cref="T:System.TimeSpan"/> value which should be used as initial value for the 
            <see cref="P:C1.C1Schedule.Appointment.ReminderTimeBeforeStart"/> property.
            </summary>
            <remarks>You should honor this property if you create appointments from code.</remarks>
        </member>
        <member name="P:C1.Win.C1Schedule.C1ScheduleSettings.DefaultFileFormat">
            <summary>
            Gets or sets the <see cref="T:C1.C1Schedule.FileFormatEnum"/> value, 
            specifying the default file format for import and export operations.
            It is honored in the "Import Data" and "Export Data" dialogs.
            </summary>
            <remarks>The default value is <see cref="F:C1.C1Schedule.FileFormatEnum.XML"/>.</remarks>
        </member>
        <member name="M:C1.Win.C1Schedule.ScheduleView.GoToDate(System.DateTime)">
            <summary>
            Sets the specified date as the start date of the scheduler, 
            meaning that on this date the scheduler will show its data. 
            This operation doesn't change the type of view.
            </summary>
            <param name="date">The <see cref="T:System.DateTime"/> value.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.ScheduleView.Refresh">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.ScheduleView.OnSizeChanged(System.EventArgs)">
            <summary>
            Sets element's width and mark element as dirty (to trigger Layout methods).
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1Schedule.ScheduleView.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles scrolling with a wheel.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Win.C1Schedule.ScheduleView.HandleScrollMessage(System.Windows.Forms.Message)">
            <summary>
            Handles scroll messages.
            </summary>
            <param name="m">The Windows <see cref="T:System.Windows.Forms.Message"/> to process.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.ScheduleView.IsInputKey(System.Windows.Forms.Keys)">
            <summary>
            Handles appointments tabbing. 
            </summary>
            <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys"/> values.</param>
            <returns>True if the specified key is a regular input key; otherwise, false.</returns>
        </member>
        <member name="P:C1.Win.C1Schedule.ScheduleView.ViewScrollPosition">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.Point"/> value determining the current scroll position.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.ScheduleView.ViewScrollSize">
            <summary>
            Gets the size of the document.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.ScheduleView.ViewScrollableRectangle">
            <summary>
            This property is used to get the scroll page size.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.Forms.AppointmentForm">
            <summary>
            The <see cref="T:C1.Win.C1Schedule.Forms.AppointmentForm"/> represents the dialog form for editing
            <see cref="P:C1.Win.C1Schedule.Forms.AppointmentForm.Appointment"/> objects.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.AppointmentForm.#ctor(C1.Win.C1Schedule.C1Schedule)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Schedule.Forms.AppointmentForm"/> form
            with default settings.
            </summary>
            <param name="schedule">The owning <see cref="T:C1.Win.C1Schedule.C1Schedule"/> component.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.AppointmentForm.#ctor(C1.Win.C1Schedule.C1Schedule,System.DateTime,System.DateTime,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Schedule.Forms.AppointmentForm"/> form
            with default settings.
            </summary>
            <param name="schedule">The owning <see cref="T:C1.Win.C1Schedule.C1Schedule"/> component.</param>
            <param name="start">The start of an appointment.</param>
            <param name="end">The end of an appointment.</param>
            <param name="allDay">Determines whether the new appointment should be 
            an AllDay event.</param>
            <param name="recurring">Determines whether the new appointment should be recurring.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.AppointmentForm.#ctor(C1.Win.C1Schedule.C1Schedule,C1.C1Schedule.Appointment)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Schedule.Forms.AppointmentForm"/> form
            for editing of the specified <see cref="P:C1.Win.C1Schedule.Forms.AppointmentForm.Appointment"/> object.
            </summary>
            <param name="schedule">The owning <see cref="T:C1.Win.C1Schedule.C1Schedule"/> component.</param>
            <param name="appointment">The <see cref="P:C1.Win.C1Schedule.Forms.AppointmentForm.Appointment"/> object.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.AppointmentForm.#ctor(C1.Win.C1Schedule.C1Schedule,C1.C1Schedule.Appointment,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Schedule.Forms.AppointmentForm"/> form
            for editing of the specified <see cref="P:C1.Win.C1Schedule.Forms.AppointmentForm.Appointment"/> object.
            </summary>
            <param name="schedule">The owning <see cref="T:C1.Win.C1Schedule.C1Schedule"/> component.</param>
            <param name="appointment">The <see cref="P:C1.Win.C1Schedule.Forms.AppointmentForm.Appointment"/> object.</param>
            <param name="editRecurrence">Determines whether the <see cref="T:C1.Win.C1Schedule.Forms.RecurrenceForm"/> dialog should be shown after the form opening.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.AppointmentForm.#ctor(C1.Win.C1Schedule.C1Schedule,C1.C1Schedule.Appointment,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Schedule.Forms.AppointmentForm"/> form
            for editing of the specified <see cref="P:C1.Win.C1Schedule.Forms.AppointmentForm.Appointment"/> object.
            </summary>
            <param name="schedule">The owning <see cref="T:C1.Win.C1Schedule.C1Schedule"/> component.</param>
            <param name="appointment">The <see cref="P:C1.Win.C1Schedule.Forms.AppointmentForm.Appointment"/> object.</param>
            <param name="editRecurrence">Determines whether the <see cref="T:C1.Win.C1Schedule.Forms.RecurrenceForm"/> dialog should be shown after the form opening.</param>
            <param name="isNew">Determines whether the <see cref="P:C1.Win.C1Schedule.Forms.AppointmentForm.Appointment"/> object is the new one and hasn't been added to AppointmentStorage yet.</param>
        </member>
        <member name="P:C1.Win.C1Schedule.Forms.AppointmentForm.Appointment">
            <summary>
            Gets the <see cref="P:C1.Win.C1Schedule.Forms.AppointmentForm.Appointment"/> object.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.Forms.AppointmentForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.AppointmentForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.AppointmentForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.Forms.CategoryCollectionForm">
            <summary>
            The <see cref="T:C1.Win.C1Schedule.Forms.CategoryCollectionForm"/> represents the dialog form for editing
            <see cref="T:C1.C1Schedule.CategoryCollection"/> object.
            Use this form for editing the full list of available categories.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.CategoryCollectionForm.#ctor(C1.C1Schedule.CategoryCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Schedule.Forms.CategoryCollectionForm"/> form.
            </summary>
            <param name="collection">The <see cref="T:C1.C1Schedule.CategoryCollection"/> object.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.CategoryCollectionForm.#ctor(C1.Win.C1Schedule.C1Schedule,C1.C1Schedule.CategoryCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Schedule.Forms.CategoryCollectionForm"/> form.
            </summary>
            <param name="schedule">The owning <see cref="T:C1.Win.C1Schedule.C1Schedule"/> object.</param>
            <param name="collection">The <see cref="T:C1.C1Schedule.CategoryCollection"/> object.</param>
        </member>
        <member name="F:C1.Win.C1Schedule.Forms.CategoryCollectionForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.CategoryCollectionForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.CategoryCollectionForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.Forms.CategoryListForm">
            <summary>
            The <see cref="T:C1.Win.C1Schedule.Forms.CategoryListForm"/> represents the dialog form for editing
            <see cref="T:C1.C1Schedule.CategoryList"/> object.
            Use this form for editing the list of categories assigned 
            to the <see cref="T:C1.C1Schedule.Appointment"/> object.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.CategoryListForm.#ctor(C1.C1Schedule.CategoryList)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Schedule.Forms.CategoryCollectionForm"/> form.
            </summary>
            <param name="list">The <see cref="T:C1.C1Schedule.CategoryList"/> list to edit.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.CategoryListForm.#ctor(C1.Win.C1Schedule.C1Schedule,C1.C1Schedule.CategoryList)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Schedule.Forms.CategoryCollectionForm"/> form.
            </summary>
            <param name="schedule">The owning <see cref="T:C1.Win.C1Schedule.C1Schedule"/> object.</param>
            <param name="list">The <see cref="T:C1.C1Schedule.CategoryList"/> list to edit.</param>
        </member>
        <member name="P:C1.Win.C1Schedule.Forms.CategoryListForm.List">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.CategoryList"/> object.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.Forms.CategoryListForm.AllowMasterListEditing">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value determining whether the end-user 
            has permission to edit master collection.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.Forms.CategoryListForm.AllowMultiSelection">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value determining whether multiple items can be checked.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.Forms.CategoryListForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.CategoryListForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.CategoryListForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.Forms.ContactCollectionForm">
            <summary>
            The <see cref="T:C1.Win.C1Schedule.Forms.ContactCollectionForm"/> represents the dialog form for editing
            <see cref="T:C1.C1Schedule.ContactCollection"/> object.
            Use this form for editing the full list of available contacts.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.ContactCollectionForm.#ctor(C1.C1Schedule.ContactCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Schedule.Forms.ContactCollectionForm"/> form.
            </summary>
            <param name="collection">The <see cref="T:C1.C1Schedule.ContactCollection"/> object.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.ContactCollectionForm.#ctor(C1.Win.C1Schedule.C1Schedule,C1.C1Schedule.ContactCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Schedule.Forms.ContactCollectionForm"/> form.
            </summary>
            <param name="schedule">The owning <see cref="T:C1.Win.C1Schedule.C1Schedule"/> object.</param>
            <param name="collection">The <see cref="T:C1.C1Schedule.ContactCollection"/> object.</param>
        </member>
        <member name="F:C1.Win.C1Schedule.Forms.ContactCollectionForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.ContactCollectionForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.ContactCollectionForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.Forms.ContactListForm">
            <summary>
            The <see cref="T:C1.Win.C1Schedule.Forms.ContactListForm"/> represents the dialog form for editing
            <see cref="T:C1.C1Schedule.ContactList"/> object.
            Use this form for editing the list of contacts assigned 
            to the <see cref="T:C1.C1Schedule.Appointment"/> object.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.ContactListForm.#ctor(C1.C1Schedule.ContactList)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Schedule.Forms.ContactListForm"/> form.
            </summary>
            <param name="list">The <see cref="T:C1.C1Schedule.ContactList"/> list to edit.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.ContactListForm.#ctor(C1.Win.C1Schedule.C1Schedule,C1.C1Schedule.ContactList)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Schedule.Forms.ContactListForm"/> form.
            </summary>
            <param name="schedule">The owning <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control.</param>
            <param name="list">The <see cref="T:C1.C1Schedule.ContactList"/> list to edit.</param>
        </member>
        <member name="P:C1.Win.C1Schedule.Forms.ContactListForm.List">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.ContactList"/> object.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.Forms.ContactListForm.AllowMasterListEditing">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value determining whether the end-user has permission to edit master collection.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.Forms.ContactListForm.AllowMultiSelection">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value determining whether multiple items can be checked.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.Forms.ContactListForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.ContactListForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.ContactListForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.Forms.GoToDate">
            <summary>
            The <see cref="T:C1.Win.C1Schedule.Forms.GoToDate"/> represents the dialog form for specifying 
            target date and view to switch the <see cref="T:C1.Win.C1Schedule.C1Schedule"/> component to.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.GoToDate.#ctor(System.String,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Schedule.Forms.GoToDate"/> form.
            </summary>
            <param name="dateFormat">Format string for displaying dates.</param>
            <param name="initialDate">Initial date selected in the dialog.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.GoToDate.#ctor(C1.Win.C1Schedule.C1Schedule,System.String,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Schedule.Forms.GoToDate"/> form.
            </summary>
            <param name="schedule">The owning <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control.</param>
            <param name="dateFormat">Format string for displaying dates.</param>
            <param name="initialDate">Initial date selected in the dialog.</param>
        </member>
        <member name="P:C1.Win.C1Schedule.Forms.GoToDate.Date">
            <summary>
            Gets the <see cref="T:System.DateTime"/> value specifying the target date selected by user.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.Forms.GoToDate.ViewType">
            <summary>
            Gets the <see cref="T:C1.Win.C1Schedule.ScheduleViewEnum"/> value specifying the target view type selected by user.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.Forms.GoToDate.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.GoToDate.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.GoToDate.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.Forms.PaletteForm">
            <summary>
            The <see cref="T:C1.Win.C1Schedule.Forms.PaletteForm"/> represents the dialog form for selecting 
            background colors for the <see cref="T:C1.Win.C1Schedule.C1Schedule"/> component.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.PaletteForm.#ctor(C1.Win.C1Schedule.C1Schedule)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Schedule.Forms.PaletteForm"/> form.
            </summary>
            <param name="schedule">The reference to the owning <see cref="T:C1.Win.C1Schedule.C1Schedule"/> component.</param>
        </member>
        <member name="F:C1.Win.C1Schedule.Forms.PaletteForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.PaletteForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.PaletteForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.Forms.QEditForm">
            <summary>
            The <see cref="T:C1.Win.C1Schedule.Forms.QEditForm"/> represents the dialog form for selecting 
            the object for editing (occurrence or all pattern).
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.QEditForm.#ctor(C1.Win.C1Schedule.C1Schedule,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:C1.Win.C1Schedule.Forms.QEditForm"/> form.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.Forms.QEditForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.QEditForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.QEditForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.Forms.QRemoveForm">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.Forms.QRemoveForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.QRemoveForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.QRemoveForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.Forms.RecurrenceForm">
            <summary>
            The <see cref="T:C1.Win.C1Schedule.Forms.RecurrenceForm"/> represents the dialog form for editing
            the recurrence pattern properties.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.RecurrenceForm.#ctor(C1.Win.C1Schedule.C1Schedule,C1.C1Schedule.RecurrencePattern,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Schedule.Forms.RecurrenceForm"/> form.
            </summary>
            <param name="schedule">The owning <see cref="T:C1.Win.C1Schedule.C1Schedule"/> component.</param>
            <param name="pattern">The <see cref="T:C1.C1Schedule.RecurrencePattern"/> object.</param>
            <param name="isNew">The <see cref="T:System.Boolean"/> value indicating 
            if the form will be used for filling the new pattern or for editing of existing one.</param>
        </member>
        <member name="F:C1.Win.C1Schedule.Forms.RecurrenceForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.RecurrenceForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.RecurrenceForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.Forms.ReminderForm">
            <summary>
            The <see cref="T:C1.Win.C1Schedule.Forms.ReminderForm"/> represents the dialog form for displaying
            all active <see cref="T:C1.C1Schedule.Reminder"/> objects. Once created it automatically 
            keeps track of all <see cref="T:C1.C1Schedule.Reminder"/> objects in the <see cref="T:C1.C1Schedule.ReminderCollection"/>
            collection. It pops up if there is an active <see cref="T:C1.C1Schedule.Reminder"/> object 
            and hides in other case. It shows information about active reminders 
            and allows user to snooze or dismiss selected reminders.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.ReminderForm.#ctor(C1.Win.C1Schedule.C1Schedule)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Schedule.Forms.ReminderForm"/> form.
            </summary>
            <param name="schedule">The owning <see cref="T:C1.Win.C1Schedule.C1Schedule"/> component.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.ReminderForm.Initialize">
            <summary>
            Initializes controls with active reminders.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.Forms.ReminderForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.ReminderForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.ReminderForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.Forms.ResourceCollectionForm">
            <summary>
            The <see cref="T:C1.Win.C1Schedule.Forms.ResourceCollectionForm"/> represents the dialog form for editing
            <see cref="T:C1.C1Schedule.ResourceCollection"/> object.
            Use this form for editing the full list of available resources.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.ResourceCollectionForm.#ctor(C1.C1Schedule.ResourceCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Schedule.Forms.ResourceCollectionForm"/> form.
            </summary>
            <param name="collection">The <see cref="T:C1.C1Schedule.ResourceCollection"/> object.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.ResourceCollectionForm.#ctor(C1.Win.C1Schedule.C1Schedule,C1.C1Schedule.ResourceCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Schedule.Forms.ResourceCollectionForm"/> form.
            </summary>
            <param name="schedule">The owning <see cref="T:C1.Win.C1Schedule.C1Schedule"/> object.</param>
            <param name="collection">The <see cref="T:C1.C1Schedule.ResourceCollection"/> object.</param>
        </member>
        <member name="F:C1.Win.C1Schedule.Forms.ResourceCollectionForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.ResourceCollectionForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.ResourceCollectionForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.Forms.ResourceListForm">
            <summary>
            The <see cref="T:C1.Win.C1Schedule.Forms.ResourceListForm"/> represents the dialog form for editing
            <see cref="T:C1.C1Schedule.ResourceList"/> object.
            Use this form for editing the list of resources assigned 
            to the <see cref="T:C1.C1Schedule.Appointment"/> object.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.ResourceListForm.#ctor(C1.C1Schedule.ResourceList)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Schedule.Forms.ResourceListForm"/> form.
            </summary>
            <param name="list">The <see cref="T:C1.C1Schedule.ResourceList"/> list to edit.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.ResourceListForm.#ctor(C1.Win.C1Schedule.C1Schedule,C1.C1Schedule.ResourceList)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Schedule.Forms.ResourceListForm"/> form.
            </summary>
            <param name="schedule">The owning <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control.</param>
            <param name="list">The <see cref="T:C1.C1Schedule.ResourceList"/> list to edit.</param>
        </member>
        <member name="P:C1.Win.C1Schedule.Forms.ResourceListForm.List">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.ResourceList"/> object.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.Forms.ResourceListForm.AllowMasterListEditing">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value determining whether the end-user has permission to edit master collection.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.Forms.ResourceListForm.AllowMultiSelection">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value determining whether multiple items can be checked.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.Forms.ResourceListForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.ResourceListForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.Forms.ResourceListForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.Properties.Resources.appointment">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.Properties.Resources.appointmentIcon">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.Properties.Resources.appSubjectImage">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.Properties.Resources.bell">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.Properties.Resources.btnDate">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.Properties.Resources.btnPage">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.Properties.Resources.btnPages">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.Properties.Resources.btnTime">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.Properties.Resources.contacts">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.Properties.Resources.delete">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.Properties.Resources.importance_down">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.Properties.Resources.importance_up">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.Properties.Resources.Open">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.Properties.Resources.Preview">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.Properties.Resources.print">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.Properties.Resources.recc">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.Properties.Resources.resources">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.Properties.Resources.save">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.Properties.Resources.sound1">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.UI.BrowseButton">
            <summary>
            BrowseButton
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.UI.DraggablePanel">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.UI.TextDropDownElement">
            <summary>
            Drop-down button element.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.AppText.EnterEditMode(System.Boolean,System.Boolean)">
            <summary>
            Forces an edit mode depending on the specified parameter.
            </summary>
            <param name="dialog">If true - show the dialog; enters into inline editor otherwise.</param>
            <param name="keyboard">Different handling for keyboard and mouse.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.AppText.Dispose">
            <summary>
            Releases all unmanaged resources.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.AppointmentBorder.Dispose">
            <summary>
            Releases all unmanaged resources.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.UI.DayElement">
            <summary>
            Slot, represented the whole day
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.UI.AppointmentFilterEnum.All">
            <summary>
            All appointments.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.UI.AppointmentFilterEnum.Event">
            <summary>
            All-day and multi-day events.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.UI.AppointmentFilterEnum.Appointment">
            <summary>
            Appointments with duration less than 1 day.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.UI.VisualStyle">
            <summary>
            Defines the visual style for the C1Calendar and C1Schedule controls.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.UI.VisualStyle.Custom">
            <summary>
            Custom visual style.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.UI.VisualStyle.System">
            <summary>
            System visual style (uses the current desktop settings).
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.UI.VisualStyle.Office2007Blue">
            <summary>
            Office 2007 Blue visual style.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.UI.VisualStyle.Office2007Black">
            <summary>
            Office 2007 Black visual style.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.UI.VisualStyle.Office2007Silver">
            <summary>
            Office 2007 Silver visual style.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.UI.VisualStyle.Office2010Black">
            <summary>
            Office 2010 Black visual style.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.UI.VisualStyle.Office2010Blue">
            <summary>
            Office 2010 Blue visual style.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.UI.VisualStyle.Office2010Silver">
            <summary>
            Office 2010 Silver visual style.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.UI.BaseTheme">
            <summary>
            The base class for themes in the C1Calendar and C1Schedule controls.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.UI.BaseTheme._themeStyle">
            <summary>
            The <see cref="P:C1.Win.C1Schedule.UI.BaseTheme.VisualStyle"/> value, specifying the type of the <see cref="T:C1.Win.C1Schedule.UI.BaseTheme"/> object.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.UI.BaseTheme._locked">
            <summary>
            Determines whether the theme is locked for editing.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.BaseTheme.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Schedule.UI.BaseTheme"/> class.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.BaseTheme.Name">
            <summary>
            Gets or sets the theme name (e.g. "RedMoon");
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.BaseTheme.VisualStyle">
            <summary>
            Gets the <see cref="P:C1.Win.C1Schedule.UI.BaseTheme.VisualStyle"/> value, specifying the type of the theme.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.BaseTheme.Locked">
            <summary>
            Gets or sets the value, determining whether the theme is locked for editing.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.BaseTheme.BaseFont">
            <summary>
            Set this property in order to change <see cref="P:C1.Framework.Style.Font"/>values
            in all <see cref="T:C1.Framework.Style"/> objects at once.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.BaseTheme.ImagePrevious">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.Image"/> object which should be used 
            for displaying the "Previous" button.
            If this property isn't null, the <see cref="P:C1.Win.C1Schedule.UI.BaseTheme.SymbolPrevious"/> property
            will be ignored.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.BaseTheme.ImageNext">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.Image"/> object which should be used 
            for displaying the "Next" button.
            If this property isn't null, the <see cref="P:C1.Win.C1Schedule.UI.BaseTheme.SymbolNext"/> property
            will be ignored.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.BaseTheme.SymbolPrevious">
            <summary>
            Gets or sets the <see cref="T:System.Char"/> value determining 
            the symbol which should be used for the "Previous" button.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.BaseTheme.SymbolNext">
            <summary>
            Gets or sets the <see cref="T:System.Char"/> value determining 
            the symbol which should be used for the "Next" button.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.BaseTheme.Button">
            <summary>
            Gets or sets the <see cref="T:C1.Framework.Style"/> object determining 
            the style of navigation buttons.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.BaseTheme.Common">
            <summary>
            Gets or sets the <see cref="T:C1.Framework.Style"/> object determining 
            the main style of control. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.BaseTheme.ToolTipBackgroundGradient">
            <summary>
            Gets or sets the <see cref="T:C1.Win.C1SuperTooltip.BackgroundGradient"/> value which determines
            tooltips background.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.BaseTheme.ToolTipRoundedCorners">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value determining whether
            to show tooltips with rounded corners.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.BaseTheme.Count">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.BaseTheme.Comparer">
            <summary>
            Gets the generic equality comparer that is used to determine equality 
            of keys in the collection.
            </summary>
        </member>
        <member name="E:C1.Win.C1Schedule.UI.BaseTheme.Disposed">
            <summary>
            Represents the method that handles the Disposed event of a component. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.BaseTheme.Site">
            <summary>
            Gets or sets the ISite associated with the IComponent. 
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.BaseTheme.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, 
            or resetting unmanaged resources. 
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.BaseTheme.DisposeStyles">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.BaseTheme.ToString">
            <summary>
            Returns the value of a <see cref="P:C1.Framework.Theme.Name"/> property.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.BaseTheme.OnThemeChanged">
            <summary>
            Raises the <see cref="E:C1.Win.C1Schedule.UI.BaseTheme.ThemeChanged"/> event
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.BaseTheme.SetStyle(C1.Framework.Style,System.String)">
            <summary>
            Sets the value of the named <see cref="T:C1.Framework.Style"/> object.
            </summary>
            <param name="value"></param>
            <param name="name"></param>
        </member>
        <member name="T:C1.Win.C1Schedule.UI.BaseView">
            <summary>
            The base view for all C1Schedule views.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.BaseView.EnsureVisibleTime(System.TimeSpan)">
            <summary>
            Ensures that the specified time is visible within the control, 
            scrolling the contents if necessary.
            </summary>
            <param name="time"></param>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.BaseView.AddAppointment(C1.C1Schedule.Appointment)">
            <summary>
            Adds a new AppointmentElement for the specified appointment
            </summary>
            <param name="appointment"></param>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.BaseView.DragToPoint(C1.Win.C1Schedule.UI.AppElement,System.Drawing.Point)">
            <summary>
            
            </summary>
            <param name="app"></param>
            <param name="point"></param>
            <returns>return true if AppointmentElement has been recreated</returns>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.BaseView.InterimDragToPoint(C1.Win.C1Schedule.UI.AppElement,System.Drawing.Point)">
            <summary>
            
            </summary>
            <param name="app"></param>
            <param name="point"></param>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.BaseView.Item(System.Guid)">
            <summary>
            Returns AppointmentElement for the specified appointment Id if any.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.BaseView.RefreshData(System.Boolean)">
            <summary>
            Refreshes all appointments
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.BaseView.GetAppElementStart(C1.C1Schedule.Appointment,System.DateTime)">
            <summary>
            returns the start for the appointment element, specific for the current view. We only need it for the first element, so that to adjust start for very short apps.
            </summary>
            <param name="appointment">DayView needs appointment to handle long and short appointments differently </param>
            <param name="proposedStart"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.BaseView.GetAppElementEnd(C1.C1Schedule.Appointment,System.DateTime,System.DateTime)">
            <summary>
            returns the end for the appointment element, specific for current view (either proposedEnd, or less value, if appointment should be broken into several pieces)
            </summary>
            <param name="appointment">DayView needs appointment to handle long and short appointments differently </param>
            <param name="start"></param>
            <param name="proposedEnd"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.BaseView.GoToDate(System.DateTime,System.Boolean)">
            <summary>
            Moves view to the new date. 
            Base implementation sets first visible date to the specified value.
            </summary>
            <param name="date"></param>
            <param name="moveSelectionToDate"></param>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.BaseView.AddAppointment(C1.C1Schedule.Appointment,System.DateTime,C1.Win.C1Schedule.UI.BaseGrid)">
            <summary>
            Adds a new AppointmentElement for the specified appointment
            </summary>
            <param name="appointment"></param>
            <param name="start"></param>
            <param name="grid">null means adding to all grids</param>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.BaseGrid.Owner">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.BaseObject"/> object representing the <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem"/> object owner.
            This property can be null for an empty group item.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.UI.SelectionCommand">
            <summary>
            Determines the type of selection.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.UI.CalendarElement">
            <summary>
            Panel which contains some month elements. Aligns months according to the
            current size of available space, adds or removes months if it is necessary.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.CalendarElement.Dimensions">
            <summary>
            Gets or sets maximum number of months (from 1 to 12)
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.CalendarElement.Theme">
            <summary>
            Gets or sets current theme
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.CalendarElement.CurrentMonth">
            <summary>
            Gets or sets current month
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.CalendarElement.SelectedDate">
            <summary>
            Gets or sets selected date
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.CalendarElement.SelectedDates">
            <summary>
            Gets or sets a list of selected dates
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.CalendarElement.BoldedDates">
            <summary>
            Gets or sets a list of bolded dates
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.CalendarElement.ShowHeader">
            <summary>
            Determines whether to show month header or no
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.CalendarElement.ShowButtons">
            <summary>
            Determines whether to show navigation buttons or no
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.UI.MonthElement">
            <summary>
            GridPanel which represents single month
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.MonthElement.First">
            <summary>
            Set to true to show trailing dates in the beginning.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.MonthElement.Last">
            <summary>
            Set to true to show trailing dates in the end.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.MonthElement.GetStyle(C1.Win.C1Schedule.UI.CalendarDayElement)">
            <summary>
            Returns correct style object for specified day.
            </summary>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Win.C1Schedule.UI.WeekNumberElement">
            <summary>
            Represents week number
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.UI.CalendarDayElement">
            <summary>
            Represents single day
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.UI.CalendarTheme">
            <summary>
            The <see cref="T:C1.Framework.Theme"/> class represents the theme for the C1Calendar control.
            It is a set of <see cref="T:C1.Framework.Style"/> objects which contain display attributes 
            that determine the appearance of control. 
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.CalendarTheme.LoadThemes(System.String)">
            <summary>
            Loads a collection of themes from an Xml file.
            </summary>
            <param name="fileName">Name of the Xml file that contains the themes.</param>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.CalendarTheme.System">
            <summary>
            Gets the predefined theme of the <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.System"/> type.
            </summary>
            <remarks>Use this theme to let your application automatically change its appearance
            in accordance with the current desktop settings.
            </remarks>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.CalendarTheme.Office2007Blue">
            <summary>
            Gets the predefined theme of the <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.Office2007Blue"/> type.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.CalendarTheme.Office2007Black">
            <summary>
            Gets the predefined theme of the <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.Office2007Black"/> type.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.CalendarTheme.Office2007Silver">
            <summary>
            Gets the predefined theme of the <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.Office2007Silver"/> type.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.CalendarTheme.Office2010Blue">
            <summary>
            Gets the predefined theme of the <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.Office2010Blue"/> type.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.CalendarTheme.Office2010Black">
            <summary>
            Gets the predefined theme of the <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.Office2010Black"/> type.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.CalendarTheme.Office2010Silver">
            <summary>
            Gets the predefined theme of the <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.Office2010Silver"/> type.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.CalendarTheme.ComponentType">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.CalendarTheme.OnThemeChanged">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.CalendarTheme.ReadCustomData(System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.CalendarTheme.WriteCustomData(System.Xml.XmlWriter)">
            <summary>
            
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.CalendarTheme.XmlDefinition">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value representing the VisualStyle in xml encoding.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.CalendarTheme.BaseFont">
            <summary>
            Set this property in order to change <see cref="P:C1.Framework.Style.Font"/>values
            in all <see cref="T:C1.Framework.Style"/> objects at once.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.CalendarTheme.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, 
            or resetting unmanaged resources. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.CalendarTheme.Day">
            <summary>
            Gets or sets the <see cref="T:C1.Framework.Style"/> object determining 
            the style of the ordinal day.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.CalendarTheme.DaySelected">
            <summary>
            Gets or sets the <see cref="T:C1.Framework.Style"/> object determining 
            the style of the selected day.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.CalendarTheme.DaySelectedBold">
            <summary>
            Gets or sets the <see cref="T:C1.Framework.Style"/> object determining 
            the style of the day which is selected and bold at the same time.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.CalendarTheme.DayWeekend">
            <summary>
            Gets or sets the <see cref="T:C1.Framework.Style"/> object determining 
            the style of the weekend day.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.CalendarTheme.DayBold">
            <summary>
            Gets or sets the <see cref="T:C1.Framework.Style"/> object determining 
            the style of the bold day.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.CalendarTheme.DayTrail">
            <summary>
            Gets or sets the <see cref="T:C1.Framework.Style"/> object determining 
            the style of the trail day. Trail day is a day which doesn't belong to the currently
            displayed month (i.e. the day before the first or after the last day of the month).
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.CalendarTheme.DayHeader">
            <summary>
            Gets or sets the <see cref="T:C1.Framework.Style"/> object determining 
            the style of the day header.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.CalendarTheme.DayToday">
            <summary>
            Gets or sets the <see cref="T:C1.Framework.Style"/> object determining 
            the displaying style of the current day.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.CalendarTheme.Header">
            <summary>
            Gets or sets the <see cref="T:C1.Framework.Style"/> object determining 
            the style of the month header.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.UI.DayGrid">
            <summary>
            GridPanel used to show days and times
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.UI.DayView">
            <summary>
            Panel that contains a grid background and positions appointment elements.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.DayView.WeekView">
            <summary>
            Gets or sets value indicating view mode of this view.
            If true, the view shows all working of the single week.
            If false, the view shows only one day.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.DayView.GoToDate(System.DateTime,System.Boolean)">
            <summary>
            Moves view to the new date. 
            Base implementation sets first visible date to the specified value.
            </summary>
            <param name="date"></param>
            <param name="moveSelectionToDate"></param>
        </member>
        <member name="T:C1.Win.C1Schedule.UI.MonthView">
            <summary>
            Panel that contains a grid background and positions appointment elements.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.UI.MonthGrid">
            <summary>
            GridPanel used to show days
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.UI.PaletteType">
            <summary>
            <see cref="T:C1.Win.C1Schedule.UI.PaletteType"/> Enumeration specifies the type 
            of <see cref="T:C1.Win.C1Schedule.UI.Palette"/> object. 
            This type defines the behavior of palette.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.UI.PaletteType.Office2007">
            <summary>
            Office 2007 palette includes back and border colors 
            of free and working hours and days, day headers, grid borders 
            and calendar tabs. 
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.UI.PaletteType.Custom">
            <summary>
            Use this type to define your own palettes.
            <remarks><see cref="F:C1.Win.C1Schedule.UI.Palette.WorkHour"/> field should always contain 
            unique <see cref="T:System.Drawing.Color"/> value before adding the <see cref="T:C1.Win.C1Schedule.UI.Palette"/> 
            object to the <see cref="T:C1.Win.C1Schedule.UI.Palettes"/> collection.</remarks>
            <example>
            The next example shows how to create custom palettes and attach them to
            the <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control.
            <code>
            // Clear default palettes.
            c1Schedule.Theme.Palettes.Clear();
            // Create new palette.
            Palette pal = new Palette(PaletteType.Custom);
            // Set work hour color and leave all other colors empty.
            pal.WorkHour = Color.Red;
            // Add palette to the theme palettes.
            c1Schedule.Theme.Palettes.Add(pal);
            pal = new Palette(PaletteType.Custom);
            pal.WorkHour = Color.Yellow;
            c1Schedule.Theme.Palettes.Add(pal);
            pal = new Palette(PaletteType.Custom);
            pal.WorkHour = Color.Green;
            c1Schedule.Theme.Palettes.Add(pal);
            // Select palette in control.
            c1Schedule.Theme.CurrentPalette = Color.Yellow;
            </code>
            </example>
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.UI.PaletteType.Office2010">
            <summary>
            Office 2010 palette includes back and border colors 
            of free and working hours and days, day headers, grid borders 
            and calendar tabs. 
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.UI.PaletteType.Office2016">
            <summary>
            Office 2016 palette includes accent color to use in calendar headers and additional darker color for current day.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.UI.PaletteType.Office2016Dark">
            <summary>
            Office 2016 dark palette includes accent color to use in calendar headers and additional darker color for current day.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.UI.Palettes">
            <summary>
            <see cref="T:C1.Win.C1Schedule.UI.Palettes"/> Class represents a collection of available color
            palettes for the <see cref="T:C1.Win.C1Schedule.C1Schedule"/> visual style.
            <remarks><para><see cref="T:C1.Win.C1Schedule.C1Schedule"/> component uses this collection
            to switch currently used palettes or to show multiple schedules 
            at the same time.</para>
            <para>The key of collection is a <see cref="T:System.Drawing.Color"/> value which is shown 
            in the <see cref="T:C1.Win.C1Schedule.Forms.PaletteForm"/> form.</para>
            <para>For Office 2007 palettes key is a color of alternate month days,
            all-day area and dark horizontal borders in the day view.</para>
            </remarks>
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.Palettes.GetKeyForItem(C1.Win.C1Schedule.UI.Palette)">
            <summary>
            Returns the key color for <see cref="T:C1.Win.C1Schedule.UI.Palette"/> object 
            accordingly to the value of it's <see cref="P:C1.Win.C1Schedule.UI.Palette.PaletteType"/> property.
            </summary>
            <param name="item">The <see cref="T:C1.Win.C1Schedule.UI.Palette"/> object.</param>
            <returns>The key <see cref="T:System.Drawing.Color"/> value.</returns>
        </member>
        <member name="T:C1.Win.C1Schedule.UI.Palette">
            <summary>
            <see cref="T:C1.Win.C1Schedule.UI.Palette"/> Class represents a set of <see cref="T:System.Drawing.Color"/>
            values which are used for displaying <see cref="T:C1.Win.C1Schedule.C1Schedule"/>.
            <remarks>
            The default value for each color is <see cref="F:System.Drawing.Color.Empty"/>. 
            The <see cref="F:C1.Win.C1Schedule.UI.Palette.AlternateMonth"/> field should
            always contain unique <see cref="T:System.Drawing.Color"/> value before adding the <see cref="T:C1.Win.C1Schedule.UI.Palette"/> 
            object to the <see cref="T:C1.Win.C1Schedule.UI.Palettes"/> collection.
            For other fields <see cref="F:System.Drawing.Color.Empty"/> is allowed. In such case control 
            uses the corresponding color from the theme definition.
            </remarks>
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.Palette.#ctor(C1.Win.C1Schedule.UI.PaletteType)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Schedule.UI.Palette"/> object.
            </summary>
            <param name="type">The <see cref="P:C1.Win.C1Schedule.UI.Palette.PaletteType"/> value.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.Palette.CreateOffice2007Palette(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Creates a new instance of the <see cref="T:C1.Win.C1Schedule.UI.Palette"/> object of
            <see cref="F:C1.Win.C1Schedule.UI.PaletteType.Office2007"/> type.
            </summary>
            <param name="freeHour">The <see cref="T:System.Drawing.Color"/> value which is used
            for displaying background of free hours and selected days 
            and the working hour horizontal light borders.</param>
            <param name="freeHourBorder">The <see cref="T:System.Drawing.Color"/> value which is used
            for displaying the free and working hour horizontal borders, 
            alternate month days background and all-day area background.</param>
            <param name="freeHourLightBorder">The <see cref="T:System.Drawing.Color"/> value which is used
            for displaying the free hour horizontal light borders.</param>
            <param name="dayHeaderBorder">The <see cref="T:System.Drawing.Color"/> value which is used
            for displaying day header borders.</param>
            <param name="dayHeaderBack">The <see cref="T:System.Drawing.Color"/> value which is used
            for displaying the day header.</param>
            <param name="dayHeaderBack2">The <see cref="T:System.Drawing.Color"/> value which is used
            for displaying gradient color of the day header.</param>
            <param name="border">The <see cref="T:System.Drawing.Color"/> value which is used
            for displaying vertical borders in the day view and day borders in other views.</param>
            <param name="selectedSlot">The <see cref="T:System.Drawing.Color"/> value which is used
            for displaying selected time slot.</param>
            <param name="monthGridBorder">The <see cref="T:System.Drawing.Color"/> value which is used
            for displaying month grid border inside tabs.</param>
            <param name="monthGridText">The <see cref="T:System.Drawing.Color"/> value which is used
            for displaying month grid text inside tabs.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.Palette.CreateOffice2010Palette(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Creates a new instance of the <see cref="T:C1.Win.C1Schedule.UI.Palette"/> object of
            <see cref="F:C1.Win.C1Schedule.UI.PaletteType.Office2010"/> type.
            </summary>
            <param name="freeHour">The <see cref="T:System.Drawing.Color"/> value which is used
            for displaying background of free hours and selected days 
            and the working hour horizontal light borders.</param>
            <param name="freeHourBorder">The <see cref="T:System.Drawing.Color"/> value which is used
            for displaying the free and working hour horizontal borders, 
            alternate month days background and all-day area background.</param>
            <param name="freeHourLightBorder">The <see cref="T:System.Drawing.Color"/> value which is used
            for displaying the free hour horizontal light borders.</param>
            <param name="dayHeaderBorder">The <see cref="T:System.Drawing.Color"/> value which is used
            for displaying day header borders.</param>
            <param name="dayHeaderBack">The <see cref="T:System.Drawing.Color"/> value which is used
            for displaying the day header.</param>
            <param name="selectedSlot">The <see cref="T:System.Drawing.Color"/> value which is used
            for displaying selected time slot.</param>
            <returns></returns>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.Palette.PaletteType">
            <summary>
            Gets the <see cref="P:C1.Win.C1Schedule.UI.Palette.PaletteType"/> value.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.Palette.KeyColor">
            <summary>
            Gets the key <see cref="T:System.Drawing.Color"/> value for the current palette.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.UI.Palette.AlternateMonth">
            <summary>
            The <see cref="T:System.Drawing.Color"/> value which is used for displaying background 
            of alternate month days. 
            For Office 2007 and 2010 palettes this field should always contain unique 
            <see cref="T:System.Drawing.Color"/> value. 
            For other palettes this field can be <see cref="F:System.Drawing.Color.Empty"/>. 
            In such case control will use <see cref="T:System.Drawing.Color"/> value from the 
            theme definition.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.UI.Palette.WorkHour">
            <summary>
            The <see cref="T:System.Drawing.Color"/> value which is used for displaying background 
            of working hours.
            This field can be <see cref="F:System.Drawing.Color.Empty"/>. 
            In such case control will use <see cref="T:System.Drawing.Color"/> value from the 
            theme definition.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.UI.Palette.FreeHour">
            <summary>
            The <see cref="T:System.Drawing.Color"/> value which is used for displaying background 
            of free hours. 
            This field can be <see cref="F:System.Drawing.Color.Empty"/>. 
            In such case control will use <see cref="T:System.Drawing.Color"/> value from the 
            theme definition.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.UI.Palette.FreeHourBorder">
            <summary>
            The <see cref="T:System.Drawing.Color"/> value which is used for displaying free hours horizontal
            dark border. 
            This field can be <see cref="F:System.Drawing.Color.Empty"/>. 
            In such case control will use <see cref="T:System.Drawing.Color"/> value from the 
            theme definition.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.UI.Palette.FreeHourLightBorder">
            <summary>
            The <see cref="T:System.Drawing.Color"/> value which is used for displaying free hours horizontal
            light border. 
            This field can be <see cref="F:System.Drawing.Color.Empty"/>. 
            In such case control will use the <see cref="F:C1.Win.C1Schedule.UI.Palette.FreeHourBorder"/> value.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.UI.Palette.WorkHourBorder">
            <summary>
            The <see cref="T:System.Drawing.Color"/> value which is used for displaying working hours
            horizontal dark border. 
            This field can be <see cref="F:System.Drawing.Color.Empty"/>. 
            In such case control will use <see cref="T:System.Drawing.Color"/> value from the 
            theme definition.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.UI.Palette.WorkHourLightBorder">
            <summary>
            The <see cref="T:System.Drawing.Color"/> value which is used for displaying working hours
            horizontal light border. 
            This field can be <see cref="F:System.Drawing.Color.Empty"/>. 
            In such case control will use the <see cref="F:C1.Win.C1Schedule.UI.Palette.WorkHourBorder"/> value.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.UI.Palette.DayHeaderBorder">
            <summary>
            The <see cref="T:System.Drawing.Color"/> value which is used for displaying day header border.
            This field can be <see cref="F:System.Drawing.Color.Empty"/>. 
            In such case control will use <see cref="T:System.Drawing.Color"/> value from the 
            theme definition.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.UI.Palette.DayHeaderBackground">
            <summary>
            The <see cref="T:System.Drawing.Color"/> value which is used for displaying day header background.
            This field can be <see cref="F:System.Drawing.Color.Empty"/>. 
            In such case control will use <see cref="T:System.Drawing.Color"/> value from the 
            theme definition.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.UI.Palette.DayHeaderBackground2">
            <summary>
            The <see cref="T:System.Drawing.Color"/> value which is used for displaying day header gradient background.
            This field can be <see cref="F:System.Drawing.Color.Empty"/>. 
            In such case control will use <see cref="T:System.Drawing.Color"/> value from the 
            theme definition.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.UI.Palette.Border">
            <summary>
            The <see cref="T:System.Drawing.Color"/> value which is used for displaying day borders.
            This field can be <see cref="F:System.Drawing.Color.Empty"/>. 
            In such case control will use <see cref="T:System.Drawing.Color"/> value from the 
            theme definition.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.UI.Palette.SelectedSlot">
            <summary>
            The <see cref="T:System.Drawing.Color"/> value which is used for displaying background 
            of the selected time slots. 
            This field can be <see cref="F:System.Drawing.Color.Empty"/>. 
            In such case control will use back color of the 
            <see cref="P:C1.Win.C1Schedule.UI.ScheduleTheme.MonthDayHeaderSelected"/> style.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.UI.Palette.MonthGridBorder">
            <summary>
            The <see cref="T:System.Drawing.Color"/> value which is used for displaying month grid 
            header border inside tabs if <see cref="P:C1.Win.C1Schedule.UI.ScheduleTheme.GroupTabStyle"/> is <see cref="F:C1.Win.C1Schedule.GroupTabStyle.Office2007"/>.
            This field can be <see cref="F:System.Drawing.Color.Empty"/>. 
            In such case control will use <see cref="T:System.Drawing.Color"/> value from the 
            theme definition.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.UI.Palette.MonthGridText">
            <summary>
            The <see cref="T:System.Drawing.Color"/> value which is used for displaying month grid
            header text inside tabs if <see cref="P:C1.Win.C1Schedule.UI.ScheduleTheme.GroupTabStyle"/> is <see cref="F:C1.Win.C1Schedule.GroupTabStyle.Office2007"/>.
            This field can be <see cref="F:System.Drawing.Color.Empty"/>. 
            In such case control will use <see cref="T:System.Drawing.Color"/> value from the 
            theme definition.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.UI.Palette.SelectedDay">
            <summary>
            The <see cref="T:System.Drawing.Color"/> value which is used for displaying background 
            of the selected day. 
            This field can be <see cref="F:System.Drawing.Color.Empty"/>. 
            In such case control will use <see cref="T:System.Drawing.Color"/> value from the 
            theme definition.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.Palette.FromXml(System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.Palette.ToXml(System.Xml.XmlWriter)">
            <summary>
            
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:C1.Win.C1Schedule.UI.PaletteOffice2016">
            <summary>
            <see cref="T:C1.Win.C1Schedule.UI.PaletteOffice2016"/> Class represents a set of <see cref="T:System.Drawing.Color"/>
            values which are used for displaying <see cref="T:C1.Win.C1Schedule.C1Schedule"/>.
            <remarks>
            The default value for each color is <see cref="F:System.Drawing.Color.Empty"/>. 
            The <see cref="F:C1.Win.C1Schedule.UI.PaletteOffice2016.AccentColor"/> field should
            always contain unique <see cref="T:System.Drawing.Color"/> value before adding the <see cref="T:C1.Win.C1Schedule.UI.PaletteOffice2016"/> 
            object to the <see cref="T:C1.Win.C1Schedule.UI.Palettes"/> collection.
            For other fields <see cref="F:System.Drawing.Color.Empty"/> is allowed. In such case control 
            uses the corresponding color from the theme definition.
            </remarks>
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.PaletteOffice2016.#ctor(C1.Win.C1Schedule.UI.PaletteType)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Schedule.UI.PaletteOffice2016"/> object.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.PaletteOffice2016.#ctor(C1.Win.C1Schedule.UI.PaletteType,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Schedule.UI.PaletteOffice2016"/> object.
            </summary>
            <param name="accentColor">The <see cref="T:System.Drawing.Color"/> value which is used
            for displaying navigation panels.</param>
            <param name="headerColor">The <see cref="T:System.Drawing.Color"/> value which is used
            for displaying day and group headers.</param>
            <param name="todayColor">The <see cref="T:System.Drawing.Color"/> value which is used
            for highlighting current day.</param>
            <param name="selection">The <see cref="T:System.Drawing.Color"/> value which is used
            for highlighting selected day or slots.</param>
            <param name="type">The <see cref="T:C1.Win.C1Schedule.UI.PaletteType"/> value.</param>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.PaletteOffice2016.KeyColor">
            <summary>
            Gets the key <see cref="T:System.Drawing.Color"/> value for the current palette.
            </summary>
        </member>
        <member name="F:C1.Win.C1Schedule.UI.PaletteOffice2016.AccentColor">
            <summary>
            The <see cref="T:System.Drawing.Color"/> value which is used for displaying navigation panels. 
            This field should always contain unique <see cref="T:System.Drawing.Color"/> value. 
            </summary>
            <remarks>Only used in Office2016 palettes.</remarks>
        </member>
        <member name="F:C1.Win.C1Schedule.UI.PaletteOffice2016.TodayColor">
            <summary>
            The <see cref="T:System.Drawing.Color"/> value which is used for highlighting current day. 
            This field should always contain unique <see cref="T:System.Drawing.Color"/> value. 
            </summary>
            <remarks>Only used in Office2016 palettes.</remarks>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.PaletteOffice2016.FromXml(System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.PaletteOffice2016.ToXml(System.Xml.XmlWriter)">
            <summary>
            
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:C1.Win.C1Schedule.UI.ScheduleTheme">
            <summary>
            The <see cref="T:C1.Framework.Theme"/> class represents the theme for the C1Schedule control.
            It is a set of <see cref="T:C1.Framework.Style"/> objects which contain display attributes 
            that determine the appearance of control. 
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.ScheduleTheme.ReadCustomData(System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.ScheduleTheme.WriteCustomData(System.Xml.XmlWriter)">
            <summary>
            
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.ComponentType">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.ScheduleTheme.OnThemeChanged">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.ScheduleTheme.OnThemeChanging">
            <summary>
            Raises the <see cref="E:C1.Win.C1Schedule.UI.ScheduleTheme.ThemeChanging"/> event
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.ScheduleTheme.LoadThemes(System.String)">
            <summary>
            Loads a collection of themes from an Xml file.
            </summary>
            <param name="fileName">Name of the Xml file that contains the themes.</param>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.ScheduleTheme.UpdatePalette">
            <summary>
            Updates all C1Schedule styles according to the currently selected palette.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.System">
            <summary>
            Gets the predefined theme of the <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.System"/> type.
            </summary>
            <remarks>Use this theme to let your application automatically change its appearance
            in accordance with the current desktop settings.
            </remarks>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.Office2007Blue">
            <summary>
            Gets the predefined theme of the <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.Office2007Blue"/> type.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.Office2007Black">
            <summary>
            Gets the predefined theme of the <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.Office2007Black"/> type.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.Office2007Silver">
            <summary>
            Gets the predefined theme of the <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.Office2007Silver"/> type.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.Office2010Blue">
            <summary>
            Gets the predefined theme of the <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.Office2010Blue"/> type.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.Office2010Black">
            <summary>
            Gets the predefined theme of the <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.Office2010Black"/> type.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.Office2010Silver">
            <summary>
            Gets the predefined theme of the <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.Office2010Silver"/> type.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.XmlDefinition">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value representing the VisualStyle in xml encoding.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.BaseFont">
            <summary>
            Set this property in order to change <see cref="P:C1.Framework.Style.Font"/> values
            in all <see cref="T:C1.Framework.Style"/> objects at once.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.TitleImage">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.Image"/> object which should be used 
            for displaying the image in the right corner of the title.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.TimeRulerMinutesFont">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.Font"/> object which should be used 
            for displaying minutes on the Time Ruler.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.TimeRulerFormat2">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value which determines time format string used in the time ruler for 
            displaying times other then the beginning of the hour.
            </summary>
            <remarks>The default value is empty string.</remarks>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.ShortMonthDayFormat">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value which determines format string used to show date in month view day headers.
            </summary>
            <remarks>The default value is empty string.</remarks>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.TitleText">
            <summary>
            Gets or sets the string which is displayed in the title.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.ShowMinuteLine">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value determining whether to
            show line between minutes on the time ruler.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.ShowEndTimeMonthView">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value determining whether to
            show appointment end time in the month view.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.ShowTimeMonthView">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value determining whether to
            show appointment time in the month view.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.AppointmentCornerRadius">
            <summary>
            Gets or sets a <see cref="T:System.Int32"/> value determining appointment corner radius.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.ShowEndTimeWeekView">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value determining whether to
            show appointment end time in the Office 2003 style week view.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.ShowNavigationPanels">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value determining whether to
            show navigation panels at the sides of views.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.ShowBrowseButtons">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value determining whether to
            show browse buttons in the title.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.RoundBrowseButtons">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value determining whether browse buttons in the title should be round.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.HighlightDayStatus">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value determining whether to
            highlight availability status. Set this value to true to change day or
            time slot background according to the appointment availability status.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.PaletteType">
            <summary>
            Gets or sets a <see cref="P:C1.Win.C1Schedule.UI.ScheduleTheme.PaletteType"/> value determining which type of palletes should be used.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.ShowTodayBorder">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value determining
            if control should show orange border around today date
            (as in Office 2007). 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.ShowWeekTabs">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value determining
            if control should show week tabs in the MonthView 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.GroupTabStyle">
            <summary>
            Gets or sets a <see cref="P:C1.Win.C1Schedule.UI.ScheduleTheme.GroupTabStyle"/> value determining the style of group tabs. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.WeekTabStyle">
            <summary>
            Gets or sets a <see cref="P:C1.Win.C1Schedule.UI.ScheduleTheme.WeekTabStyle"/> value determining the style of week tabs. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.CurrentPalette">
            <summary>
            Gets or sets <see cref="T:System.Drawing.Color"/> value determining the currently used palette.
            At setting this property <see cref="T:C1.Win.C1Schedule.C1Schedule"/> control tries to find corresponding
            palette in <see cref="P:C1.Win.C1Schedule.UI.ScheduleTheme.Palettes"/> collection and attaches it to the views.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.Palette">
            <summary>
            Gets the currently used <see cref="P:C1.Win.C1Schedule.UI.ScheduleTheme.Palette"/> object.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.Palettes">
            <summary>
            Gets the <see cref="P:C1.Win.C1Schedule.UI.ScheduleTheme.Palettes"/> collection available for the current theme.
            </summary>
            <remarks>If embedded <see cref="T:C1.Win.C1Schedule.Forms.PaletteForm"/> is good enough
            for your application, you can rely on it and don't use <see cref="P:C1.Win.C1Schedule.UI.ScheduleTheme.Palettes"/>,
            <see cref="P:C1.Win.C1Schedule.UI.ScheduleTheme.Palette"/> and <see cref="P:C1.Win.C1Schedule.UI.ScheduleTheme.CurrentPalette"/> properties 
            in your code.</remarks>
            <example>
            The next example shows how to switch palettes at run-time from the code.
            <code>
            // Get available palettes.
            Palettes pals = c1Schedule.Theme.Palettes;
            // Get key color from palette.
            Palette pal = pals[0];
            // You may get key colors from all palettes and show them to the
            // end-user in order to select desired palette.
            // ...
            // Select palette in control.
            c1Schedule.Theme.CurrentPalette = pal.KeyColor;
            </code>
            </example>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.ScheduleTheme.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, 
            or resetting unmanaged resources. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.Header">
            <summary>
            Gets or sets the <see cref="T:C1.Framework.Style"/> object determining 
            the style of the header. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.Title">
            <summary>
            Gets or sets the <see cref="T:C1.Framework.Style"/> object determining 
            the style of the title. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.Info">
            <summary>
            Gets or sets the <see cref="T:C1.Framework.Style"/> object determining 
            the style of information in the header of the control. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.Today">
            <summary>
            Gets or sets the <see cref="T:C1.Framework.Style"/> object determining 
            the appearance of the current day and day header in different views. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.CurrentTime">
            <summary>
            Gets or sets the <see cref="T:C1.Framework.Style"/> object determining 
            the appearance of the current time label on the time ruler. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.CurrentTimeVertical">
            <summary>
            Gets or sets the <see cref="T:C1.Framework.Style"/> object determining 
            the appearance of the current time label in the time line view. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.TimeRuler">
            <summary>
            Gets or sets the <see cref="T:C1.Framework.Style"/> object determining 
            the appearance of the time ruler in the day view. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.TimeLine">
            <summary>
            Gets or sets the <see cref="T:C1.Framework.Style"/> object determining 
            the general appearance of the time line view. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.TimeLineRuler">
            <summary>
            Gets or sets the <see cref="T:C1.Framework.Style"/> object determining 
            the appearance of the time ruler in the time line view. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.Appointment">
            <summary>
            Gets or sets the <see cref="T:C1.Framework.Style"/> object determining 
            the appearance of the appointment element. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.MonthDayHeader">
            <summary>
            Gets or sets the <see cref="T:C1.Framework.Style"/> object determining 
            the appearance of the day header in the month view. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.MonthDayHeaderSelected">
            <summary>
            Gets or sets the <see cref="T:C1.Framework.Style"/> object determining 
            the appearance of the selected day header in the month view. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.WeekDayHeader">
            <summary>
            Gets or sets the <see cref="T:C1.Framework.Style"/> object determining 
            the appearance of the day header in the week view. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.WeekDayHeaderSelected">
            <summary>
            Gets or sets the <see cref="T:C1.Framework.Style"/> object determining 
            the appearance of the selected day header in the week view. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.WeekTab">
            <summary>
            Gets or sets the <see cref="T:C1.Framework.Style"/> object determining 
            the appearance of the week tab in the month view. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.NavigationPane">
            <summary>
            Gets or sets the <see cref="T:C1.Framework.Style"/> object determining 
            the navigation panes appearance. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.DayViewHeader">
            <summary>
            Gets or sets the <see cref="T:C1.Framework.Style"/> object determining 
            the appearance of the day header in the day view. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.DayViewDayName">
            <summary>
            Gets or sets the <see cref="T:C1.Framework.Style"/> object determining 
            the appearance of the day name part of the day header in the day view. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.DayViewHeaderSelected">
            <summary>
            Gets or sets the <see cref="T:C1.Framework.Style"/> object determining 
            the appearance of the selected day header in the day view. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.MonthViewGridHeader">
            <summary>
            Gets or sets the <see cref="T:C1.Framework.Style"/> object determining 
            the appearance of the grid header in the month view. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.WorkHour">
            <summary>
            Gets or sets the <see cref="T:C1.Framework.Style"/> object determining 
            the appearance of work hours in the day view. 
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.FreeHour">
            <summary>
            Gets or sets the <see cref="T:C1.Framework.Style"/> object determining 
            the appearance of free hours in the day view. 
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.UI.SlotsView">
            <summary>
            The base class for DayView and TimeLineView.
            </summary>
        </member>
        <member name="P:C1.Win.C1Schedule.UI.SlotsView.ScrollableRectangle">
            <summary>
            This property is used to set the scroll page size.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.UI.SlotsGrid">
            <summary>
            The base grid for the DayGrid and TimeLineGrid
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.UI.TimeLineView">
            <summary>
            Panel that contains a grid background and positions appointment elements.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.UI.TimeLineGrid">
            <summary>
            GridPanel used to show days and times
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.UI.TimeRulerBase">
            <summary>
            GridPanel used to show time ruler
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.UI.VerticalRuler">
            <summary>
            GridPanel used to show vertical time ruler (use in the Day/Working Week/Week views).
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.UI.HorizontalRuler">
            <summary>
            GridPanel used to show horizontal time ruler (use in the Time Line views).
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.UI.WeekMonthView">
            <summary>
            Panel that contains a grid background and positions appointment elements.
            </summary>
        </member>
        <member name="M:C1.Win.C1Schedule.UI.WeekMonthView.GoToDate(System.DateTime,System.Boolean)">
            <summary>
            Moves view to the new date. 
            Base implementation sets first visible date to the specified value.
            </summary>
            <param name="date"></param>
            <param name="moveSelectionToDate"></param>
        </member>
        <member name="T:C1.Win.C1Schedule.UI.WeekView">
            <summary>
            Panel that contains a grid background and positions appointment elements.
            </summary>
        </member>
        <member name="T:C1.Win.C1Schedule.UI.WeekGrid">
            <summary>
            GridPanel used to show days
            </summary>
        </member>
        <member name="T:C1.C1Schedule.C1BindingSource">
            <summary>
            The <see cref="T:C1.C1Schedule.C1BindingSource"/> encapsulates the data source. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.C1BindingSource"/> class. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.#ctor(System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.C1BindingSource"/> class
            with the specified data source and data member values.
            </summary>
            <param name="dataSource">The <see cref="T:System.Object"/> object to use as data source.</param>
            <param name="dataMember">The data member name.</param>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.AllowEdit">
            <summary>
            Gets a value indicating whether items in the underlying list can be edited.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.AllowNew">
            <summary>
            Gets or sets a value indicating whether the <see cref="M:C1.C1Schedule.C1BindingSource.AddNew"/> method 
            can be used to add items to the list. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.AllowRemove">
            <summary>
            Gets a value indicating whether items can be removed from the underlying list. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.Count">
            <summary>
            Gets the total number of items in the underlying list.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.DataMember">
            <summary>
            Gets or sets the specific list in the data source to which 
            the connector currently binds to.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.DataSource">
            <summary>
            Gets or sets the data source that the connector binds to. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.Filter">
            <summary>
            Gets or sets the expression used to filter which rows are viewed. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.IsFixedSize">
            <summary>
            Gets a value indicating whether the underlying list has a fixed size. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.IsReadOnly">
            <summary>
            Gets a value indicating whether the underlying list is read-only.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.System#ComponentModel#IBindingList#IsSorted">
            <summary>
            Gets a value indicating whether the items in the underlying list are sorted.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread safe). 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.Item(System.Int32)">
            <summary>
            Gets or sets the list element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.List">
            <summary>
            Gets the list that the connector is bound to. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.RaiseListChangedEvents">
            <summary>
            Gets or sets a value indicating whether <see cref="E:C1.C1Schedule.C1BindingSource.ListChanged"/> events should be raised. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.Sort">
            <summary>
            Gets or sets the column names used for sorting, and the sort order 
            for viewing the rows in the data source.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.System#ComponentModel#IBindingListView#SortDescriptions">
            <summary>
            Gets the collection of sort descriptions applied to the data source. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.System#ComponentModel#IBindingList#SortDirection">
            <summary>
            Gets the direction the items in the list are sorted.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.System#ComponentModel#IBindingList#SortProperty">
            <summary>
            Gets the <see cref="T:System.ComponentModel.PropertyDescriptor"/> that is being used for sorting the list. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.SupportsAdvancedSorting">
            <summary>
            Gets a value indicating whether the data source supports multi-column sorting. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.SupportsChangeNotification">
            <summary>
            Gets a value indicating whether the data source supports change notification.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.SupportsFiltering">
            <summary>
            Gets a value indicating whether the data source supports filtering.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.SupportsSearching">
            <summary>
            Gets a value indicating whether the data source supports searching with 
            the Find method. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.SupportsSorting">
            <summary>
            Gets a value indicating whether the data source supports sorting.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the underlying list. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1BindingSource.DataKeyNamesInternal">
            <summary>
            
            </summary>
        </member>
        <member name="E:C1.C1Schedule.C1BindingSource.AddingNew">
            <summary>
            Occurs before an item is added to the underlying list. 
            </summary>
        </member>
        <member name="E:C1.C1Schedule.C1BindingSource.DataMemberChanged">
            <summary>
            Occurs when the <see cref="P:C1.C1Schedule.C1BindingSource.DataMember"/> property value has changed.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.C1BindingSource.DataSourceChanged">
            <summary>
            Occurs when the <see cref="P:C1.C1Schedule.C1BindingSource.DataSource"/> property value has changed. 
            </summary>
        </member>
        <member name="E:C1.C1Schedule.C1BindingSource.ListChanged">
            <summary>
            Occurs when the underlying list changes or an item in the list changes.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.Add(System.Object)">
            <summary>
            Adds an existing item to the internal list.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to add.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.AddNew">
            <summary>
            Adds a new item to the underlying list. 
            </summary>
            <returns>The item added to the list.</returns>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.FinishAddNew">
            <summary>
            Commits a pending new item to the collection. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.BeginEdit(System.Object)">
            <summary>
            Starts an edit operation on the specified object.
            </summary>
            <param name="item">The object on which to start operation.</param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.EndEdit(System.Object)">
            <summary>
            Applies pending changes to the underlying data source.
            </summary>
            <param name="item">The object on which to apply pending changes.</param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.System#ComponentModel#IBindingListView#ApplySort(System.ComponentModel.ListSortDescriptionCollection)">
            <summary>
            Sorts the data source with the specified sort description or descriptions.
            </summary>
            <param name="sorts"></param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>
            Sorts the data source using the specified property descriptor and sort direction.
            </summary>
            <param name="property"></param>
            <param name="direction"></param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.Clear">
            <summary>
            Removes all elements from the list. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.Contains(System.Object)">
            <summary>
            Determines whether an object is an item in the list. 
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to locate.</param>
            <returns>True if the <see cref="T:System.Object"/> is found in the list; 
            otherwise, false.</returns>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the contents of the <see cref="P:C1.C1Schedule.C1BindingSource.List"/> to the specified array, 
            starting at the specified index value. 
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the 
            destination of the elements copied from <see cref="T:System.Collections.ICollection"/>. 
            The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="index">The zero-based index in the array at which the copying begins.</param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the <see cref="T:C1.C1Schedule.C1BindingSource"/>.
            </summary>
            <param name="disposing">True if managed resources should be disposed; 
            otherwise, false.</param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>
            Searches for the index of the item that has the given property descriptor. 
            </summary>
            <param name="prop">The <see cref="T:System.ComponentModel.PropertyDescriptor"/> 
            to search on.</param>
            <param name="key">The value of the property parameter to search for.</param>
            <returns>The index of the item that has the given 
            <see cref="T:System.ComponentModel.PropertyDescriptor"/>.</returns>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.Find(System.String,System.Object)">
            <summary>
            Returns the index of the item in the list with the specified property name and value. 
            </summary>
            <param name="propertyName">The property name to search on.</param>
            <param name="key">The value of the property parameter to search for.</param>
            <returns>
            The index of the item in the list with the specified property name and value.
            </returns>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.GetEnumerator">
            <summary>
            Retrieves an enumerator for the <see cref="P:C1.C1Schedule.C1BindingSource.List"/>. 
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerable"/> object that can 
            be used to iterate through the collection.</returns>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Retrieves an array of PropertyDescriptor objects representing 
            the bindable properties of the data source list type.
            </summary>
            <param name="listAccessors">An array of 
            <see cref="T:System.ComponentModel.PropertyDescriptor"/> objects to find in 
            the collection as bindable. This can be null.</param>
            <returns>The <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/> 
            that represents the properties on each item used to bind data.</returns>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.GetListName(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Gets the name of the list supplying data for the binding. 
            </summary>
            <param name="listAccessors">An array of <see cref="T:System.ComponentModel.PropertyDescriptor"/> 
            objects, the list name for which is returned. This can be null.</param>
            <returns>The name of the list.</returns>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.IndexOf(System.Object)">
            <summary>
            Searches for the specified object and returns the index of the first 
            occurrence within the entire list.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to index.</param>
            <returns>The index of <i>value</i> if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item into the list at the specified index.
            </summary>
            <param name="index">The zero-based index at which 
            <i>value</i> should be inserted.</param>
            <param name="value">The <see cref="T:System.Object"/> to insert.</param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.OnDataMemberChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.OnDataSourceChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.Remove(System.Object)">
            <summary>
            Removes the specified item from the list. 
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to remove.</param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index in the list.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.System#ComponentModel#IBindingListView#RemoveFilter">
            <summary>
            Removes the filter associated with the <see cref="T:C1.C1Schedule.C1BindingSource"/>.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.System#ComponentModel#IBindingList#RemoveSort">
            <summary>
            Removes the sort associated with the <see cref="T:C1.C1Schedule.C1BindingSource"/>. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.ResetAllowNew">
            <summary>
            Reinitializes the <see cref="P:C1.C1Schedule.C1BindingSource.AllowNew"/> property. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.ResetBindings(System.Boolean)">
            <summary>
            Causes a control bound to the <see cref="T:C1.C1Schedule.C1BindingSource"/> to reread 
            all the items in the list and refresh their displayed values. 
            </summary>
            <param name="metadataChanged">The <see cref="T:System.Boolean"/> value specifying
            whether the metadata has been changed.</param>
        </member>
        <member name="M:C1.C1Schedule.C1BindingSource.ResetItem(System.Int32)">
            <summary>
            Causes a control bound to the <see cref="T:C1.C1Schedule.C1BindingSource"/> to re-read 
            the item at the specified index, and refresh its displayed value. 
            </summary>
            <param name="itemIndex">The zero-based index of item to re-read.</param>
        </member>
        <member name="T:C1.C1Schedule.BaseEnumEditor">
            <summary>
            Base UITypeEditor for all dynamic enums.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.C1ObservableCollection`1">
            <summary>
            The <see cref="T:C1.C1Schedule.C1ObservableCollection`1"/> is the base class for all 
            <see cref="T:System.Collections.ObjectModel.Collection`1"/> derived collections. Supports notification.
            </summary>
            <typeparam name="T">The type of objects to keep in collection.</typeparam>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableCollection`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.C1ObservableCollection`1"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableCollection`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.C1ObservableCollection`1"/> class.
            </summary>
            <param name="list">The <see cref="T:System.Collections.Generic.IList`1"/> list that is wrapped 
            by the new collection.</param>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableCollection`1.ClearItems">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableCollection`1.InsertItem(System.Int32,`0)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableCollection`1.RemoveItem(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableCollection`1.SetItem(System.Int32,`0)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:C1.C1Schedule.C1ObservableKeyedCollection`2">
            <summary>
            The <see cref="T:C1.C1Schedule.C1ObservableCollection`1"/> is the base class for all 
            <see cref="T:System.Collections.ObjectModel.KeyedCollection`2"/> derived collections. Supports notification.
            </summary>
            <typeparam name="TKey">The type of keys in the collection.</typeparam>
            <typeparam name="TItem">The type of objects to keep in the collection.</typeparam>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableKeyedCollection`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.C1ObservableKeyedCollection`2"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableKeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.C1ObservableKeyedCollection`2"/> class.
            </summary>
            <param name="comparer">The implementation of the <see cref="T:System.Collections.IEqualityComparer"/> generic interface 
            to use when comparing keys, or a null reference (Nothing in Visual Basic) 
            to use the default equality comparer for the type of the key, obtained 
            from EqualityComparer.Default.</param>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableKeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
            <summary>
            
            </summary>
            <param name="comparer"></param>
            <param name="dictionaryCreationThreshold"></param>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableKeyedCollection`2.ClearItems">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableKeyedCollection`2.InsertItem(System.Int32,`1)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableKeyedCollection`2.RemoveItem(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableKeyedCollection`2.SetItem(System.Int32,`1)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:C1.C1Schedule.C1ObservableKeyedCollection`2.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.C1Schedule.PlatformIndependenceHelper.GetColor(System.UInt32)">
            <summary>
            Gets a platform specific Color object based on its integer representation.
            The byte ordering in the <paramref name="color"/> is ARGB, for example
            the constant 0x01020304 represents the color with the following components:
            A = 0x01
            R = 0x02
            G = 0x03
            B = 0x04
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.PlatformIndependenceHelper.IsEmptyColor(System.Drawing.Color)">
            <summary>
            Indicates whether the specified <paramref name="color"/> is transparent.
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="T:C1.C1Schedule.AppointmentMappingCollection">
            <summary>
            Represents a generic collection of mappings for properties of 
            <see cref="T:C1.C1Schedule.BaseObject"/> derived objects to appropriate data fields. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.AppointmentMappingCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.AppointmentMappingCollection"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.AppointmentMappingCollection.ReadObject(C1.C1Schedule.Appointment,System.Object,System.Boolean)">
            <summary>
            Fills BaseObject object with values from specified boundObject.
            </summary>
            <param name="internalObject"></param>
            <param name="boundObject"></param>
            <param name="raiseChanged"></param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.AppointmentMappingCollection.WriteObject(C1.C1Schedule.Appointment,System.Object)">
            <summary>
            Fills boundObject with values from specified BaseObject object.
            </summary>
            <param name="internalObject">Appointment object.</param>
            <param name="boundObject">object from custom data source/</param>
        </member>
        <member name="M:C1.C1Schedule.AppointmentMappingCollection.NewItem">
            <summary>
            Creates new Appointment object.
            </summary>
            <returns>Return created appointment object.</returns>
        </member>
        <member name="P:C1.C1Schedule.AppointmentMappingCollection.Body">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for the <see cref="P:C1.C1Schedule.Appointment.Body"/> 
            property of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of the <see cref="P:C1.C1Schedule.AppointmentMappingCollection.Body"/> allow 
            the <see cref="P:C1.C1Schedule.Appointment.Body"/> property 
            to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.AppointmentMappingCollection.End">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for the <see cref="P:C1.C1Schedule.Appointment.End"/> 
            property of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.C1Schedule.Appointment.End"/> property 
            to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.AppointmentMappingCollection.Location">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for the <see cref="P:C1.C1Schedule.Appointment.Location"/>
            property of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.C1Schedule.Appointment.Location"/> property 
            to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.AppointmentMappingCollection.Start">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for the <see cref="P:C1.C1Schedule.Appointment.Start"/>
            property of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.C1Schedule.Appointment.Start"/> property 
            to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.AppointmentMappingCollection.Subject">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for the <see cref="P:C1.C1Schedule.Appointment.Subject"/>
            property of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.C1Schedule.Appointment.Subject"/> property 
            to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.AppointmentMappingCollection.AppointmentProperties">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for the memory field 
            which is intended to store the other properties of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the other properties of 
            the <see cref="T:C1.C1Schedule.Appointment"/> object to be bound to 
            the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.AppointmentMappingCollection.OwnerIdMapping">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for the Appointment.Owner.Id property of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.C1Schedule.Appointment.Owner"/> property 
            to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.AppointmentMappingCollection.OwnerIndexMapping">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for the Appointment.Owner.Index property of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.C1Schedule.Appointment.Owner"/> property 
            to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.AppointmentMappingCollection.Collection">
            <summary>
            Gets or sets AppointmentCollection using for mapping.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.BaseObjectMappingCollection`1">
            <summary>
            Represents a generic collection of mappings for properties 
            of the <see cref="T:C1.C1Schedule.BaseObject"/> derived objects to appropriate data fields. 
            </summary>
            <typeparam name="T">The type of the objects for mapping.
            It should be derived from the <see cref="T:C1.C1Schedule.BaseObject"/> class 
            and have the default parameter-less constructor.</typeparam>
        </member>
        <member name="M:C1.C1Schedule.BaseObjectMappingCollection`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.BaseObjectMappingCollection`1"/> class.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BaseObjectMappingCollection`1.TextMapping">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for the <see cref="P:C1.C1Schedule.BaseObject.Text"/> 
            property of the object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.C1Schedule.BaseObject.Text"/> 
            property of the object to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BaseObjectMappingCollection`1.ColorMapping">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for the <see cref="P:C1.C1Schedule.BaseObject.Color"/> 
            property of the object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.C1Schedule.BaseObject.Color"/> 
            property of the object to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BaseObjectMappingCollection`1.CaptionMapping">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for <see cref="P:C1.C1Schedule.BaseObject.MenuCaption"/> 
            property of the object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.C1Schedule.BaseObject.MenuCaption"/> 
            property of the object to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BaseObjectMappingCollection`1.ReadObject(`0,System.Object,System.Boolean)">
            <summary>
            Fills BaseObject object with values from specified boundObject.
            </summary>
            <param name="internalObject"></param>
            <param name="boundObject"></param>
            <param name="raiseChanged"></param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.BaseObjectMappingCollection`1.WriteObject(`0,System.Object)">
            <summary>
            Fills boundObject with values from specified BaseObject object.
            </summary>
            <param name="internalObject">T object.</param>
            <param name="boundObject">Object from custom data source.</param>
        </member>
        <member name="T:C1.C1Schedule.MappingInfo">
            <summary>
            This class provides information on the mapping of the single property 
            of the object to the appropriate data field. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.MappingInfo.#ctor(System.Type,System.String,System.Boolean,System.Object)">
            <summary>
            Use this ctor for simple properties that has the same types 
            in the internal object and in the bound object.
            </summary>
            <param name="type"></param>
            <param name="propName"></param>
            <param name="required"></param>
            <param name="defaultValue"></param>
        </member>
        <member name="M:C1.C1Schedule.MappingInfo.#ctor(System.Type,System.Type,System.String,System.Boolean,System.Object)">
            <summary>
            Use this ctor when property of bound object has to have the type other than 
            type of the internal object's property.
            </summary>
            <param name="type"></param>
            <param name="dataType"></param>
            <param name="propName"></param>
            <param name="required"></param>
            <param name="defaultValue"></param>
        </member>
        <member name="P:C1.C1Schedule.MappingInfo.DataType">
            <summary>
            Gets the <see cref="T:System.Type"/> value determining the type of the data field 
            or property which can be bound to this object.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.MappingInfo.MappingName">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value determining the name of the data field 
            or property to be bound to the object.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.MappingInfo.IsMapped">
            <summary>
            Gets the <see cref="T:System.Boolean"/> value indicating if this objects is mapped 
            to the data field or property.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.MappingInfo.Required">
            <summary>
            Gets the <see cref="T:System.Boolean"/> value indicating if mapping for this property is required or optional.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.MappingInfo.PropertyName">
            <summary>
            Gets the <see cref="T:System.String"/> value determining the name of the property 
            which should be mapped.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.MappingInfo.GetPropertyValue(System.Object)">
            <summary>
            Returns the property of specified object.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.MappingInfo.SetPropertyValue(System.Object,System.Object)">
            <summary>
            Sets property of specified object to the specified value.
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:C1.C1Schedule.MappingCollectionBase`1">
            <summary>
            Represents a collection of mappings for properties of the 
            <see cref="T:C1.C1Schedule.BasePersistableObject"/> object to the appropriate data fields. 
            Names of properties are keys in this collection.
            </summary>
            <typeparam name="T">The type of the objects for mapping.
            It should be derived from the <see cref="T:C1.C1Schedule.BasePersistableObject"/>class 
            and have the default parameter-less constructor.</typeparam>
        </member>
        <member name="M:C1.C1Schedule.MappingCollectionBase`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.MappingCollectionBase`1"/> class.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.MappingCollectionBase`1.IdMapping">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for the <see cref="P:C1.C1Schedule.BasePersistableObject.Id"/> property.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.C1Schedule.BasePersistableObject.Id"/> property  
            to be bound to the appropriate field in the data source. 
            </summary>
             <remarks> Each object derived from <see cref="T:C1.C1Schedule.BasePersistableObject"/> is identified 
            by either Id or Index property. 
            To allow data to be correctly restored from your data sources you should specify mapping 
            either for the <see cref="P:C1.C1Schedule.MappingCollectionBase`1.IdMapping"/> or 
            for the <see cref="P:C1.C1Schedule.MappingCollectionBase`1.IndexMapping"/>.
            It makes sense in case if you bind to your data storages of Resources, Labels, 
            Contacts or Categories. 
            C1Schedule saves only Ids or Indexes of these objects in AppointmentSorage. 
            If there is no mapping for IdMapping or IndexMapping, C1Schedule won't be able to 
            identify Appointment's properties correctly in storages initialized by your data.
            </remarks>
        </member>
        <member name="P:C1.C1Schedule.MappingCollectionBase`1.IndexMapping">
            <summary>
            Returns <see cref="T:C1.C1Schedule.MappingInfo"/> object for the <see cref="P:C1.C1Schedule.BasePersistableObject.Index"/> property.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.C1Schedule.BasePersistableObject.Index"/> property 
            to be bound to the appropriate field in the data source. 
            </summary>
             <remarks> Each object derived from <see cref="T:C1.C1Schedule.BasePersistableObject"/> is identified 
            by either Id or Index property. 
            To allow data to be correctly restored from your data sources you should specify mapping 
            either for the <see cref="P:C1.C1Schedule.MappingCollectionBase`1.IdMapping"/> or 
            for the <see cref="P:C1.C1Schedule.MappingCollectionBase`1.IndexMapping"/>.
            It makes sense in case if you bind to your data storages of Resources, Labels, 
            Contacts or Categories. 
            C1Schedule saves only Ids or Indexes of these objects in AppointmentSorage. 
            If there is no mapping for IdMapping or IndexMapping, C1Schedule won't be able to 
            identify Appointment's properties correctly in storages initialized by your data.
            </remarks>
        </member>
        <member name="M:C1.C1Schedule.MappingCollectionBase`1.GetKeyForItem(C1.C1Schedule.MappingInfo)">
            <summary>
            Returns property name as the key for collection.
            </summary>
            <param name="item">The <see cref="T:C1.C1Schedule.MappingInfo"/> object.</param>
            <returns>The property name.</returns>
        </member>
        <member name="M:C1.C1Schedule.MappingCollectionBase`1.ReadObject(`0,System.Object,System.Boolean)">
            <summary>
            Fills internal object derived from BasePersistableObject 
            with values from specified bound object.
            </summary>
            <param name="internalObject"></param>
            <param name="boundObject"></param>
            <param name="raiseChanged">Specifies if internalObject should raise Changed 
            event during this method call</param>
            <returns>Value indicating if bound object was changed by this method.</returns>
            <remarks>Overriding method of derived class should call the base 
            class's ReadObject method or fill BasePersistableObject
            properties on it's own.</remarks>
        </member>
        <member name="M:C1.C1Schedule.MappingCollectionBase`1.ReadObject(`0,System.Object,System.Boolean,System.Boolean)">
            <summary>
            Fills internal object derived from BasePersistableObject 
            with values from specified bound object.
            </summary>
            <param name="internalObject"></param>
            <param name="boundObject"></param>
            <param name="raiseChanged">Specifies if internalObject should raise Changed 
            event during this method call</param>
            <param name="dirty">Specifies whether an object has been changed</param>
            <returns>Value indicating if bound object was changed by this method.</returns>
            <remarks>Overriding method of derived class should call the base 
            class's ReadObject method or fill BasePersistableObject
            properties on it's own.</remarks>
        </member>
        <member name="M:C1.C1Schedule.MappingCollectionBase`1.WriteObject(`0,System.Object)">
            <summary>
            When implemented in a derived class fills boundObject 
            with values from specified internalObject.
            </summary>
            <param name="internalObject">object from C1Schedule collection.</param>
            <param name="boundObject">object from custom data source.</param>
            <remarks>Overriding method of derived class should call 
            the base class's WriteObject method or fill boundObject
            properties on it's own.</remarks>
        </member>
        <member name="M:C1.C1Schedule.MappingCollectionBase`1.NewItem">
            <summary>
            Implementation in derived classes should return new object of type T.
            </summary>
            <returns>New object of type T.</returns>
        </member>
        <member name="P:C1.C1Schedule.MappingCollectionBase`1.Count">
            <summary>
            Gets the number of elements actually contained in 
            the <see cref="T:C1.C1Schedule.MappingCollectionBase`1"/> object.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.MappingCollectionBase`1.Comparer">
            <summary>
            Gets the generic equality comparer that is used to determine equality 
            of keys in the collection.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.MappingCollectionBase`1.InsertItem(System.Int32,C1.C1Schedule.MappingInfo)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="E:C1.C1Schedule.MappingCollectionBase`1.Disposed">
            <summary>
            Represents the method that handles the Disposed event of a component. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.MappingCollectionBase`1.Site">
            <summary>
            Gets or sets the ISite associated with the IComponent. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.MappingCollectionBase`1.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, 
            or resetting unmanaged resources. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.AppointmentStorage">
            <summary>
            The <see cref="T:C1.C1Schedule.AppointmentStorage"/> is the storage 
            for <see cref="T:C1.C1Schedule.Appointment"/> objects. It allows binding to the data source 
            and mapping data source fields to the appointment properties.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.AppointmentStorage.Appointments">
            <summary>
            Gets an <see cref="T:C1.C1Schedule.AppointmentCollection"/> object that contains appointment related information. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.AppointmentStorage.CommitItemChanges(C1.C1Schedule.Appointment)">
            <summary>
            Commits all changes in the data item.
            </summary>
            <param name="item">Data item to apply changes.</param>
        </member>
        <member name="T:C1.C1Schedule.BaseStorage`2">
            <summary>
            The <see cref="T:C1.C1Schedule.BaseStorage`2"/> is the base generic component 
            for all storages in C1Schedule object model.
            Represents a storage of objects derived from <see cref="T:C1.C1Schedule.BasePersistableObject"/>.
            This component implements methods of operations over the collections of objects. 
            It allows the collection to be populated programmatically 
            or automatically by retrieving data from the data source which 
            is specified by the DataSource and DataMember properties. 
            It allows mapping of data source fields to the object properties.
            </summary>
            <typeparam name="T">The type of the objects which will be stored in the storage.
            It should be derived from the <see cref="T:C1.C1Schedule.BasePersistableObject"/> class
            and have the default parameter-less constructor.</typeparam>
            <typeparam name="TMappingCollection">The type of the collection which
            will be used for mapping. It should be derived from 
            the <see cref="T:C1.C1Schedule.MappingCollectionBase`1"/> class
            and have the default parameter-less constructor.</typeparam>
        </member>
        <member name="M:C1.C1Schedule.BaseStorage`2.#ctor(C1.C1Schedule.StorageComponent)">
            <summary>
            Initializes the new instance of the <see cref="T:C1.C1Schedule.BaseStorage`2"/> component.
            </summary>
            <param name="scheduleStorage">The owning <see cref="T:C1.C1Schedule.StorageComponent"/> component.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseStorage`2.RefreshData">
            <summary>
            Call this method each time after changing your data source 
            if it doesn't implement IBindingList interface.
            Or use BaseStorage{T, TMappingCollection}.Add 
            and BaseStorage{T, TMappingCollection}.Remove 
            instead of corresponding methods of your data source class.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BaseStorage`2.BoundMode">
            <summary>
            Gets a value indicating if the collection is bound to data. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BaseStorage`2.Mappings">
            <summary>
            Gets or sets the <see cref="T:C1.C1Schedule.MappingCollectionBase`1"/> derived object 
            that allows the properties of objects maintained by the current collection 
            to be bound to the appropriate fields in the data source. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BaseStorage`2.ShouldSerializeMappings">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.C1Schedule.BaseStorage`2.ScheduleStorage">
            <summary>
            Gets the reference to the owning <see cref="T:C1.C1Schedule.C1ScheduleStorage"/> component.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BaseStorage`2.Objects">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BaseStorage`2.System#ComponentModel#ISite#Component">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BaseStorage`2.System#ComponentModel#ISite#Container">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BaseStorage`2.System#ComponentModel#ISite#DesignMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BaseStorage`2.System#ComponentModel#ISite#Name">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BaseStorage`2.System#IServiceProvider#GetService(System.Type)">
            <summary>
            
            </summary>
            <param name="serviceType"></param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.BaseStorage`2.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Translates changes in the internal list to the Objects collection.
            </summary>
            <param name="e">A System.ComponentModel.ListChangedEventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseStorage`2.Remove(System.Object)">
            <summary>
            Removes object from the Objects collection.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to remove.</param>
        </member>
        <member name="P:C1.C1Schedule.BaseStorage`2.DataKeyNamesInternal">
            <summary>
            This property is for internal use only.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BaseStorage`2.OnDataSourceItemSynchronized(C1.C1Schedule.ItemSynchronizedEventArgs)">
            <summary>
            Raises the <see cref="E:C1.C1Schedule.BaseStorage`2.DataSourceItemSynchronized"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.C1Schedule.ItemSynchronizedEventArgs"/> 
            that contains the event data.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseStorage`2.SetCollectionItemBaseItem(C1.C1Schedule.BasePersistableObject,System.Object,C1.C1Schedule.ItemsMapTableRow)">
            <summary>
            Updates ItemsMap and BasePersistableObject.BaseSourceItemMap.
            <paramref name="mapRow"/> should be specified if it's known (for 
            performance purposes), if it's null then the one will be determined
            by <paramref name="sourceItem"/>
            </summary>
            <param name="collectionItem"></param>
            <param name="sourceItem"></param>
            <param name="mapRow"></param>
        </member>
        <member name="M:C1.C1Schedule.BaseStorage`2.IsSynchronizable(C1.C1Schedule.BasePersistableObject)">
            <summary>
            Indicates whether the specified collection item should be synchronized.
            </summary>
            <param name="collectionItem">The <see cref="T:C1.C1Schedule.BasePersistableObject"/> object.</param>
            <returns>True if item should be synchronized; false, otherwise.</returns>
        </member>
        <member name="M:C1.C1Schedule.BaseStorage`2.CommitItemChanges(`0)">
            <summary>
            Commits all changes in the data item.
            </summary>
            <param name="item">Data item to apply changes.</param>
        </member>
        <member name="T:C1.C1Schedule.SynchronizationActionEnum">
            <summary>
            Describes the version of data in a data storage. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.SynchronizationActionEnum.Added">
            <summary>
            A new item.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.SynchronizationActionEnum.Deleted">
            <summary>
            A deleted item.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.SynchronizationActionEnum.Changed">
            <summary>
            A changed item.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.ItemSynchronizedEventArgs">
            <summary>
            Provides data for the DataSourceItemSynchronized event.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.ItemSynchronizedEventArgs.#ctor(C1.C1Schedule.C1BindingSource,C1.C1Schedule.BasePersistableObject,System.Object,C1.C1Schedule.SynchronizationActionEnum)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.ItemSynchronizedEventArgs"/> class.
            </summary>
            <param name="storage">Reference to the changed <see cref="T:C1.C1Schedule.C1BindingSource"/> object.</param>
            <param name="collectionItem">Reference to the <see cref="T:C1.C1Schedule.BasePersistableObject"/> derived object.</param>
            <param name="dataSourceItem">Reference to the corresponding item in the data source.</param>
            <param name="action">The <see cref="T:C1.C1Schedule.SynchronizationActionEnum"/> value.</param>
        </member>
        <member name="P:C1.C1Schedule.ItemSynchronizedEventArgs.Storage">
            <summary>
            Gets the reference to the changed <see cref="T:C1.C1Schedule.C1BindingSource"/> object.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.ItemSynchronizedEventArgs.DataSourceItem">
            <summary>
            Gets the reference to the data source item.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.ItemSynchronizedEventArgs.CollectionItem">
            <summary>
            Gets the reference to the <see cref="T:C1.C1Schedule.BasePersistableObject"/> derived object.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.ItemSynchronizedEventArgs.Action">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.SynchronizationActionEnum"/> value.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.DataSourceItemSynchronizedEventHandler">
            <summary>
            The delegate type for the event handlers of the DataSourceItemSynchronized event. 
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:C1.C1Schedule.ItemSynchronizedEventArgs"/> 
            that contains the event data.</param>
        </member>
        <member name="T:C1.C1Schedule.C1ScheduleStorage">
            <summary>
            The <see cref="T:C1.C1Schedule.C1ScheduleStorage"/> component handles all data 
            operations for the scheduler control and contains specific data storages 
            for appointments, resources, contacts, owners, labels and statuses, 
            which are used for binding different collections to the data.
            The <see cref="T:C1.C1Schedule.C1ScheduleStorage"/> component also handles data 
            importing and exporting to other scheduling formats such as binary, iCal, and XML.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.C1ScheduleStorage.AppointmentsLoaded">
            <summary>
            Occurs when appointments were loaded from the file.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.C1ScheduleStorage.SystemTimeChanged">
            <summary>
            Occurs when system time has been changed.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1ScheduleStorage.ContactStorage">
            <summary>
            Gets the <see cref="P:C1.C1Schedule.C1ScheduleStorage.ContactStorage"/> object. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1ScheduleStorage.OwnerStorage">
            <summary>
            Gets the <see cref="P:C1.C1Schedule.C1ScheduleStorage.ContactStorage"/> object used to keep contacts which might be used as appointment owners. 
            </summary>
            <remarks><see cref="P:C1.C1Schedule.Appointment.Owner"/> property only accepts <see cref="T:C1.C1Schedule.Contact"/> objects which are present in this storage.</remarks>
        </member>
        <member name="P:C1.C1Schedule.C1ScheduleStorage.AppointmentStorage">
            <summary>
            Gets the <see cref="P:C1.C1Schedule.C1ScheduleStorage.AppointmentStorage"/> object. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1ScheduleStorage.LabelStorage">
            <summary>
            Gets the <see cref="P:C1.C1Schedule.C1ScheduleStorage.LabelStorage"/> object. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1ScheduleStorage.ResourceStorage">
            <summary>
            Gets the <see cref="P:C1.C1Schedule.C1ScheduleStorage.ResourceStorage"/> object. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1ScheduleStorage.StatusStorage">
            <summary>
            Gets the <see cref="P:C1.C1Schedule.C1ScheduleStorage.StatusStorage"/> object. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1ScheduleStorage.CategoryStorage">
            <summary>
            Gets the <see cref="P:C1.C1Schedule.C1ScheduleStorage.CategoryStorage"/> object. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1ScheduleStorage.Reminders">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.ReminderCollection"/> object. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1ScheduleStorage.Actions">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.ActionCollection"/> object. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleStorage.Clear">
            <summary>
            Clears all unbound storages. Loads default sets if any for unbound storages. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleStorage.Export(System.String,C1.C1Schedule.FileFormatEnum)">
            <summary>
            Exports the scheduler's data to a file in the specified format. 
            </summary>
            <param name="path">A <see cref="T:System.String"/> containing the full path 
            (including the file name and extension) to export the scheduler's data to. </param>
            <param name="format">The <see cref="T:C1.C1Schedule.FileFormatEnum"/> value.</param>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleStorage.Export(System.IO.Stream,C1.C1Schedule.FileFormatEnum)">
            <summary>
            Exports the scheduler's data to a stream in the specified format. 
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream into which the scheduler's data will be exported.</param>
            <param name="format">The <see cref="T:C1.C1Schedule.FileFormatEnum"/> value.</param>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleStorage.Export(System.String,System.Collections.Generic.IList{C1.C1Schedule.Appointment},C1.C1Schedule.FileFormatEnum)">
            <summary>
            Exports the appointments' data to a file in the specified format. 
            </summary>
            <param name="path">A <see cref="T:System.String"/> containing the full path 
            (including the file name and extension) to export. </param>
            <param name="appointments"><see cref="T:System.Collections.Generic.IList`1"/> to be exported.</param>
            <param name="format">The <see cref="T:C1.C1Schedule.FileFormatEnum"/> value.</param>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleStorage.Export(System.IO.Stream,System.Collections.Generic.IList{C1.C1Schedule.Appointment},C1.C1Schedule.FileFormatEnum)">
            <summary>
            Exports the appointments' data to a stream in the specified format. 
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream into which the appointments's data will be exported.</param>
            <param name="appointments"><see cref="T:System.Collections.Generic.IList`1"/> to be exported.</param>
            <param name="format">The <see cref="T:C1.C1Schedule.FileFormatEnum"/> value.</param>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleStorage.Import(System.String,C1.C1Schedule.FileFormatEnum)">
            <summary>
            Imports data into the scheduler from a file of the specified format.
            </summary>
            <param name="path">A <see cref="T:System.String"/> value containing the full path 
            (including the file name and extension) to a file which contains 
            the data to be imported into the scheduler.</param>
            <param name="format">The <see cref="T:C1.C1Schedule.FileFormatEnum"/> value.</param>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleStorage.Import(System.IO.Stream,C1.C1Schedule.FileFormatEnum)">
            <summary>
            Imports the scheduler's data from a stream whose data is in the specified format.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream that contains the data to import to the scheduler. </param>
            <param name="format">The <see cref="T:C1.C1Schedule.FileFormatEnum"/> value.</param>
        </member>
        <member name="F:C1.C1Schedule.C1ScheduleStorage.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleStorage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleStorage.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.CategoryStorage">
            <summary>
            The <see cref="T:C1.C1Schedule.CategoryStorage"/> is the storage for <see cref="T:C1.C1Schedule.Category"/> objects.
            It allows binding to the data source and mapping data source fields 
            to the category properties.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CategoryStorage.Categories">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.CategoryCollection"/> object that contains 
            category related information. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.ContactStorage">
            <summary>
            The <see cref="T:C1.C1Schedule.ContactStorage"/> is the storage for <see cref="T:C1.C1Schedule.Contact"/> objects.
            It allows binding to the data source and mapping data source fields 
            to the contact properties.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.ContactStorage.Contacts">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.ContactCollection"/> object that contains 
            contact related information. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.LabelStorage">
            <summary>
            The <see cref="T:C1.C1Schedule.LabelStorage"/> is the storage for <see cref="T:C1.C1Schedule.Label"/> objects.
            It allows binding to the data source and mapping data source fields 
            to the label properties.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.LabelStorage.Labels">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.LabelCollection"/> object 
            that contains label related information. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.ResourceStorage">
            <summary>
            The <see cref="T:C1.C1Schedule.ResourceStorage"/> is the storage for <see cref="T:C1.C1Schedule.Resource"/> objects.
            It allows binding to the data source and mapping data source fields 
            to the resource properties.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.ResourceStorage.Resources">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.ResourceCollection"/> object 
            that contains resource related information. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.StatusStorage">
            <summary>
            The <see cref="T:C1.C1Schedule.StatusStorage"/> is the storage for <see cref="T:C1.C1Schedule.Status"/> objects.
            It allows binding to the data source and mapping data sources fields 
            to the status properties.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.StatusStorage.Statuses">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.StatusCollection"/> object 
            that contains status related information. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.StorageComponent">
            <summary>
            The <see cref="T:C1.C1Schedule.StorageComponent"/> is the base component for data storage.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.StorageComponent.#ctor">
            <summary>
            Initializes the new instance of the <see cref="T:C1.C1Schedule.StorageComponent"/> component.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.StorageComponent.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes the new instance of the <see cref="T:C1.C1Schedule.StorageComponent"/> component.
            </summary>
            <param name="container">The parent container.</param>
        </member>
        <member name="P:C1.C1Schedule.StorageComponent.DesignMode">
            <summary>
            Gets the <see cref="T:System.Boolean"/> value specifying whether the component is in design mode.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.StorageComponent.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.StorageComponent.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.C1Schedule.StorageComponent.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.SourceToCollectionItemsMap">
            <summary>
            Represents a mapping between data source and collection items and holds a cache
            of source items in order as they are represented in a source list. The latter
            necessary to get an instance of a deleted item.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.SourceToCollectionItemsMap._mapTable">
            key - source item, value - SourceCollectionItemPair, 
            item[int].SourceItem - the same as source.item[int]
        </member>
        <member name="M:C1.C1Schedule.SourceToCollectionItemsMap.SetSourceItems(System.Collections.IList)">
            <summary>
            Initialize a source items cache.
            </summary>
            <param name="sourceList"></param>
        </member>
        <member name="M:C1.C1Schedule.SourceToCollectionItemsMap.UpdateByListChange(System.ComponentModel.ListChangedEventArgs,System.Collections.IList,System.Boolean@)">
            <summary>
            Updates the source items cache based on the specified list change action in
            the specified source list.
            Returns a map row affected by this change.
            </summary>
            <param name="e"></param>
            <param name="sourceList"></param>
            <param name="duplicateAdd"></param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.SourceToCollectionItemsMap.IsValidIndex(System.Int32)">
            <summary>
            Indicates whether the specified index is valid.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:C1.C1Schedule.SyncBatchInfo.ResetState">
            <summary>
            Finished means not Reset state.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.BinaryExchanger">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BinaryExchanger.ExportInternal(System.IO.Stream)">
            <summary>
            Exports the appointments's data to a stream in the XML format. 
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream into which the appointments's data will be exported.</param>
        </member>
        <member name="M:C1.C1Schedule.BinaryExchanger.ImportInternal(System.IO.Stream)">
            <summary>
            Imports the scheduler's data from a stream whose data is in the XML format.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream that contains the data to import to the scheduler. </param>
        </member>
        <member name="T:C1.C1Schedule.FileFormatEnum">
            <summary>
            Specifies the format of the exported or imported file.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.FileFormatEnum.XML">
            <summary>
            XML format (ComponentOne's own format).
            </summary>
        </member>
        <member name="F:C1.C1Schedule.FileFormatEnum.iCal">
            <summary>
            iCal format according to RFC 2445.
            Format specification could be found here:
            http://tools.ietf.org/rfc/rfc2445.txt
            </summary>
        </member>
        <member name="F:C1.C1Schedule.FileFormatEnum.Binary">
            <summary>
            Binary format.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.C1ScheduleExchanger">
            <summary>
            The base class for all importers/exporters in C1Schedule
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleExchanger.Export(System.String)">
            <summary>
            Exports the scheduler's data to a file. 
            </summary>
            <param name="path">A <see cref="T:System.String"/> containing the full path 
            (including the file name and extension) to export the scheduler's data to. </param>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleExchanger.Export(System.IO.Stream)">
            <summary>
            Exports the scheduler's data to a stream. 
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream into which the scheduler's data will be exported.</param>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleExchanger.Export(System.String,System.Collections.Generic.IList{C1.C1Schedule.Appointment})">
            <summary>
            Exports the appointments's data to a file. 
            </summary>
            <param name="path">A <see cref="T:System.String"/> containing the full path 
            (including the file name and extension) to export. </param>
            <param name="appointments">A <see cref="T:System.Collections.Generic.IList`1"/> object.</param>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleExchanger.Export(System.IO.Stream,System.Collections.Generic.IList{C1.C1Schedule.Appointment})">
            <summary>
            Exports the appointments's data to a stream. 
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream into which the appointments's data will be exported.</param>
            <param name="appointments">A <see cref="T:System.Collections.Generic.IList`1"/> object.</param>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleExchanger.Import(System.String)">
            <summary>
            Imports data into the scheduler from a file.
            </summary>
            <param name="path">A <see cref="T:System.String"/> value containing the full path 
            (including the file name and extension) to a file which contains 
            the data to be imported into the scheduler.</param>
        </member>
        <member name="M:C1.C1Schedule.C1ScheduleExchanger.Import(System.IO.Stream)">
            <summary>
            Imports the scheduler's data from a stream.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream that contains the data to import to the scheduler. </param>
        </member>
        <member name="T:C1.C1Schedule.ICalExchanger">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.C1Schedule.ICalExchanger.ExportInternal(System.IO.Stream)">
            <summary>
            Exports the appointments's data to a stream in the iCal format. 
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream into which the appointments's data will be exported.</param>
        </member>
        <member name="M:C1.C1Schedule.ICalExchanger.ImportInternal(System.IO.Stream)">
            <summary>
            Imports the scheduler's data from a stream whose data is in the ICal format.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream that contains the data to import to the scheduler. </param>
        </member>
        <member name="T:C1.C1Schedule.ICalPattern">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.C1Schedule.ICalTimeZoneInfo">
            <summary>
            The <see cref="T:C1.C1Schedule.ICalTimeZoneInfo"/> class determines time zone properties.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.ICalTimeZoneInfo.LastModified">
            <summary>
            A UTC value that specifies the date and time that this 
            time zone definition was last updated.
            It's unknown (has value DateTime.MinValue) for time zones,
            registered in the local system.
            But it makes sense for time zones, imported from iCal format.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.ICalUtils">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.C1Schedule.XmlExchanger">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.C1Schedule.XmlExchanger.ExportInternal(System.IO.Stream)">
            <summary>
            Exports the appointments's data to a stream in the XML format. 
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream into which the appointments's data will be exported.</param>
        </member>
        <member name="M:C1.C1Schedule.XmlExchanger.ImportInternal(System.IO.Stream)">
            <summary>
            Imports the scheduler's data from a stream whose data is in the XML format.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream that contains the data to import to the scheduler. </param>
        </member>
        <member name="T:C1.C1Schedule.ActionTypeEnum">
            <summary>
            <see cref="T:C1.C1Schedule.ActionTypeEnum"/> determines the type of action. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.ActionTypeEnum.ExecuteApplication">
            <summary>
            Execute local application with specified parameters.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.ActionTypeEnum.NavigateToUrl">
            <summary>
            Open specified target in default browser.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.Action">
            <summary>
            Represents an action to take when the current system time reaches 
            the start of the associated <see cref="T:C1.C1Schedule.Appointment"/> object.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Action.#ctor(C1.C1Schedule.Appointment)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Action"/> class.
            </summary>
            <param name="owner">The <see cref="T:C1.C1Schedule.Appointment"/> object.</param>
        </member>
        <member name="M:C1.C1Schedule.Action.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Action"/> class.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Action.ParentAppointment">
            <summary>
            Gets or sets the owning <see cref="T:C1.C1Schedule.Appointment"/> object. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Action.Command">
            <summary>
            Gets or sets the command string for the action.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Action.Parameters">
            <summary>
            Gets or sets parameters used when the action is invoked.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Action.Enabled">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value indicating 
            whether the action is enabled. Default value is True.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Action.Type">
            <summary>
            Gets or sets the <see cref="T:C1.C1Schedule.ActionTypeEnum"/> value determining 
            the type of action that will occur. Default value is ActionTypeEnum.ExecuteApplication.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Action.FromXml(System.Xml.XmlReader)">
            <summary>
            Reconstructs action properties from an <see cref="T:System.Xml.XmlReader"/>. 
            </summary>
            <param name="reader"></param>
            <returns>True if an action has been changed.</returns>
        </member>
        <member name="M:C1.C1Schedule.Action.ToXml(System.Xml.XmlWriter)">
            <summary>
            Creates an XML encoding of the action properties. 
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.C1Schedule.Action.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Special constructor for deserialization.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <param name="context">The context information.</param>
        </member>
        <member name="T:C1.C1Schedule.ActionCollection">
            <summary>
            The <see cref="T:C1.C1Schedule.ActionCollection"/> is a collection of all <see cref="T:C1.C1Schedule.Action"/> objects 
            that represents the reminders for all pending items.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.ActionCollection.#ctor">
            <summary>
            Initialize new <see cref="T:C1.C1Schedule.ReminderCollection"/> object.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.ActionCollection.InsertItem(System.Int32,C1.C1Schedule.Action)">
            <summary>
            Overrides default behavior.
            </summary>
            <param name="index">The zero-based index of the item.</param>
            <param name="item">The <see cref="T:C1.C1Schedule.Action"/> object to insert.</param>
        </member>
        <member name="M:C1.C1Schedule.ActionCollection.RemoveItem(System.Int32)">
            <summary>
            Overrides default behavior.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:C1.C1Schedule.ActionCollection.ClearItems">
            <summary>
            Overrides default behavior.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.ActionCollection.WaitProc(System.Object,System.Boolean)">
            <summary>
            Method to be called when it is time to execute action.
            </summary>
            <param name="state"></param>
            <param name="timedOut"></param>
        </member>
        <member name="M:C1.C1Schedule.ActionCollection.Dispose">
            <summary>
            Releases all unmanaged resources.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.RecurrenceStateEnum">
            <summary>
            Determines the type of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.RecurrenceStateEnum.NotRecurring">
            <summary>
            Represents a standard (non-recurring) appointment. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.RecurrenceStateEnum.Master">
            <summary>
            Represents the appointment which serves as the pattern 
            for the other recurring appointments. 
            The pattern for recurring appointments is specified via 
            the Appointment.Recurrence property.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.RecurrenceStateEnum.Occurrence">
            <summary>
            Represents one of recurring appointments whose pattern appointment 
            is specified via the Appointment.Recurrence property.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.RecurrenceStateEnum.Exception">
            <summary>
            Represents a recurring appointment, which was changed 
            and now doesn't satisfy the pattern of the recurring series.  
            </summary>
        </member>
        <member name="F:C1.C1Schedule.RecurrenceStateEnum.Removed">
            <summary>
            Represents a recurring appointment, which was deleted
            and now doesn't satisfy the pattern of the recurring series.  
            </summary>
        </member>
        <member name="T:C1.C1Schedule.ImportanceEnum">
            <summary>
            Determines the importance of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.ImportanceEnum.Low">
            <summary>
            Low
            </summary>
        </member>
        <member name="F:C1.C1Schedule.ImportanceEnum.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:C1.C1Schedule.ImportanceEnum.High">
            <summary>
            High
            </summary>
        </member>
        <member name="T:C1.C1Schedule.SensitivityEnum">
            <summary>
            Determines the sensitivity of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.SensitivityEnum.Confidential">
            <summary>
            Confidential
            </summary>
        </member>
        <member name="F:C1.C1Schedule.SensitivityEnum.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:C1.C1Schedule.SensitivityEnum.Personal">
            <summary>
            Personal
            </summary>
        </member>
        <member name="F:C1.C1Schedule.SensitivityEnum.Private">
            <summary>
            Private
            </summary>
        </member>
        <member name="T:C1.C1Schedule.Appointment">
            <summary>
            The <see cref="T:C1.C1Schedule.Appointment"/> object is a meeting, a one-time appointment, 
            or a recurring appointment or meeting in the C1Schedule. 
            The <see cref="T:C1.C1Schedule.Appointment"/> class includes properties 
            that specify meeting details such as the location and time.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.Appointment._dragStartValue">
            <summary>
            The <see cref="F:C1.C1Schedule.Appointment._dragStartValue"/>  field can be used to keep DateTime value, 
            where end-user started to drag appointment. It might be any time between app.Start and End values.
            If you set this field at the beginning of the drag and drop operation, later you can determine appointment.Start value 
            as _lastAcceptedStart.Add(newStart.Subtract(_dragStartValue)), where newStart is DateTime value under the pointer.
            Appointment.EndEdit and CancelEdit methods reset this field to DateTime.MinValue.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Appointment.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Appointment"/> class with the specified key.
            </summary>
            <param name="key">The <see cref="T:System.Int32"/> value which should be used as appointment key.</param>
            <remarks>Use this constructor if your business logic requires setting custom key value.
            Make sure that you use the correct constructor overload (with integer or Guid key value) and that key value is unique.</remarks>
        </member>
        <member name="M:C1.C1Schedule.Appointment.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Appointment"/> class with the specified key.
            </summary>
            <param name="key">The <see cref="T:System.Guid"/> value which should be used as appointment key.</param>
            <remarks>Use this constructor if your business logic requires setting custom key value.
            Make sure that you use the correct constructor overload (with integer or Guid key value) and that key value is unique.</remarks>
        </member>
        <member name="M:C1.C1Schedule.Appointment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Appointment"/> class.
            </summary>
            <remarks>Creates an appointment with default properties.</remarks>
        </member>
        <member name="M:C1.C1Schedule.Appointment.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Appointment"/> 
            class with the specified parameters.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the appointment.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value which specifies 
            the end date and time of the appointment.</param>
        </member>
        <member name="M:C1.C1Schedule.Appointment.#ctor(System.DateTime,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Appointment"/> 
            class with the specified parameters.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the appointment.</param>
            <param name="duration">The <see cref="T:System.TimeSpan"/> value which specifies 
            the duration of the appointment.</param>
        </member>
        <member name="M:C1.C1Schedule.Appointment.#ctor(System.DateTime,System.DateTime,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Appointment"/> 
            class with the specified parameters.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the appointment.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value which specifies 
            the end date and time of the appointment.</param>
            <param name="subject">The <see cref="T:System.String"/> value which contains 
            the subject of the appointment.</param>
        </member>
        <member name="M:C1.C1Schedule.Appointment.#ctor(System.DateTime,System.TimeSpan,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Appointment"/> 
            class with the specified parameters.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the appointment.</param>
            <param name="duration">The <see cref="T:System.TimeSpan"/> value which specifies 
            the duration of the appointment.</param>
            <param name="subject">The <see cref="T:System.String"/> value which contains 
            the subject of the appointment.</param>
        </member>
        <member name="P:C1.C1Schedule.Appointment.ParentCollection">
            <summary>
            Gets the reference to the parent <see cref="T:C1.C1Schedule.AppointmentCollection"/> object.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Action">
            <summary>
            Gets an <see cref="P:C1.C1Schedule.Appointment.Action"/> object for the <see cref="T:C1.C1Schedule.Appointment"/> object.
            Once this property is first requested, a new <see cref="P:C1.C1Schedule.Appointment.Action"/> object 
            is created and assigned to the <see cref="P:C1.C1Schedule.Appointment.Action"/> property.
            </summary>
            <remarks>The <see cref="P:C1.C1Schedule.Appointment.Action"/> object contains information regarding 
            the type of action to perform as well as the command 
            and parameters to pass to the action.
            If the action object is enabled, the action will be invoked 
            when the start date and time of the owning <see cref="T:C1.C1Schedule.Appointment"/> object has occurred.
            </remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Importance">
            <summary>
            Gets or sets the <see cref="T:C1.C1Schedule.ImportanceEnum"/> value indicating 
            the relative importance level for the appointment.
            Default value is <see cref="F:C1.C1Schedule.ImportanceEnum.Normal"/>.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.AllDayEvent">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value indicating 
            if the current appointment is an All-day appointment.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Tag">
            <summary>
            Gets or sets custom information associated with this object.
            </summary>
            <remarks>This property is valid only for the lifetime of the object.</remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.CustomData">
            <summary>
            Gets or sets custom text associated with this object.
            </summary>
            <remarks>This property is serialized with other appointment properties.
            It isn't used by the scheduler, use it to keep your data associated with appointment.
            This property is serialized into different formats and it is saved into underlying 
            data source if mapping for Appointment Properties is set.</remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.AppointmentType">
            <summary>
            Gets or sets custom text value associated with this object.
            </summary>
            <remarks>
            <para>This property is serialized with other appointment properties.
            You can use this property to show customized content or perform different actions depending on the property value.
            This property is serialized into different formats and it is saved into underlying 
            data source if mapping for Appointment Properties is set.</para></remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Saved">
            <summary>
            Gets the <see cref="T:System.Boolean"/> value indicating if the appointment 
            has not been modified since the last save.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Sensitivity">
            <summary>
            Gets or sets the <see cref="T:C1.C1Schedule.SensitivityEnum"/> value indicating 
            the sensitivity level of the appointment. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Private">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value determining 
            whether the calendar owner intends to keep the <see cref="T:C1.C1Schedule.Appointment"/>
            object private.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Subject">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value 
            representing the subject of the <see cref="T:C1.C1Schedule.Appointment"/> object. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Body">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value representing 
            the body of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Conflicts">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.AppointmentList"/> object representing 
            the list of <see cref="T:C1.C1Schedule.Appointment"/> objects which are in conflict 
            with this particular appointment.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.AutoResolvedWinner">
            <summary>
            Gets the <see cref="T:System.Boolean"/> value determining if the item is 
            a winner of an automatic conflict resolution.
            </summary>
            <remarks>A value of false does not necessarily indicate that the item is 
            a loser of an automatic conflict resolution. 
            The item should be in conflict with another item.
            If an item has its Conflicts.Count property greater than zero 
            and if its <see cref="P:C1.C1Schedule.Appointment.AutoResolvedWinner"/> property is true, 
            it is a winner of an automatic conflict resolution. 
            On the other hand, if the item is in conflict and has its 
            <see cref="P:C1.C1Schedule.Appointment.AutoResolvedWinner"/> property as false, 
            it is a loser in an automatic conflict resolution.</remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Start">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value determining the 
            start date and time of the appointment. 
            </summary>
            <remarks>
            <para>If the <see cref="P:C1.C1Schedule.Appointment.AllDayEvent"/> property is set to true, 
            then the start date of the appointment is the <see cref="P:System.DateTime.Date"/> of 
            the <see cref="P:C1.C1Schedule.Appointment.Start"/>, and the start time of the appointment is 0:00.</para>
            <para>At setting this property, if it's time is not equal 0:00, 
            the <see cref="P:C1.C1Schedule.Appointment.AllDayEvent"/> property will be set to false.</para></remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.End">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value determining 
            the end date and time of the appointment. 
            </summary>
            <remarks> <para>The <see cref="P:C1.C1Schedule.Appointment.End"/> property is usually specified 
            by the <see cref="P:C1.C1Schedule.Appointment.Start"/> and <see cref="P:C1.C1Schedule.Appointment.Duration"/> properties, 
            and is always calculated as <see cref="P:C1.C1Schedule.Appointment.End"/> = <see cref="P:C1.C1Schedule.Appointment.Start"/> + <see cref="P:C1.C1Schedule.Appointment.Duration"/>. 
            When setting the <see cref="P:C1.C1Schedule.Appointment.End"/> property, the <see cref="P:C1.C1Schedule.Appointment.Start"/> property 
            retains its value, and the <see cref="P:C1.C1Schedule.Appointment.Duration"/> is changed according 
            to the new value of the <see cref="P:C1.C1Schedule.Appointment.End"/> property. 
            If the new <see cref="P:C1.C1Schedule.Appointment.End"/> property's value is less than 
            the <see cref="P:C1.C1Schedule.Appointment.Start"/> property's value, then an exception will be raised.</para>
            <para>At setting this property, if it's time is not equal 0:00, 
            or value is equal to the value of <see cref="P:C1.C1Schedule.Appointment.Start"/> property, 
            the <see cref="P:C1.C1Schedule.Appointment.AllDayEvent"/> property will be set to false.</para></remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.IsOneDay">
            <summary>
            Gets a <see cref="T:System.Boolean"/> value indicating either it is 
            a one day appointment or shares some days.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Duration">
            <summary>
            Gets or sets the <see cref="T:System.TimeSpan"/> value indicating the 
            duration of the appointment.
            </summary>
            <remarks>At setting this property, if it's value is not equal to the whole 
            number of days, the <see cref="P:C1.C1Schedule.Appointment.AllDayEvent"/> property will be set to false.</remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Location">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value specifying 
            where the appointment is going to be.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Reminder">
            <summary>
            Gets the <see cref="P:C1.C1Schedule.Appointment.Reminder"/> object which is associated with the appointment.
            To associate an appointment with the reminder, set its 
            <see cref="P:C1.C1Schedule.Appointment.ReminderSet"/> property to true. 
            Once this property is set to true, a new <see cref="P:C1.C1Schedule.Appointment.Reminder"/> object 
            is created and assigned to the <see cref="P:C1.C1Schedule.Appointment.Reminder"/> property.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.ReminderSet">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value indicating whether 
            a reminder is associated with the appointment. 
            Once this property is set to true, a new <see cref="P:C1.C1Schedule.Appointment.Reminder"/> object 
            is created and assigned to the <see cref="P:C1.C1Schedule.Appointment.Reminder"/> property.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.ReminderTimeBeforeStart">
            <summary>
            Gets or sets the <see cref="T:System.TimeSpan"/> value indicating the 
            interval of time the reminder should occur 
            prior to the start of the appointment. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.ReminderOverrideDefault">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value indicating if the associated
            <see cref="P:C1.C1Schedule.Appointment.Reminder"/> object has non-default settings.
            True if the reminder overrides the default reminder behavior for the appointment.
            You must set the <see cref="P:C1.C1Schedule.Appointment.ReminderOverrideDefault"/> property to validate 
            the <see cref="P:C1.C1Schedule.Appointment.ReminderPlaySound"/> and 
            the <see cref="P:C1.C1Schedule.Appointment.ReminderSoundFile"/> properties.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.ReminderPlaySound">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value indicating if the reminder 
            should play a sound when it occurs for this appointment or task. 
            The <see cref="P:C1.C1Schedule.Appointment.ReminderPlaySound"/> property must be set in order to validate 
            the <see cref="P:C1.C1Schedule.Appointment.ReminderSoundFile"/> property. 
            This property is only valid if the <see cref="P:C1.C1Schedule.Appointment.ReminderOverrideDefault"/> property 
            is set to true.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.ReminderSoundFile">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value indicating the path and file name 
            of the sound file to play when the reminder occurs for the appointment. 
            This property is only valid if the <see cref="P:C1.C1Schedule.Appointment.ReminderOverrideDefault"/> and 
            <see cref="P:C1.C1Schedule.Appointment.ReminderPlaySound"/> properties are set to true.
            </summary>
            <remarks>The default sound is the system Exclamation sound.</remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.IsRecurring">
            <summary>
            Gets the <see cref="T:System.Boolean"/> value indicating if the appointment is recurring.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.ParentRecurrence">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.Appointment"/> object that defines the recurrence 
            criteria for this <see cref="T:C1.C1Schedule.Appointment"/> object. 
            If this appointment is a not member of a recurrence, 
            or is itself a root appointment, null is returned. 
            </summary>
            <remarks>If an appointment is recurring (see the <see cref="P:C1.C1Schedule.Appointment.IsRecurring"/> property) 
            it represents an occurrence in the series that is started and defined 
            by a specific pattern appointment. 
            Use the <see cref="P:C1.C1Schedule.Appointment.ParentRecurrence"/> property to obtain the pattern 
            of the current appointment. A pattern appointment can be recognized by its 
            <see cref="P:C1.C1Schedule.Appointment.RecurrenceState"/> property set 
            to the <see cref="F:C1.C1Schedule.RecurrenceStateEnum.Master"/> value. 
            The recurrence information defined by the pattern appointment can be accessed 
            via the <see cref="T:C1.C1Schedule.RecurrencePattern"/> property of the appointment. 
            </remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.RecurrenceState">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.RecurrenceStateEnum"/> value indicating 
            the recurrence state of the appointment. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Label">
            <summary>
            Gets or sets the <see cref="P:C1.C1Schedule.Appointment.Label"/> object associated with this appointment.
            </summary>
            <remarks>Labels may be associated with an appointment 
            to effectively group appointments. </remarks>
            <remarks>This property only accepts <see cref="P:C1.C1Schedule.Appointment.Label"/> objects which are present in the C1ScheduleStorage.LabelStorage storage.</remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Resources">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.ResourceList"/> object which holds the set of 
            <see cref="T:C1.C1Schedule.Resource"/> objects for this appointment.
            An appointment may be associated with multiple resources.
            </summary>
            <remarks>This property only accepts <see cref="T:C1.C1Schedule.Resource"/> objects which are present in the C1ScheduleStorage.ResourceStorage storage.</remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Links">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.ContactList"/> object which holds the set 
            of <see cref="T:C1.C1Schedule.Contact"/> objects for this appointment.
            An appointment may be associated with multiple contacts.
            </summary>
            <remarks>This property only accepts <see cref="T:C1.C1Schedule.Contact"/> objects which are present in the C1ScheduleStorage.ContactStorage storage.</remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.BusyStatus">
            <summary>
            Gets or sets the <see cref="T:C1.C1Schedule.Status"/> object indicating the busy status 
            of the user for the appointment.
            </summary>
            <remarks>This property only accepts <see cref="T:C1.C1Schedule.Status"/> objects which are present in the C1ScheduleStorage.StatusStorage storage.</remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Categories">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.CategoryList"/> object which holds the set 
            of categories assigned to the appointment.
            Categories may be associated with an appointment to effectively group appointments. 
            An appointment may be associated with multiple categories.
            </summary>
            <remarks>This property only accepts <see cref="T:C1.C1Schedule.Category"/> objects which are present in the C1ScheduleStorage.CategoryStorage storage.</remarks>
        </member>
        <member name="P:C1.C1Schedule.Appointment.Owner">
            <summary>
            Gets or sets the <see cref="T:C1.C1Schedule.Contact"/> object which owns current <see cref="T:C1.C1Schedule.Appointment"/> object.
            </summary>
            <remarks>This property only accepts <see cref="T:C1.C1Schedule.Contact"/> objects which are present in the C1ScheduleStorage.OwnerStorage storage.</remarks>
            <value>The default value is null.</value>
        </member>
        <member name="M:C1.C1Schedule.Appointment.BeginEdit">
            <summary>
            Prevents the <see cref="T:C1.C1Schedule.Appointment"/> object from being updated until 
            the <see cref="M:C1.C1Schedule.Appointment.EndEdit(System.Boolean)"/> method is called.
            </summary>
            <remarks>The <see cref="M:C1.C1Schedule.Appointment.BeginEdit"/> and <see cref="M:C1.C1Schedule.Appointment.EndEdit(System.Boolean)"/> methods 
            are designed to implement batch modifications. 
            This allows you to prevent generation of change notifications
            when changing multiple settings at the same time. 
            To do this enclose the code that changes the properties in calls to these methods.
            Each call to <see cref="M:C1.C1Schedule.Appointment.BeginEdit"/> must be paired with a call to <see cref="M:C1.C1Schedule.Appointment.EndEdit(System.Boolean)"/>. 
            To ensure that <see cref="M:C1.C1Schedule.Appointment.EndEdit(System.Boolean)"/> is always called even if an exception occurs, 
            wrap any calls to these methods in a try...finally statement.</remarks>
        </member>
        <member name="M:C1.C1Schedule.Appointment.EndEdit(System.Boolean)">
            <summary>
            Unlocks the <see cref="T:C1.C1Schedule.Appointment"/> object after a call 
            to the <see cref="M:C1.C1Schedule.Appointment.BeginEdit"/> method and causes an immediate update. 
            </summary>
            <param name="canRaiseChangeNotification">The <see cref="T:System.Boolean"/> value determining
            if change notifications can be generated when applying changes.</param>
        </member>
        <member name="M:C1.C1Schedule.Appointment.IsGroupMember(C1.C1Schedule.BaseObject,System.String)">
            <summary>
            Returns True if the current <see cref="T:C1.C1Schedule.Appointment"/> object is a member of a group which is specified by the
            groupOwner and groupBy parameters; False otherwise. 
            </summary>
            <param name="groupOwner">The <see cref="T:C1.C1Schedule.BaseObject"/> object determining the appointment group.</param>
            <param name="groupBy">The <see cref="T:System.String"/> value determining the type of grouping.</param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.Appointment.ClearRecurrencePattern">
            <summary>
            Removes the recurrence settings and restores 
            the <see cref="F:C1.C1Schedule.RecurrenceStateEnum.NotRecurring"/> state for an appointment.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Appointment.GetRecurrencePattern">
            <summary>
            Returns the <see cref="T:C1.C1Schedule.RecurrencePattern"/> object that represents 
            the recurrence attributes of an appointment. 
            If there is no existing recurrence pattern, a new 
            empty <see cref="T:C1.C1Schedule.RecurrencePattern"/> object is returned.
            </summary>
            <returns>The <see cref="T:C1.C1Schedule.RecurrencePattern"/> object.</returns>
        </member>
        <member name="M:C1.C1Schedule.Appointment.Copy">
            <summary>
            Creates the copy of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            </summary>
            <returns>The new <see cref="T:C1.C1Schedule.Appointment"/> instance.</returns>
        </member>
        <member name="M:C1.C1Schedule.Appointment.CopyForPattern">
            <summary>
            Creates the copy of the <see cref="T:C1.C1Schedule.Appointment"/> object. Doesn't copy recurrence pattern.
            </summary>
            <returns>The new <see cref="T:C1.C1Schedule.Appointment"/> instance.</returns>
        </member>
        <member name="M:C1.C1Schedule.Appointment.CopyFrom(C1.C1Schedule.Appointment,System.Boolean)">
             <summary>
             Copies properties from the specified <see cref="T:C1.C1Schedule.Appointment"/> object to this one. 
             </summary>
             <param name="app">The <see cref="T:C1.C1Schedule.Appointment"/> instance to copy.</param>
             <param name="includeKeys">Specifies whether to copy internal keys.</param>
            <remarks><para>Set includeKeys to true if you want to receive exact copy 
            of the specified <see cref="T:C1.C1Schedule.Appointment"/> object.</para>
            <para>Set includeKeys to false in order to copy only descriptive <see cref="T:C1.C1Schedule.Appointment"/> 
            properties to other <see cref="T:C1.C1Schedule.Appointment"/> object (for example, 
            if you want to duplicate appointment from one day to another).</para></remarks>
        </member>
        <member name="M:C1.C1Schedule.Appointment.CopyFrom(C1.C1Schedule.Appointment,System.Boolean,System.Boolean)">
             <summary>
             Copies properties from the specified <see cref="T:C1.C1Schedule.Appointment"/> object to this one. 
             </summary>
             <param name="app">The <see cref="T:C1.C1Schedule.Appointment"/> instance to copy.</param>
             <param name="includeKeys">Specifies whether to copy internal keys.</param>
             <param name="includeRecurrenceInformation">Specifies whether to copy recurrence information if any.</param>
            <remarks><para>Set includeKeys to true if you want to receive exact copy 
            of the specified <see cref="T:C1.C1Schedule.Appointment"/> object.</para>
            <para>Set includeKeys to false in order to copy only descriptive <see cref="T:C1.C1Schedule.Appointment"/> 
            properties to other <see cref="T:C1.C1Schedule.Appointment"/> object (for example, 
            if you want to duplicate appointment from one day to another).</para>
            <para>Set includeRecurrenceInformation to false to exclude RecurrenceState, ParentRecurrence and RecurrencePattern information.</para>
            </remarks>
        </member>
        <member name="M:C1.C1Schedule.Appointment.Delete">
            <summary>
            Deletes an appointment and removes it from 
            the owning <see cref="T:C1.C1Schedule.AppointmentCollection"/> collection.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Appointment.GetTimeTillEvent">
            <summary>
            Returns a time term before the appointment start; a negative value means that 
            appointment is expired.
            </summary>
            <returns>A time term before the appointment starts; a negative value means 
            that the appointment has expired.</returns>
        </member>
        <member name="M:C1.C1Schedule.Appointment.SaveAs(System.String,C1.C1Schedule.FileFormatEnum)">
            <summary>
            Saves the appointment to the specified path in the format 
            of the specified file format. 
            </summary>
            <param name="path">Required string. The path in which to save the item.</param>
            <param name="fileFormat">The <see cref="T:C1.C1Schedule.FileFormatEnum"/> value indicating 
            the file format to save.</param>
        </member>
        <member name="M:C1.C1Schedule.Appointment.FromXml(System.Xml.XmlNode)">
            <summary>
            Reconstructs appointment from an <see cref="T:System.Xml.XmlNode"/>. 
            </summary>
            <param name="node">An <see cref="T:System.Xml.XmlNode"/> 
            which contains the <see cref="T:C1.C1Schedule.Appointment"/> data.</param>
            <returns>True if appointment has been changed.</returns>
        </member>
        <member name="M:C1.C1Schedule.Appointment.FromXml(System.Xml.XmlReader)">
            <summary>
            Reconstructs appointment from an <see cref="T:System.Xml.XmlReader"/>. 
            </summary>
            <param name="reader">An <see cref="T:System.Xml.XmlReader"/> 
            which contains the <see cref="T:C1.C1Schedule.Appointment"/> data.</param>
            <returns>True if appointment has been changed.</returns>
        </member>
        <member name="M:C1.C1Schedule.Appointment.ToXml(System.Xml.XmlWriter)">
            <summary>
            Creates an XML encoding of the appointment. 
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> 
            that will receive the object data.</param>
        </member>
        <member name="M:C1.C1Schedule.Appointment.GetAppointmentProperties">
            <summary>
            Returns XML encoding of appointment properties.
            </summary>
            <remarks>Use this property to get the same string as serialized value of appointment properties, which you get
            when set mapping for AppointmentProperties.</remarks>
            <returns>The <see cref="T:System.String"/> value containing XML encoding of appointment properties.</returns>
        </member>
        <member name="M:C1.C1Schedule.Appointment.SetAppointmentProperties(System.String)">
            <summary>
            Reconstructs appointment properties from the specified string.
            </summary>
            <param name="source">The <see cref="T:System.String"/> value containing XML encoding of appointment properties.</param>
            <returns>True if appointment has been changed.</returns>
        </member>
        <member name="M:C1.C1Schedule.Appointment.PropsFromXml(System.Xml.XmlNode)">
            <summary>
            Reconstructs appointment properties from an <see cref="T:System.Xml.XmlNode"/>. 
            </summary>
            <param name="node"></param>
            <returns>True if appointment has been changed.</returns>
        </member>
        <member name="M:C1.C1Schedule.Appointment.PropsFromXml(System.Xml.XmlReader)">
            <summary>
            Reconstructs appointment properties from an <see cref="T:System.Xml.XmlReader"/>. 
            </summary>
            <param name="reader"></param>
            <returns>True if appointment has been changed.</returns>
        </member>
        <member name="M:C1.C1Schedule.Appointment.PropsToXml(System.Xml.XmlWriter)">
            <summary>
            Creates an XML encoding of the appointment properties. 
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.C1Schedule.Appointment.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Special constructor for deserialization.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <param name="context">The context information.</param>
        </member>
        <member name="M:C1.C1Schedule.Appointment.CancelEdit">
            <summary>
            Discards changes since the last <see cref="M:C1.C1Schedule.Appointment.BeginEdit"/> call.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Appointment.CopyPatternFrom(C1.C1Schedule.Appointment)">
            <summary>
            Copies RecurrencePattern from the specified Appointment
            </summary>
            <param name="app"></param>
        </member>
        <member name="M:C1.C1Schedule.Appointment.OnPropertyChanged(System.String)">
            <summary>
            Overrides default behavior.
            </summary>
            <param name="propertyName">The property name.</param>
        </member>
        <member name="T:C1.C1Schedule.AppointmentCollection">
            <summary>
            The <see cref="T:C1.C1Schedule.AppointmentCollection"/> is a collection of all 
            <see cref="T:C1.C1Schedule.Appointment"/> objects in the C1Schedule component.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.AppointmentCollection.AppointmentRecurrenceStateChanged">
            <summary>
            Occurs when RecurrenceState of an appointment is changed.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.AppointmentCollection.AppointmentCustomAction">
            <summary>
            Occurs when a custom action of an appointment executes. 
            </summary>
        </member>
        <member name="E:C1.C1Schedule.AppointmentCollection.AppointmentAdded">
            <summary>
            Occurs when an appointment was added.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.AppointmentCollection.AppointmentRemoved">
            <summary>
            Occurs when an appointment was removed.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.AppointmentCollection.AppointmentChanged">
            <summary>
            Occurs when an appointment was changed.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.AppointmentCollection.ParentStorage">
            <summary>
            Gets the reference to the owning <see cref="T:C1.C1Schedule.AppointmentStorage"/> object.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.Add">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.Appointment"/> object 
            with default settings and adds it to the collection.
            </summary>
            <returns>The <see cref="T:C1.C1Schedule.Appointment"/> object.</returns>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.Add(System.DateTime,System.DateTime)">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.Appointment"/> object 
            with specified parameters and adds it to the collection.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the appointment.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value which specifies 
            the end date and time of the appointment.</param>
            <returns>The <see cref="T:C1.C1Schedule.Appointment"/> object.</returns>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.Add(System.DateTime,System.TimeSpan)">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.Appointment"/> object 
            with specified parameters and adds it to the collection.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the appointment.</param>
            <param name="duration">The <see cref="T:System.TimeSpan"/> value which specifies 
            the duration of the appointment.</param>
            <returns>The <see cref="T:C1.C1Schedule.Appointment"/> object.</returns>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.Add(System.DateTime,System.DateTime,System.String)">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.Appointment"/> object 
            with specified parameters and adds it to the collection.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the appointment.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value which specifies 
            the end date and time of the appointment.</param>
            <param name="subject">The <see cref="T:System.String"/> value which contains 
            the subject of the appointment.</param>
            <returns>The <see cref="T:C1.C1Schedule.Appointment"/> object.</returns>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.Add(System.DateTime,System.TimeSpan,System.String)">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.Appointment"/> object 
            with specified parameters and adds it to the collection.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the appointment.</param>
            <param name="duration">The <see cref="T:System.TimeSpan"/> value which specifies 
            the duration of the appointment.</param>
            <param name="subject">The <see cref="T:System.String"/> value which contains 
            the subject of the appointment.</param>
            <returns>The <see cref="T:C1.C1Schedule.Appointment"/> object.</returns>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.GetOccurrence(C1.C1Schedule.Appointment,System.DateTime,C1.C1Schedule.CalendarInfo)">
            <summary>
            Returns a specific instance of the Appointment object on the specified date.
            </summary>
            <param name="pattern"></param>
            <param name="startDate"></param>
            <param name="info"></param>
            <returns></returns>
            <remarks>The GetOccurrence method generates an exception if no appointment 
            of that series exists on the specified date.</remarks>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.GetOccurrences(System.DateTime,System.DateTime)">
            <summary>
            Retrieves the <see cref="T:C1.C1Schedule.AppointmentList"/> object which contains 
            the full list of <see cref="T:C1.C1Schedule.Appointment"/> objects in the specified time interval. 
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the interval.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value which specifies 
            the end date and time of the interval.</param>
            <returns>The <see cref="T:C1.C1Schedule.AppointmentList"/> object.</returns>
            <remarks>This method will create instances of the <see cref="T:C1.C1Schedule.Appointment"/>
            object for recurring appointments if they haven't been created yet.
            </remarks>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.GetOccurrences(C1.C1Schedule.BaseObject,System.String,System.DateTime,System.DateTime,System.Boolean)">
            <summary>
            Retrieves the <see cref="T:C1.C1Schedule.AppointmentList"/> object which contains 
            the full list of <see cref="T:C1.C1Schedule.Appointment"/> objects in the specified time interval. 
            </summary>
            <param name="groupOwner">The <see cref="T:C1.C1Schedule.BaseObject"/> object determining the appointment group.</param>
            <param name="groupBy">The <see cref="T:System.String"/> value determining the type of grouping.</param>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the interval.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value which specifies 
            the end date and time of the interval.</param>
            <param name="includePrivateAppointments">The <see cref="T:System.Boolean"/> value determining whether 
            to include private appointments.</param>
            <returns>The <see cref="T:C1.C1Schedule.AppointmentList"/> object.</returns>
            <remarks>This method will create instances of the <see cref="T:C1.C1Schedule.Appointment"/>
            object for recurring appointments if they haven't been created yet.
            </remarks>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.GetOccurrences(C1.C1Schedule.Appointment,System.DateTime,System.DateTime)">
            <summary>
            Retrieves the <see cref="T:C1.C1Schedule.AppointmentList"/> object which contains 
            the list of occurrences of the specified master appointment 
            in the specified time interval. 
            </summary>
            <param name="appointment">The <see cref="T:C1.C1Schedule.Appointment"/> object 
            representing the master appointment.</param>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the interval.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value which specifies 
            the end date and time of the interval.</param>
            <returns>The <see cref="T:C1.C1Schedule.AppointmentList"/> object.</returns>
            <remarks>This method will create instances of the <see cref="T:C1.C1Schedule.Appointment"/>
            object for recurring appointments if they haven't been created yet.</remarks>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.GetConflicts(C1.C1Schedule.Appointment)">
            <summary>
            Retrieves the <see cref="T:C1.C1Schedule.AppointmentList"/> object which contains 
            the list of occurrences of <see cref="T:C1.C1Schedule.Appointment"/> objects 
            which are in conflict with the specified appointment.
            </summary>
            <param name="appointment">The <see cref="T:C1.C1Schedule.Appointment"/> object.</param>
            <returns>The <see cref="T:C1.C1Schedule.AppointmentList"/> object.</returns>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.ClearItems">
            <summary>
            Clears the collection.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.RemoveItem(System.Int32)">
            <summary>
            Overrides the default behavior.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.InsertItem(System.Int32,C1.C1Schedule.Appointment)">
            <summary>
            Overrides the default behavior.
            </summary>
            <param name="index">The zero-based index of the item.</param>
            <param name="item">The <see cref="T:C1.C1Schedule.Appointment"/> object to insert.</param>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.SetItem(System.Int32,C1.C1Schedule.Appointment)">
            <summary>
            Overrides the default behavior.
            </summary>
            <param name="index">The zero-based index of the item.</param>
            <param name="item">The <see cref="T:C1.C1Schedule.Appointment"/> object to set.</param>
        </member>
        <member name="M:C1.C1Schedule.AppointmentCollection.AddRange(C1.C1Schedule.Appointment[])">
            <summary>
            Adds an array of <see cref="T:C1.C1Schedule.Appointment"/> objects to the collection.
            This methods clears collection before adding new items. 
            Don't use it if you want to save previously existed items.
            </summary>
            <param name="items">An array of <see cref="T:C1.C1Schedule.Appointment"/> objects.</param>
        </member>
        <member name="T:C1.C1Schedule.AppointmentList">
            <summary>
            The <see cref="T:C1.C1Schedule.AppointmentList"/> is a sortable collection of 
            <see cref="T:C1.C1Schedule.Appointment"/> objects.
            </summary>
            <remarks>The <see cref="T:C1.C1Schedule.AppointmentList"/> is not guaranteed to be sorted. 
            You must sort the <see cref="T:C1.C1Schedule.AppointmentList"/> before performing operations
            that require the <see cref="T:C1.C1Schedule.AppointmentList"/> to be sorted.</remarks>
        </member>
        <member name="M:C1.C1Schedule.AppointmentList.Sort">
            <summary>
            Sorts the elements in the entire AppointmentList using the default comparer
            (by the Appointment.Start value).
            </summary>
        </member>
        <member name="M:C1.C1Schedule.AppointmentList.Sort(System.Comparison{C1.C1Schedule.Appointment})">
            <summary>
            Sorts the elements in the entire AppointmentList using 
            the specified System.Comparison. 
            </summary>
            <param name="comparison">The <see cref="T:System.Comparison`1"/> 
            to use when comparing elements.</param>
        </member>
        <member name="M:C1.C1Schedule.AppointmentList.Sort(System.Collections.Generic.IComparer{C1.C1Schedule.Appointment})">
            <summary>
            Sorts the elements in the entire AppointmentList using 
            the specified comparer. 
            </summary>
            <param name="comparer">The IComparer{Appointment} implementation to use 
            when comparing elements, or a null reference (Nothing in Visual Basic) 
            to use the default comparer.</param>
        </member>
        <member name="M:C1.C1Schedule.AppointmentList.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{C1.C1Schedule.Appointment})">
            <summary>
            Sorts the elements in a range of elements in AppointmentList using 
            the specified comparer. 
            </summary>
            <param name="index">The zero-based starting index of the range to sort.</param>
            <param name="count">The length of the range to sort.</param>
            <param name="comparer">The IComparer{Appointment} implementation to use 
            when comparing elements, or a null reference (Nothing in Visual Basic) 
            to use the default comparer.</param>
        </member>
        <member name="M:C1.C1Schedule.AppointmentList.Clone">
            <summary>
            Creates a copy of the list by copying items to the new list.
            </summary>
            <returns></returns>
        </member>
        <member name="T:C1.C1Schedule.AppointmentUniqueComparer">
            <summary>
            Compares <see cref="T:C1.C1Schedule.Appointment"/> objects by their start time.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.AppointmentUniqueComparer.Default">
            <summary>
            Returns an existing instance of <see cref="T:C1.C1Schedule.AppointmentUniqueComparer"/> class if any;
            or creates a new one.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.AppointmentUniqueComparer.Compare(C1.C1Schedule.Appointment,C1.C1Schedule.Appointment)">
            <summary>
            Performs a comparison of two <see cref="T:C1.C1Schedule.Appointment"/> objects and returns 
            a value indicating whether the one <see cref="T:C1.C1Schedule.Appointment"/> starts earlier, 
            at the same time, or later than the other. 
            </summary>
            <param name="x">The first <see cref="T:C1.C1Schedule.Appointment"/> to compare.</param>
            <param name="y">The second <see cref="T:C1.C1Schedule.Appointment"/> to compare.</param>
            <returns>Less than zero - x occurs earlier than y.
            Zero - x and y occur at the same time.
            Greater than zero - x occurs later than y.</returns>
        </member>
        <member name="T:C1.C1Schedule.AppointmentComparer">
            <summary>
            Compares <see cref="T:C1.C1Schedule.Appointment"/> objects by their start time.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.AppointmentComparer.Default">
            <summary>
            Returns an existing instance of <see cref="T:C1.C1Schedule.AppointmentComparer"/> class if any;
            or creates a new one.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.AppointmentComparer.Compare(C1.C1Schedule.Appointment,C1.C1Schedule.Appointment)">
            <summary>
            Performs a comparison of two <see cref="T:C1.C1Schedule.Appointment"/> objects and returns 
            a value indicating whether the one <see cref="T:C1.C1Schedule.Appointment"/> starts earlier, 
            at the same time, or later than the other. 
            </summary>
            <param name="x">The first <see cref="T:C1.C1Schedule.Appointment"/> to compare.</param>
            <param name="y">The second <see cref="T:C1.C1Schedule.Appointment"/> to compare.</param>
            <returns>Less than zero - x occurs earlier than y.
            Zero - x and y occur at the same time.
            Greater than zero - x occurs later than y.</returns>
        </member>
        <member name="T:C1.C1Schedule.AppointmentEventArgs">
            <summary>
            The <see cref="T:C1.C1Schedule.AppointmentEventArgs"/> class describes event data for <see cref="P:C1.C1Schedule.AppointmentEventArgs.Appointment"/> events.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.AppointmentEventArgs.#ctor(C1.C1Schedule.Appointment)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.AppointmentEventArgs"/>
            class with the specified appointment. 
            </summary>
            <param name="appointment">The <see cref="T:C1.C1Schedule.Appointment"/> object.</param>
        </member>
        <member name="P:C1.C1Schedule.AppointmentEventArgs.Appointment">
            <summary>
            Gets the appointment which the event was raised for. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.CancelAppointmentEventHandler">
            <summary>
            Delegate for handling the cancellable event involving a single 
            <see cref="T:C1.C1Schedule.Appointment"/> object. 
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:C1.C1Schedule.CancelAppointmentEventArgs"/> 
            that contains the event data.</param>
        </member>
        <member name="T:C1.C1Schedule.CancelAppointmentEventArgs">
            <summary>
            The <see cref="T:C1.C1Schedule.CancelAppointmentEventArgs"/> class describes event data 
            for cancellable <see cref="P:C1.C1Schedule.CancelAppointmentEventArgs.Appointment"/> events.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.CancelAppointmentEventArgs.#ctor(C1.C1Schedule.Appointment)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.CancelAppointmentEventArgs"/>
            class with the specified appointment. 
            </summary>
            <param name="appointment">The <see cref="P:C1.C1Schedule.CancelAppointmentEventArgs.Appointment"/> object.</param>
        </member>
        <member name="P:C1.C1Schedule.CancelAppointmentEventArgs.Appointment">
            <summary>
            Gets the <see cref="P:C1.C1Schedule.CancelAppointmentEventArgs.Appointment"/> object which the event was raised for. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.BasePersistableObject">
            <summary>
            The <see cref="T:C1.C1Schedule.BasePersistableObject"/> is a base class for persistable objects.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.OnPropertyChanged(System.String)">
            <summary>
            Fires property change notification.
            </summary>
            <param name="propertyName">The property name.</param>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.#ctor">
            <summary>
            Creates new BasePersistableObject object.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BasePersistableObject.Key">
            <summary>
            Gets an array of objects representing the key of the <see cref="T:C1.C1Schedule.BasePersistableObject"/>.
            </summary>
            <remarks><para>In the current version, the array always contains a single object.
            It can be either an <see cref="T:System.Int32"/> or <see cref="T:System.Guid"/> value depending on
            which one is actually used for binding this data.
            For example, if you bind AppointmentStorage to the database and set
            IndexMapping, this property will return an <see cref="T:System.Int32"/> value.
            If you set IdMapping, this property will return a <see cref="T:System.Guid"/> value.</para>
            <para>In future versions working with compound keys might be implemented.
            In such case this property will return array of objects composing the key.</para></remarks>
        </member>
        <member name="P:C1.C1Schedule.BasePersistableObject.Id">
            <summary>
            Unique value for serialization purposes.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BasePersistableObject.Index">
            <summary>
            User can specify mapping either for Id property or for Index property
            (depending on his database structure or object model).
            In unbound mode or if user doesn't specify mapping for any of these properties,
            Index will contain index of the object in containing collection.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Special constructor for deserialization.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <param name="context">The context information.</param>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            A method called when serializing.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> 
            to populate with data.</param>
            <param name="context">The context information about the source or destination 
            of the serialization.</param>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.BeginEdit">
            <summary>
            Brings the object in edit mode.
            </summary>
            <remarks>
            A corresponding item from a data source will not be updated on this object's
            property changes while the object is in edit mode. Data synchronization will
            be performed when the <see cref="M:C1.C1Schedule.BasePersistableObject.EndEdit"/> method will be called.
            </remarks>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.EndEdit">
            <summary>
            Finishes edit mode started by the <see cref="M:C1.C1Schedule.BasePersistableObject.BeginEdit"/> method and
            updates a corresponding data source item.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.EndEdit(System.Boolean)">
            <summary>
            
            </summary>
            <param name="canRaiseChangeNotification"></param>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.CancelEdit">
            <summary>
            Discards changes since the last <see cref="M:C1.C1Schedule.BasePersistableObject.BeginEdit"/> call.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BasePersistableObject.IsEdit">
            <summary>
            Indicates whether the object is in edit mode, 
            which is started using the <see cref="M:C1.C1Schedule.BasePersistableObject.BeginEdit"/> method.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BasePersistableObject.BaseSourceItemMap">
            <summary>
            Keeps a reference to a data source item that this object is based on.
            A null value means that there is no base source item.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.SetBaseSourceItemMap(C1.C1Schedule.ItemsMapTableRow)">
            <summary>
            WARNING: don't call this method! This a special method that must be called
            from the BaseStorage.SetCollectionItemBaseItem method only!
            </summary>
            <param name="sourceItemMap"></param>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.FromXml(System.Xml.XmlNode)">
            <summary>
            Loads an object from the specified <see cref="T:System.Xml.XmlNode"/>.
            </summary>
            <param name="node">An <see cref="T:System.Xml.XmlNode"/> which contains the object data.</param>
            <returns>Returns true if object has been changed.</returns>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.FromXml(System.Xml.XmlReader)">
            <summary>
            Loads an object from the specified <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">An <see cref="T:System.Xml.XmlReader"/> which contains the object data.</param>
            <returns>Returns true if object has been changed.</returns>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.ToXml(System.Xml.XmlWriter)">
            <summary>
            Saves an object to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> that will receive 
            the object data.</param>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.FromXml(System.IO.Stream)">
            <summary>
            Loads an object from the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> that contains the object data.</param>
            <returns>Returns true if object has been changed.</returns>
        </member>
        <member name="M:C1.C1Schedule.BasePersistableObject.ToXml(System.IO.Stream)">
            <summary>
            Saves an object to the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> that contains the object data.</param>
        </member>
        <member name="T:C1.C1Schedule.BaseObject">
            <summary>
            The <see cref="T:C1.C1Schedule.BaseObject"/> is a base class for resources, labels, statuses, 
            categories and contacts. It implements base UI properties and persistence.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BaseObject.#ctor">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.BaseObject"/> object with default settings.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BaseObject.#ctor(System.String)">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.BaseObject"/> object with specified text.
            </summary>
            <param name="text">The <see cref="T:System.String"/> value.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseObject.#ctor(System.String,System.String)">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.BaseObject"/> object with specified text and menu caption.
            </summary>
            <param name="text">The <see cref="T:System.String"/> value.</param>
            <param name="menuCaption">The <see cref="T:System.String"/> value.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseObject.#ctor(System.Drawing.Color,System.String,System.String)">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.BaseObject"/> object with specified color, 
            text and menu caption.
            </summary>
            <param name="color">The <see cref="P:C1.C1Schedule.BaseObject.Color"/> value.</param>
            <param name="text">The <see cref="T:System.String"/> value.</param>
            <param name="menuCaption">The <see cref="T:System.String"/> value.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseObject.#ctor(System.Drawing.Color,System.String,System.String,C1.C1Schedule.C1Brush)">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.BaseObject"/> object with specified parameters.
            </summary>
            <param name="color">The <see cref="P:C1.C1Schedule.BaseObject.Color"/> value.</param>
            <param name="text">The <see cref="T:System.String"/> value.</param>
            <param name="menuCaption">The <see cref="T:System.String"/> value.</param>
            <param name="brush">The <see cref="P:C1.C1Schedule.BaseObject.Brush"/> object.</param>
        </member>
        <member name="P:C1.C1Schedule.BaseObject.Color">
            <summary>
            Gets or sets the color of the user interface object.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BaseObject.Text">
            <summary>
            Gets or sets the text which identifies a user interface object. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BaseObject.MenuCaption">
            <summary>
            Gets or sets the menu caption for the user interface object.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.BaseObject.Brush">
            <summary>
            Gets or sets the brush used to fill the user interface object's image.
            </summary>
            <remarks>Supported persistence only for System.Drawing.Drawing2D.HatchBrush
            and System.Drawing.SolidBrush</remarks>
        </member>
        <member name="M:C1.C1Schedule.BaseObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Special constructor for deserialization.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <param name="context">The context information.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseObject.FromXml(System.Xml.XmlNode)">
            <summary>
            Loads an object from the specified <see cref="T:System.Xml.XmlNode"/>.
            </summary>
            <param name="node">An <see cref="T:System.Xml.XmlNode"/> 
            which contains the object data.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseObject.FromXml(System.Xml.XmlReader)">
            <summary>
            Loads an object from the specified <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">An <see cref="T:System.Xml.XmlReader"/> which contains the object data.</param>
            <returns>Returns true if object has been changed.</returns>
        </member>
        <member name="M:C1.C1Schedule.BaseObject.ToXml(System.Xml.XmlWriter)">
            <summary>
            Saves an object into specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> 
            that will receive the object data.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseObject.ToString">
            <summary>
            Overrides the default behavior.
            </summary>
            <returns>The text which identifies a user interface object.</returns>
        </member>
        <member name="T:C1.C1Schedule.BaseCollection`1">
            <summary>
            The <see cref="T:C1.C1Schedule.BaseCollection`1"/> is a base generic class for all collections 
            in C1Schedule object model.
            </summary>
            <typeparam name="T">The type of the objects which will be stored in the collection.
            It should be derived from the <see cref="T:C1.C1Schedule.BasePersistableObject"/> class
            and have the default parameter-less constructor.</typeparam>
        </member>
        <member name="M:C1.C1Schedule.BaseCollection`1.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.BaseCollection`1"/> class.
            </summary>
            <param name="owner">The owning storage.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseCollection`1.Add(`0)">
            <summary>
            Adds a new custom object to the collection.
            If the item already exists in the collection, its index is returned.
            </summary>
            <returns>Returns the index of newly added custom object.</returns>
        </member>
        <member name="M:C1.C1Schedule.BaseCollection`1.Contains(System.Int32)">
            <summary>
            Check if collection contains an item with specified index.
            </summary>
            <param name="index">The zero-based index of the item to locate.</param>
            <returns>True if the item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="P:C1.C1Schedule.BaseCollection`1.Item(System.Guid)">
            <summary>
            Gets the element with the specified key if any. 
            </summary>
            <param name="key">The key of the element to get.</param>
            <returns>The element with the specified key. If an element with the specified key is not found, return null.</returns>
        </member>
        <member name="P:C1.C1Schedule.BaseCollection`1.OwnerInternal">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BaseCollection`1.RefreshIndices">
            <summary>
            Call this method after removing items from the unbound storage.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BaseCollection`1.AddRange(`0[])">
            <summary>
            Adds an array of objects to the collection.
            This methods clears the collection before adding new items. 
            Don't use it if you want to keep preexisting items.
            </summary>
            <param name="items">An array of items.</param>
        </member>
        <member name="P:C1.C1Schedule.BaseCollection`1.SuppressedDataChanging">
            <summary>
            Gets or set the <see cref="T:System.Boolean"/> value specifying whether change events should not be fired.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BaseCollection`1.BeginUpdate">
            <summary>
            When overriden in derived class, starts batch operation.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BaseCollection`1.EndUpdate">
            <summary>
            When overriden in derived class, finishes batch operation.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BaseCollection`1.AddRange(System.Object[])">
            <summary>
            Adds an array of objects to the collection.
            This methods clears the collection before adding new items. 
            Don't use it if you want to keep preexisting items.
            </summary>
            <param name="items">An array of items.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseCollection`1.InsertItem(System.Int32,`0)">
            <summary>
            Overrides default behavior of collection at inserting new items.
            </summary>
            <param name="index">The zero-based index of the item to insert.</param>
            <param name="item">The object to insert.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseCollection`1.GetKeyForItem(`0)">
            <summary>
            Extracts the key from the specified element.
            </summary>
            <param name="item">The element from which to extract the key.</param>
            <returns>The key for the specified element.</returns>
        </member>
        <member name="M:C1.C1Schedule.BaseCollection`1.RemoveItem(System.Int32)">
            <summary>
            Overrides base class implementation.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="T:C1.C1Schedule.BaseList`1">
            <summary>
            The <see cref="T:C1.C1Schedule.BaseList`1"/> is a base generic class for all lists 
            in C1Schedule's object model.
            Only objects existing in the owning collection can be added to this list.
            </summary>
            <typeparam name="T">The type of the objects which will be stored in the list.
            It should be derived from the <see cref="T:C1.C1Schedule.BasePersistableObject"/> class.</typeparam>
        </member>
        <member name="F:C1.C1Schedule.BaseList`1._owner">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.C1Schedule.BaseList`1.InsertItem(System.Int32,`0)">
            <summary>
            Overrides default behavior of Collection.
            Prevents from adding items non-existent in the parent collection.
            </summary>
            <param name="index">The zero-based index of the item to insert.</param>
            <param name="item">The object to insert.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseList`1.SetItem(System.Int32,`0)">
            <summary>
            Overrides default behavior of Collection.
            Prevents from adding items non-existent in the parent collection.
            </summary>
            <param name="index">The zero-based index of the item.</param>
            <param name="item">The object to set.</param>
        </member>
        <member name="M:C1.C1Schedule.BaseList`1.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.C1Schedule.BaseList`1.Owner">
            <summary>
            Gets the reference to the owning collection.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.TimeScaleEnum">
            <summary>
            Determines the time interval which is used for 
            displaying time slots in the DayView.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.TimeScaleEnum.FiveMinutes">
            <summary>
            5 minutes.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.TimeScaleEnum.SixMinutes">
            <summary>
            6 minutes.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.TimeScaleEnum.TenMinutes">
            <summary>
            10 minutes.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.TimeScaleEnum.FifteenMinutes">
            <summary>
            15 minutes.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.TimeScaleEnum.TwentyMinutes">
            <summary>
            20 minutes.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.TimeScaleEnum.ThirtyMinutes">
            <summary>
            30 minutes.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.TimeScaleEnum.OneHour">
            <summary>
            1 hour.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.TimeScaleEnum.TwoHours">
            <summary>
            2 hours.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.CalendarInfo">
            <summary>
            The <see cref="T:C1.C1Schedule.CalendarInfo"/> class manages and exposes 
            all date-related data to C1Schedule controls. 
            </summary>
        </member>
        <member name="E:C1.C1Schedule.CalendarInfo.SelectedDaysChanged">
            <summary>
            Occurs when the range of selected days was changed.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.CalendarInfo.PropertyChanged">
            <summary>
            Occurs when the property of <see cref="T:C1.C1Schedule.CalendarInfo"/> object was changed.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.CalendarInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.CalendarInfo"/> component.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.Culture">
            <summary>
            Gets or sets the <see cref="P:C1.C1Schedule.CalendarInfo.CultureInfo"/> object which 
            holds culture-specific information used by C1Schedule components.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.CultureInfo">
            <summary>
            Gets or sets the <see cref="P:C1.C1Schedule.CalendarInfo.CultureInfo"/> object which 
            holds culture-specific information used by C1Schedule components.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.DateFormatString">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value determining display format 
            of date values to use in appointments and built-in dialogs.
            </summary>
            <remarks>The actual representation depends on the value 
            of the <see cref="P:C1.C1Schedule.CalendarInfo.Culture"/> property.</remarks>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.TimeFormatString">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value determining display format 
            of time values to use in appointments and built-in dialogs.
            </summary>
            <remarks>The actual representation depends on the value 
            of the <see cref="P:C1.C1Schedule.CalendarInfo.Culture"/> property.</remarks>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.WeekStart">
            <summary>
            Gets or sets the <see cref="T:System.DayOfWeek"/> value determining
            the first day of the week. Default is system settings.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.WorkDays">
            <summary>
            Gets or sets the <see cref="P:C1.C1Schedule.CalendarInfo.WorkDays"/> object containing the 
            set of working days in one week.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.NoWorkingDays">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value determining whether
            the <see cref="T:C1.C1Schedule.CalendarInfo"/> object has any working days.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.TimeScale">
            <summary>
            Gets or sets the <see cref="T:System.TimeSpan"/> value specifying the time interval 
            which is used for displaying time slots in the DayView.
            </summary>
            <remarks>The <see cref="P:C1.C1Schedule.CalendarInfo.TimeScale"/> property cannot be set to any 
            arbitrary value. When assigning a value to this property it is 
            automatically calculated so as to be equal to the nearest 
            <see cref="T:C1.C1Schedule.TimeScaleEnum"/> value.</remarks>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.TimeInterval">
            <summary>
            Gets or sets the <see cref="T:C1.C1Schedule.TimeScaleEnum"/> value specifying the time interval 
            which is used for displaying time slots in the DayView.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.StartDayTime">
            <summary>
            Gets or sets the <see cref="T:System.TimeSpan"/> value specifying the beginning 
            of the working time.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.EndDayTime">
            <summary>
            Gets or sets the <see cref="T:System.TimeSpan"/> value specifying 
            the end of the working time.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.FirstDate">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value specifying minimum date allowed. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.LastDate">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value specifying maximum date allowed. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.Holidays">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.List`1"/> object which holds
            the list of holidays (non-working days in addition to weekends).
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.WeekendExceptions">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.List`1"/> object which holds
            the list of weekend days which should be working.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CalendarInfo.DateTimeKind">
            <summary>
            Gets or sets <see cref="P:C1.C1Schedule.CalendarInfo.DateTimeKind"/> specifying DateTime kind
            used for saving <see cref="T:System.DateTime"/> values.
            </summary>
            <remarks>
            This property only have an influence on the process of saving data to
            the AppointmentStorage.DataSource object and on export operations.
            All properties of the <see cref="T:C1.C1Schedule.Appointment"/> and <see cref="T:C1.C1Schedule.RecurrencePattern"/>
            objects represent current system local time values.
            Set this property to DateTimeLind.Utc if you need to save
            data with universal time. In such case the data will be converted 
            to the local time and back at every read/write operation.
            </remarks>
        </member>
        <member name="M:C1.C1Schedule.CalendarInfo.GetWeekOfYear(System.DateTime)">
            <summary>
            returns week of year for the specified date according to the current culture settings
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.CalendarInfo.IsWorkingDay(System.DateTime)">
            <summary>
            Returns true if specified date is not weekend or holiday.
            </summary>
            <param name="day">The <see cref="T:System.DateTime"/> value to check.</param>
            <returns>True if specified date is not weekend or holiday; false - otherwise.</returns>
        </member>
        <member name="M:C1.C1Schedule.CalendarInfo.IsWorkingInterval(System.DateTime,System.DateTime)">
            <summary>
            Returns true if specified time interval is a working time.
            </summary>
            <remarks>It doesn't check for working days.</remarks>
            <param name="start">The <see cref="T:System.DateTime"/> value specifying the interval start time.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value specifying the interval end time.</param>
            <returns>True if specified date is not weekend or holiday; false - otherwise.</returns>
        </member>
        <member name="M:C1.C1Schedule.CalendarInfo.CopyFrom(C1.C1Schedule.CalendarInfo)">
            <summary>
            Copies properties from the specified <see cref="T:C1.C1Schedule.CalendarInfo"/> object to this one. 
            </summary>
            <param name="info">The <see cref="T:C1.C1Schedule.CalendarInfo"/> instance to copy.</param>
        </member>
        <member name="M:C1.C1Schedule.CalendarInfo.GetDayOfWeekName(System.DayOfWeek)">
            <summary>
            Returns the culture-specific full name of the specified day of the week
            based on the current UI culture.
            </summary>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.CalendarInfo.GetMonthName(System.Int32)">
            <summary>
            Returns the culture-specific full name of the specified month based on the 
            current UI culture.
            </summary>
            <param name="month"></param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.CalendarInfo.GetInstanceName(C1.C1Schedule.WeekOfMonthEnum)">
            <summary>
            Returns the culture-specific full name of the specified instance based on the 
            current UI culture.
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.CalendarInfo.ParseTime(System.String)">
            <summary>
            Returns DateTime value with filled DateTimeKind property.
            DateTimeKind = DateTimeKind.Utc if string was saved using RFC1123Pattern. 
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="T:C1.C1Schedule.WorkDays">
            <summary>
            The <see cref="T:C1.C1Schedule.WorkDays"/> class is a list of working days for the single week.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.WorkDays.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.WorkDays"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.WorkDays.AddRange(System.DayOfWeek[])">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.WorkDays"/> object.
            </summary>
            <param name="items">The array of <see cref="T:System.DayOfWeek"/> objects.</param>
        </member>
        <member name="T:C1.C1Schedule.Category">
            <summary>
            The <see cref="T:C1.C1Schedule.Category"/> class represents the category which can be
            associated with the <see cref="T:C1.C1Schedule.Appointment"/> object. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Category.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Category"/> class with the specified key.
            </summary>
            <param name="key">The <see cref="T:System.Int32"/> value which should be used as category key.</param>
            <remarks>Use this constructor if your business logic requires setting custom key value.
            Make sure that you use the correct constructor overload (with integer or Guid key value) and that key value is unique.</remarks>
        </member>
        <member name="M:C1.C1Schedule.Category.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Category"/> class with the specified key.
            </summary>
            <param name="key">The <see cref="T:System.Guid"/> value which should be used as category key.</param>
            <remarks>Use this constructor if your business logic requires setting custom key value.
            Make sure that you use the correct constructor overload (with integer or Guid key value) and that key value is unique.</remarks>
        </member>
        <member name="M:C1.C1Schedule.Category.#ctor">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.Category"/> object.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Category.#ctor(System.String)">
            <summary>
            Creates custom <see cref="T:C1.C1Schedule.Category"/> object with specified text.
            </summary>
            <param name="text">The text of category.</param>
        </member>
        <member name="M:C1.C1Schedule.Category.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Special constructor for deserialization.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <param name="context">The context information.</param>
        </member>
        <member name="T:C1.C1Schedule.CategoryCollection">
            <summary>
            The <see cref="T:C1.C1Schedule.CategoryCollection"/> is a collection of <see cref="T:C1.C1Schedule.Category"/> 
            objects which represents all available categories in C1Schedule object model.
            By default it contains the set of predefined categories. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.CategoryCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.CategoryCollection"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.CategoryCollection.LoadDefaults">
            <summary>
            Restores the collection to its default state.
            </summary>
            <remarks>The <see cref="M:C1.C1Schedule.CategoryCollection.LoadDefaults"/> method removes all 
            custom categories from the collection and leaves only the standard ones.
            </remarks>
        </member>
        <member name="M:C1.C1Schedule.CategoryCollection.GetDefaults">
            <summary>
            Returns the list of predefined categories.
            </summary>
            <returns>The <see cref="T:System.Collections.Generic.List`1"/> object.</returns>
        </member>
        <member name="T:C1.C1Schedule.CategoryList">
            <summary>
            The <see cref="T:C1.C1Schedule.CategoryList"/> is a list of <see cref="T:C1.C1Schedule.Category"/> objects.
            Only objects existing in the owning <see cref="T:C1.C1Schedule.CategoryCollection"/> object 
            may be added to this list.
            Use the <see cref="T:C1.C1Schedule.CategoryList"/> to associate the set of <see cref="T:C1.C1Schedule.Category"/> objects 
            with an <see cref="T:C1.C1Schedule.Appointment"/> object.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.Contact">
            <summary>
            The <see cref="T:C1.C1Schedule.Contact"/> class represents the person information.
            Not real class just sample for prototyping.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Contact.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Contact"/> class with the specified key.
            </summary>
            <param name="key">The <see cref="T:System.Int32"/> value which should be used as contact key.</param>
            <remarks>Use this constructor if your business logic requires setting custom key value.
            Make sure that you use the correct constructor overload (with integer or Guid key value) and that key value is unique.</remarks>
        </member>
        <member name="M:C1.C1Schedule.Contact.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Contact"/> class with the specified key.
            </summary>
            <param name="key">The <see cref="T:System.Guid"/> value which should be used as contact key.</param>
            <remarks>Use this constructor if your business logic requires setting custom key value.
            Make sure that you use the correct constructor overload (with integer or Guid key value) and that key value is unique.</remarks>
        </member>
        <member name="M:C1.C1Schedule.Contact.#ctor">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.Contact"/> object.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Contact.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Special constructor for deserialization.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <param name="context">The context information.</param>
        </member>
        <member name="T:C1.C1Schedule.ContactCollection">
            <summary>
            The <see cref="T:C1.C1Schedule.ContactCollection"/> is a collection of <see cref="T:C1.C1Schedule.Contact"/> 
            objects which represents all available contacts in C1Schedule object model.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.ContactCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.ContactCollection"/> class.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.ContactList">
            <summary>
            The <see cref="T:C1.C1Schedule.ContactList"/> is a list of <see cref="T:C1.C1Schedule.Contact"/> objects.
            Only objects existing in the owning <see cref="T:C1.C1Schedule.ContactCollection"/> object 
            may be added to this list.
            Use the <see cref="T:C1.C1Schedule.ContactList"/> to associate the set of <see cref="T:C1.C1Schedule.Contact"/> objects
            with an <see cref="T:C1.C1Schedule.Appointment"/> object.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.Day">
            <summary>
            Represents one day in the C1Schedule. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Day.#ctor(System.DateTime)">
            <summary>
            Creates new Day object.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.DayCollection">
            <summary>
            Collection of all days in the C1Schedule component.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.DayCollection.#ctor(C1.C1Schedule.CalendarInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.DayCollection"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.DayCollection.FillDayCollection">
            <summary>
            Returns DayCollection for all dates from the FirstDate till the LastDate.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.DayCollection.FillDayCollection(System.DateTime,System.DateTime)">
            <summary>
            Returns DayCollection for all dates from the start till the end.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.DayCollection.GetKeyForItem(C1.C1Schedule.Day)">
            <summary>
            Extracts the key from the specified element.
            </summary>
            <param name="item">The element from which to extract the key.</param>
            <returns>The key for the specified element.</returns>
        </member>
        <member name="T:C1.C1Schedule.DateList">
            <summary>
            The <see cref="T:C1.C1Schedule.DateList"/> class is a wrapper for the 
            <see cref="T:System.Collections.Generic.List`1"/> instance.
            At addition of the new value, it cuts off the time part of the value
            and ensures that the value is not present in the list yet.
            </summary>
            <remarks>This class uses binary search for all operations.</remarks>
        </member>
        <member name="M:C1.C1Schedule.DateList.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:C1.C1Schedule.DateList"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.DateList.Add(System.DateTime)">
            <summary>
            Adds new date to the list.
            </summary>
            <param name="item">The <see cref="T:System.DateTime"/> value to add.</param>
        </member>
        <member name="M:C1.C1Schedule.DateList.Clear">
            <summary>
            Clears all items from the wrapped list.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.DateList.Remove(System.DateTime)">
            <summary>
            Removes specified item from the wrapped list.
            </summary>
            <param name="item">The <see cref="T:System.DateTime"/> value to remove.</param>
        </member>
        <member name="M:C1.C1Schedule.DateList.RemoveAt(System.Int32)">
            <summary>
            Removes item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item remove to.</param>
        </member>
        <member name="P:C1.C1Schedule.DateList.Count">
            <summary>
            Returns the number of items in the wrapped list.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.DateList.Items">
            <summary>
            Returns the reference to the wrapped list.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.DateList.Contains(System.DateTime)">
            <summary>
            Returns true if specified item exists in the wrapped list.
            </summary>
            <param name="item">An item to search for.</param>
            <returns>True if item exists in the wrapped list.</returns>
        </member>
        <member name="M:C1.C1Schedule.DateList.Contains(System.DateTime[])">
            <summary>
            Returns true if either of specified items exists in the wrapped list.
            </summary>
            <param name="days">An array of <see cref="T:System.DateTime"/> values to search for.</param>
            <returns>True if at least one of specified items exists in the wrapped list.</returns>
        </member>
        <member name="M:C1.C1Schedule.DateList.Contains(System.Collections.Generic.IList{System.DateTime})">
            <summary>
            Returns true if either of specified items exists in the wrapped list.
            </summary>
            <param name="days">A list of <see cref="T:System.DateTime"/> values to search for.</param>
            <returns>True if at least one of specified items exists in the wrapped list.</returns>
        </member>
        <member name="M:C1.C1Schedule.DateList.GetPreviousDate(System.DateTime)">
            <summary>
            Returns the first item that is less than specified one.
            </summary>
            <param name="item">An item to search for.</param>
            <returns>The first item that is less than specified one; 
            or DateTime.MinValue if such item is not found.</returns>
        </member>
        <member name="M:C1.C1Schedule.DateList.GetNextDate(System.DateTime)">
            <summary>
            Returns the first item that is greater than specified one.
            </summary>
            <param name="item">An item to search for.</param>
            <returns>The first item that is greater than specified one; 
            or DateTime.MaxValue if such item is not found.</returns>
        </member>
        <member name="T:C1.C1Schedule.C1BrushStyleEnum">
            <summary>
            Specifies the different patterns available for brushes.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.C1BrushStyleEnum.Transparent">
            <summary>
            Represents transparent brush.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.C1BrushStyleEnum.Solid">
            <summary>
            Represents solid brush.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.C1BrushStyleEnum.BackwardDiagonal">
            <summary>
            A pattern of lines on a diagonal from upper right to lower left.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.C1BrushStyleEnum.Cross">
            <summary>
            Specifies horizontal and vertical lines that cross.  
            </summary>
        </member>
        <member name="F:C1.C1Schedule.C1BrushStyleEnum.DiagonalCross">
            <summary>
            A pattern of crisscross diagonal lines. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.C1BrushStyleEnum.ForwardDiagonal">
            <summary>
            A pattern of lines on a diagonal from upper left to lower right. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.C1BrushStyleEnum.Horizontal">
            <summary>
            A pattern of horizontal lines. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.C1BrushStyleEnum.Vertical">
            <summary>
            A pattern of vertical lines. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.C1BrushStyleEnum.Wave">
            <summary>
            Specifies horizontal lines that are composed of tildes. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.C1BrushStyleEnum.ZigZag">
            <summary>
            Specifies horizontal lines that are composed of zigzags. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.C1BrushStyleEnum.Percent20">
            <summary>
             Specifies a 20-percent hatch. The ratio of foreground color to background color is 20:80.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.C1Brush">
            <summary>
            Wrapper class for brushes. Only for serialization/deserialization purposes.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1Brush.#ctor">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.C1Brush"/> object.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1Brush.#ctor(System.Drawing.Brush)">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.C1Brush"/> object.
            </summary>
            <param name="brush"></param>
        </member>
        <member name="M:C1.C1Schedule.C1Brush.#ctor(System.Drawing.Color,System.Drawing.Color,C1.C1Schedule.C1BrushStyleEnum)">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.C1Brush"/> object.
            </summary>
            <param name="foreColor">The foreground <see cref="T:System.Drawing.Color"/> value.</param>
            <param name="backColor">The background <see cref="T:System.Drawing.Color"/> value.</param>
            <param name="style">The <see cref="T:C1.C1Schedule.C1BrushStyleEnum"/> value.</param>
        </member>
        <member name="M:C1.C1Schedule.C1Brush.#ctor(System.Drawing.Color)">
            <summary>
            Creates a new solid <see cref="T:C1.C1Schedule.C1Brush"/> object.
            </summary>
            <param name="backColor">The background <see cref="T:System.Drawing.Color"/> value.</param>
        </member>
        <member name="P:C1.C1Schedule.C1Brush.ForeColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1Brush.BackColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1Brush.Style">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1Brush.Brush">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.C1Schedule.C1Brush.BrushInternal">
            <summary>
            Gets or sets WinForms/WebForms specific brush object based on the C1Brush definition. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.C1Brush.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Special constructor for de-serialization.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <param name="context">The context information.</param>
        </member>
        <member name="M:C1.C1Schedule.C1Brush.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.C1Brush.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.C1Schedule.C1Brush.GetARGBstring(System.Drawing.Color)">
            <summary>
            Returns string representation of color in ARGB format.
            </summary>
            <param name="color">The <see cref="P:C1.C1Schedule.BaseObject.Color"/>value.</param>
            <returns>The string representation of color in ARGB format</returns>
        </member>
        <member name="T:C1.C1Schedule.Label">
            <summary>
            The <see cref="T:C1.C1Schedule.Label"/> class represents the label which can be
            associated with the <see cref="T:C1.C1Schedule.Appointment"/> object. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Label.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Label"/> class with the specified key.
            </summary>
            <param name="key">The <see cref="T:System.Int32"/> value which should be used as label key.</param>
            <remarks>Use this constructor if your business logic requires setting custom key value.
            Make sure that you use the correct constructor overload (with integer or Guid key value) and that key value is unique.</remarks>
        </member>
        <member name="M:C1.C1Schedule.Label.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Label"/> class with the specified key.
            </summary>
            <param name="key">The <see cref="T:System.Guid"/> value which should be used as label key.</param>
            <remarks>Use this constructor if your business logic requires setting custom key value.
            Make sure that you use the correct constructor overload (with integer or Guid key value) and that key value is unique.</remarks>
        </member>
        <member name="M:C1.C1Schedule.Label.#ctor">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.Label"/> object with default parameters.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Label.#ctor(System.String)">
            <summary>
            Creates custom <see cref="T:C1.C1Schedule.Label"/> object with specified text.
            </summary>
            <param name="text">The text of the label.</param>
        </member>
        <member name="M:C1.C1Schedule.Label.#ctor(System.String,System.String)">
            <summary>
            Creates custom <see cref="T:C1.C1Schedule.Label"/> object with specified text and menu caption.
            </summary>
            <param name="text">The text of the label.</param>
            <param name="menuCaption">The menu caption for displaying label in dialogs.</param>
        </member>
        <member name="M:C1.C1Schedule.Label.#ctor(System.Drawing.Color,System.String,System.String)">
            <summary>
            Creates custom <see cref="T:C1.C1Schedule.Label"/> object with specified color, text and menu caption.
            </summary>
            <param name="color">The color of the label.</param>
            <param name="text">The text of the label.</param>
            <param name="menuCaption">The menu caption for displaying label in dialogs.</param>
        </member>
        <member name="M:C1.C1Schedule.Label.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Special constructor for deserialization.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <param name="context">The context information.</param>
        </member>
        <member name="T:C1.C1Schedule.LabelCollection">
            <summary>
            The <see cref="T:C1.C1Schedule.LabelCollection"/> is a collection of <see cref="T:C1.C1Schedule.Label"/> 
            objects which represents all available labels in C1Schedule object model.
            </summary> 
            <remarks>
            <para>By default it contains the following set of predefined labels:</para>
            <list type="bullet">
            <item><term></term><description>None</description></item>
            <item><term></term><description>Important</description></item>
            <item><term></term><description>Business</description></item>
            <item><term></term><description>Personal</description></item>
            <item><term></term><description>Vacation</description></item>
            <item><term></term><description>Must Attend</description></item>
            <item><term></term><description>Deadline</description></item>
            <item><term></term><description>Travel Required</description></item>
            <item><term></term><description>Needs Preparation</description></item>
            <item><term></term><description>Birthday</description></item>
            <item><term></term><description>Anniversary</description></item>
            <item><term></term><description>Phone Call</description></item>
            <para>It also allows adding of custom labels.</para>
            </list>
            </remarks>
        </member>
        <member name="F:C1.C1Schedule.LabelCollection.NoneLabelId">
            <summary>
            Defines Id of the None label.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.LabelCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.LabelCollection"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.LabelCollection.LoadDefaults">
            <summary>
            Restores the collection to its default state.
            </summary>
            <remarks>The <see cref="M:C1.C1Schedule.LabelCollection.LoadDefaults"/> method removes all 
            custom labels from the collection and leaves only the standard ones.
            </remarks>
        </member>
        <member name="T:C1.C1Schedule.LabelList">
            <summary>
            The <see cref="T:C1.C1Schedule.LabelList"/> is a list of <see cref="T:C1.C1Schedule.Label"/> objects.
            Only objects existing in the owning <see cref="T:C1.C1Schedule.LabelCollection"/> object 
            may be added to this list.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.RecurrenceTypeEnum">
            <summary>
            Determines the types of recurrent appointments.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.RecurrenceTypeEnum.Daily">
            <summary>
            The recurring appointment reoccurs on a daily basis.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.RecurrenceTypeEnum.Workdays">
            <summary>
            The recurring appointment reoccurs every working day.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.RecurrenceTypeEnum.Monthly">
            <summary>
            The recurring appointment reoccurs on a monthly basis. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.RecurrenceTypeEnum.MonthlyNth">
            <summary>
            The recurring appointment reoccurs every N months. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.RecurrenceTypeEnum.Weekly">
            <summary>
            The recurring appointment reoccurs on a weekly basis.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.RecurrenceTypeEnum.Yearly">
            <summary>
            The recurring appointment reoccurs on an yearly basis.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.RecurrenceTypeEnum.YearlyNth">
            <summary>
            The recurring appointment reoccurs every N years.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.WeekDaysEnum">
            <summary>
            Determines the set of days and groups of days for recurrence patterns. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekDaysEnum.None">
            <summary>
            No specific value; the actual value is obtained from 
            the root <see cref="T:C1.C1Schedule.Appointment"/> object. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekDaysEnum.Sunday">
            <summary>
            Specifies Sunday.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekDaysEnum.Monday">
            <summary>
            Specifies Monday.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekDaysEnum.Tuesday">
            <summary>
            Specifies Tuesday. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekDaysEnum.Wednesday">
            <summary>
            Specifies Wednesday.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekDaysEnum.Thursday">
            <summary>
            Specifies Thursday.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekDaysEnum.Friday">
            <summary>
            Specifies Friday.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekDaysEnum.Saturday">
            <summary>
            Specifies Saturday.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekDaysEnum.WeekendDays">
            <summary>
            Specifies Saturday and Sunday (or what ever days according 
            to the settings of the C1Schedule).
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekDaysEnum.WorkDays">
            <summary>
            Specifies work days (all days except weekend).
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekDaysEnum.EveryDay">
            <summary>
            Specifies every day of the week.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.WeekOfMonthEnum">
            <summary>
            Determines the week in a month in which the appointment will occur.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekOfMonthEnum.First">
            <summary>
            The recurring appointment will occur on the specified 
            day or days of the first week in the month. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekOfMonthEnum.Second">
            <summary>
            The recurring appointment will occur on the specified 
            day or days of the second week in the month. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekOfMonthEnum.Third">
            <summary>
            The recurring appointment will occur on the specified 
            day or days of the third week in the month. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekOfMonthEnum.Fourth">
            <summary>
            The recurring appointment will occur on the specified 
            day or days of the fourth week in the month. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.WeekOfMonthEnum.Last">
            <summary>
            The recurring appointment will occur on the specified 
            day or days of the last week in the month. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.RecurrencePattern">
            <summary>
            The <see cref="T:C1.C1Schedule.RecurrencePattern"/> class contains information 
            that describes the recurrence pattern and range 
            of the associated <see cref="T:C1.C1Schedule.Appointment"/> object. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.RecurrencePattern.OnPropertyChanged(System.String)">
            <summary>
            
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.ParentAppointment">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.Appointment"/> object which represents
            the master appointment for this <see cref="T:C1.C1Schedule.RecurrencePattern"/> object.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.Description">
            <summary>
            Gets the human-readable description of the <see cref="T:C1.C1Schedule.RecurrencePattern"/> object.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.RecurrencePattern.GetDescription(System.Globalization.CultureInfo)">
            <summary>
            Gets the human-readable description of the <see cref="T:C1.C1Schedule.RecurrencePattern"/> object
            according to the specified culture.
            </summary>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> object used for getting calendar specific strings.</param>
            <returns>The <see cref="T:System.String"/> value described the <see cref="T:C1.C1Schedule.RecurrencePattern"/> object.</returns>
        </member>
        <member name="M:C1.C1Schedule.RecurrencePattern.GetDescription(C1.C1Schedule.CalendarInfo)">
            <summary>
            Gets the human-readable description of the <see cref="T:C1.C1Schedule.RecurrencePattern"/> object
            according to the specified <see cref="T:C1.C1Schedule.CalendarInfo"/> object.
            Use this method instead of <see cref="P:C1.C1Schedule.RecurrencePattern.Description"/> property if the <see cref="T:C1.C1Schedule.RecurrencePattern"/> 
            object does not belong to any <see cref="N:C1.C1Schedule"/> control.
            </summary>
            <param name="calendarInfo">The <see cref="T:C1.C1Schedule.CalendarInfo"/> object used for getting calendar specific strings.</param>
            <returns>The <see cref="T:System.String"/> value described the <see cref="T:C1.C1Schedule.RecurrencePattern"/> object.</returns>
            <remarks>If the <see cref="T:C1.C1Schedule.RecurrencePattern"/> object does not belong to the <see cref="N:C1.C1Schedule"/> control,
            its Description property will return the default description using current user culture and calendar settings.</remarks>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.RecurrenceType">
            <summary>
            Gets or sets the <see cref="T:C1.C1Schedule.RecurrenceTypeEnum"/> value
            determining the type of recurrence (daily, monthly, etc.).
            Default value is RecurrenceTypeEnum.Weekly.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.Interval">
             <summary>
             Gets or sets the <see cref="T:System.Int32"/> value specifying 
             the interval between occurrences of the recurrence. 
             The <see cref="P:C1.C1Schedule.RecurrencePattern.Interval"/> property works in conjunction with 
             the <see cref="P:C1.C1Schedule.RecurrencePattern.RecurrenceType"/> property to determine the cycle of the recurrence. 
             The maximum allowable value is 99 for weekly patterns and 999 for daily patterns.
             The default value is 1.
             </summary>
            <remarks>For example, if the <see cref="P:C1.C1Schedule.RecurrencePattern.RecurrenceType"/> is set 
             to <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.Daily"/>, and the <see cref="P:C1.C1Schedule.RecurrencePattern.Interval"/> is set to 3, 
             the recurrence will occur every third day.</remarks> 
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.EndTime">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value indicating 
            the end time for the given occurrence of the recurrence pattern. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.StartTime">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value indicating 
            the start time for the given occurrence of the recurrence pattern. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.Duration">
            <summary>
            Gets or sets the <see cref="T:System.TimeSpan"/> value indicating 
            the duration of each occurrence in the recurrence pattern.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.PatternStartDate">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value indicating 
            the start date of the recurrence pattern. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.PatternEndDate">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value indicating 
            the end date of the recurrence pattern. 
            </summary>
            <remarks>This property is optional but must be coordinated 
            with other properties when setting up a recurrence pattern. 
            If this property or the <see cref="P:C1.C1Schedule.RecurrencePattern.Occurrences"/> property is set, 
            the pattern is considered to be finite, and the <see cref="P:C1.C1Schedule.RecurrencePattern.NoEndDate"/> 
            property is false. 
            If neither <see cref="P:C1.C1Schedule.RecurrencePattern.PatternEndDate"/> nor <see cref="P:C1.C1Schedule.RecurrencePattern.Occurrences"/> is set, 
            the pattern is considered infinite and <see cref="P:C1.C1Schedule.RecurrencePattern.NoEndDate"/> is true. 
            The <see cref="P:C1.C1Schedule.RecurrencePattern.Interval"/> property must be set before 
            setting <see cref="P:C1.C1Schedule.RecurrencePattern.PatternEndDate"/>.</remarks>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.Occurrences">
            <summary>
            Gets or sets the number of occurrences for the recurrence pattern.
            This property allows the definition of a recurrence pattern that 
            is only valid for the specified number of subsequent occurrences. 
            For example, you can set this property to 10 for a formal training 
            course that will be held on the next ten Thursday evenings.
            The default value is 0.
            </summary>
            <remarks>This property must be coordinated with other properties 
            when setting up a recurrence pattern. 
            If the <see cref="P:C1.C1Schedule.RecurrencePattern.PatternEndDate"/> property 
            or the <see cref="P:C1.C1Schedule.RecurrencePattern.Occurrences"/> property is set, the pattern 
            is considered to be finite and the <see cref="P:C1.C1Schedule.RecurrencePattern.NoEndDate"/> property is false. 
            If neither <see cref="P:C1.C1Schedule.RecurrencePattern.PatternEndDate"/> nor <see cref="P:C1.C1Schedule.RecurrencePattern.Occurrences"/> is set, 
            the pattern is considered infinite and <see cref="P:C1.C1Schedule.RecurrencePattern.NoEndDate"/> is true.</remarks>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.Instance">
            <summary>
            Get or sets the <see cref="T:C1.C1Schedule.WeekOfMonthEnum"/> value specifying 
            the count for which the recurrence pattern is valid for a given interval. 
            This property is only valid for recurrences of 
            the <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.MonthlyNth"/> and 
            <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.YearlyNth"/> types and allows the definition 
            of a recurrence pattern that is only valid for the Nth occurrence, 
            such as "the 2nd Sunday in March" pattern. 
            The default value is WeekOfMonthEnum.First.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.DayOfWeekMask">
            <summary>
            Gets or sets the <see cref="T:C1.C1Schedule.WeekDaysEnum"/> value representing the mask 
            for week days on which the recurring appointment occurs. 
            Monthly and yearly patterns are only valid for a single day. 
            Weekly patterns are only valid as the Or of the <see cref="P:C1.C1Schedule.RecurrencePattern.DayOfWeekMask"/>.
            The default value is 0.
            </summary>
            <remarks>
            When the <see cref="P:C1.C1Schedule.RecurrencePattern.RecurrenceType"/> property is set to 
              <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.Daily"/>, the <see cref="P:C1.C1Schedule.RecurrencePattern.DayOfWeekMask"/> property 
              can only be set to <see cref="F:C1.C1Schedule.WeekDaysEnum.EveryDay"/>; setting the property 
              to any other value will result in an exception.
            When the <see cref="P:C1.C1Schedule.RecurrencePattern.RecurrenceType"/> property is set to 
              <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.Workdays"/>, the <see cref="P:C1.C1Schedule.RecurrencePattern.DayOfWeekMask"/> property 
              can only be set to <see cref="F:C1.C1Schedule.WeekDaysEnum.WorkDays"/>; setting the property 
              to any other value will result in an exception.
            When the <see cref="P:C1.C1Schedule.RecurrencePattern.RecurrenceType"/> property is set to 
              <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.Weekly"/>, the <see cref="P:C1.C1Schedule.RecurrencePattern.DayOfWeekMask"/> property 
              cannot be set to <see cref="F:C1.C1Schedule.WeekDaysEnum.None"/>; doing so will result 
              in an exception being thrown.
            When the <see cref="P:C1.C1Schedule.RecurrencePattern.RecurrenceType"/> property is set to 
              <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.Monthly"/> or <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.Yearly"/>
              the <see cref="P:C1.C1Schedule.RecurrencePattern.DayOfWeekMask"/> property is not applicable.</remarks>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.DayOfMonth">
            <summary>
            Gets or sets the number of the day in its respective month on which 
            each occurrence will occur. Applicable only when the <see cref="P:C1.C1Schedule.RecurrencePattern.RecurrenceType"/> 
            property is set to <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.Monthly"/> 
            or <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.Yearly"/>.
            The default value is 1.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.MonthOfYear">
            <summary>
            Gets or sets the value indicating which month of the year is valid 
            for the specified recurrence pattern. Can be a number from 1 to 12.
            This property is only valid for recurrence patterns whose <see cref="P:C1.C1Schedule.RecurrencePattern.RecurrenceType"/> 
            property is set to <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.YearlyNth"/> 
            or <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.Yearly"/>.
            The default value is 1.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.NoEndDate">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value indicating if
            the recurrence pattern is endless.
            The default value is True.
            </summary>
            <remarks>This property must be coordinated with other properties when 
            setting up a recurrence pattern. If the <see cref="P:C1.C1Schedule.RecurrencePattern.PatternEndDate"/> property 
            or the <see cref="P:C1.C1Schedule.RecurrencePattern.Occurrences"/> property is set, the pattern is considered 
            to be finite and the <see cref="P:C1.C1Schedule.RecurrencePattern.NoEndDate"/> property is false. 
            If neither <see cref="P:C1.C1Schedule.RecurrencePattern.PatternEndDate"/> nor <see cref="P:C1.C1Schedule.RecurrencePattern.Occurrences"/> is set, 
            the pattern is considered infinite and <see cref="P:C1.C1Schedule.RecurrencePattern.NoEndDate"/> is true.</remarks>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.Exceptions">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.AppointmentList"/> object which holds the list 
            of <see cref="T:C1.C1Schedule.Appointment"/> objects that define the exceptions to that series 
            of appointments. <see cref="T:C1.C1Schedule.Appointment"/> objects are added to 
            the <see cref="P:C1.C1Schedule.RecurrencePattern.Exceptions"/> whenever a property in the corresponding 
            <see cref="T:C1.C1Schedule.Appointment"/> object is altered.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.RecurrencePattern.RemovedOccurrences">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.AppointmentList"/> object which holds the list 
            of <see cref="T:C1.C1Schedule.Appointment"/> objects removed from that series of appointments. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.RecurrencePattern.GetOccurrence(System.DateTime,C1.C1Schedule.CalendarInfo)">
            <summary>
            Returns a specific instance of the Appointment object on the specified date.
            </summary>
            <param name="startDate"></param>
            <param name="info">CalendarInfo</param>
            <returns></returns>
            <remarks>The GetOccurrence method generates an exception if no appointment 
            of that series exists on the specified date.</remarks>
        </member>
        <member name="M:C1.C1Schedule.RecurrencePattern.FromXml(System.Xml.XmlNode)">
            <summary>
            Reconstructs recurrence pattern properties from an <see cref="T:System.Xml.XmlNode"/>. 
            </summary>
            <param name="node"></param>
            <returns>True if pattern has been changed.</returns>
        </member>
        <member name="M:C1.C1Schedule.RecurrencePattern.FromXml(System.Xml.XmlReader)">
            <summary>
            Reconstructs recurrence pattern properties from an <see cref="T:System.Xml.XmlReader"/>. 
            </summary>
            <param name="reader"></param>
            <returns>True if pattern has been changed.</returns>
        </member>
        <member name="M:C1.C1Schedule.RecurrencePattern.ToXml(System.Xml.XmlWriter)">
            <summary>
            Creates an XML encoding of the recurrence pattern properties. 
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.C1Schedule.RecurrencePattern.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Special constructor for deserialization.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <param name="context">The context information.</param>
        </member>
        <member name="M:C1.C1Schedule.RecurrencePattern.Copy">
            <summary>
            Creates the copy of the <see cref="T:C1.C1Schedule.RecurrencePattern"/> object.
            </summary>
            <returns>The new <see cref="T:C1.C1Schedule.RecurrencePattern"/> instance.</returns>
        </member>
        <member name="T:C1.C1Schedule.Reminder">
            <summary>
            The <see cref="T:C1.C1Schedule.Reminder"/> class represents an object which allows users to keep track 
            of upcoming appointments by scheduling a pop-up dialog box to appear at a given time. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Reminder.#ctor(C1.C1Schedule.Appointment)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Reminder"/> class.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="P:C1.C1Schedule.Reminder.ParentAppointment">
            <summary>
            Gets the owning <see cref="T:C1.C1Schedule.Appointment"/> object. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Reminder.Caption">
            <summary>
            Gets the <see cref="T:System.String"/> value representing the window caption text 
            of the <see cref="T:C1.C1Schedule.Appointment"/> object which 
            the <see cref="T:C1.C1Schedule.Reminder"/> object is applied to.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Reminder.IsActive">
            <summary>
            Gets a value that determines if the <see cref="T:C1.C1Schedule.Reminder"/> object 
            is currently active (visible). 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Reminder.NextReminderDate">
            <summary>
            Gets the <see cref="T:System.DateTime"/> value indicating the next time the specified 
            reminder will occur. 
            </summary>
            <remarks>The <see cref="P:C1.C1Schedule.Reminder.NextReminderDate"/> property value changes every time 
            the object's <see cref="M:C1.C1Schedule.Reminder.Snooze(System.TimeSpan)"/> method is executed or when the user 
            clicks the Snooze button.</remarks>
        </member>
        <member name="P:C1.C1Schedule.Reminder.OriginalReminderDate">
            <summary>
            Gets the <see cref="T:System.DateTime"/> value specifying the original date and time 
            that the specified reminder is set to occur. 
            It is calculated using the following formula: 
            <see cref="P:C1.C1Schedule.Reminder.OriginalReminderDate"/> = <see cref="P:C1.C1Schedule.Appointment.Start"/> 
              - <see cref="P:C1.C1Schedule.Appointment.ReminderTimeBeforeStart"/>.
            </summary>
            <remarks>This value corresponds to the original date and time 
            value before the <see cref="M:C1.C1Schedule.Reminder.Snooze(System.TimeSpan)"/> method is executed or the user 
            clicks the Snooze button.</remarks>
        </member>
        <member name="M:C1.C1Schedule.Reminder.Snooze(System.TimeSpan)">
            <summary>
            The <see cref="M:C1.C1Schedule.Reminder.Snooze(System.TimeSpan)"/> method notifies the scheduler to defer the triggering 
            of a reminder by the specified interval.
            </summary>
            <param name="delay">The <see cref="T:System.TimeSpan"/>value specifying the interval
            of time to wait before displaying the reminder again.</param>
        </member>
        <member name="M:C1.C1Schedule.Reminder.Dismiss">
            <summary>
            Dismisses the current <see cref="T:C1.C1Schedule.Reminder"/> object.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Reminder.OnPropertyChanged(System.String)">
            <summary>
            
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="T:C1.C1Schedule.ReminderCollection">
            <summary>
            The <see cref="T:C1.C1Schedule.ReminderCollection"/> is a collection of all <see cref="T:C1.C1Schedule.Reminder"/> objects 
            that represents the reminders for all pending items.
            </summary>
            <remarks>Use the <see cref="P:C1.C1Schedule.C1ScheduleStorage.Reminders"/> property to get a reference  
            to the Reminders collection. 
            Reminders are created programmatically when a new <see cref="T:C1.C1Schedule.Appointment"/> object 
            is created with a reminder. For example, a reminder is created when 
            an <see cref="T:C1.C1Schedule.Appointment"/> object is created and the <see cref="P:C1.C1Schedule.Appointment.ReminderSet"/>
            property is set to true. 
            </remarks>
        </member>
        <member name="E:C1.C1Schedule.ReminderCollection.ReminderAdd">
            <summary>
            Occurs after a reminder is added.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.ReminderCollection.ReminderChange">
            <summary>
            Occurs after a reminder has been modified.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.ReminderCollection.ReminderFire">
            <summary>
            Occurs before the reminder is executed.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.ReminderCollection.ReminderSnooze">
            <summary>
            Occurs when a reminder is dismissed using the Snooze button.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.ReminderCollection.ReminderRemove">
            <summary>
            Occurs when a <see cref="T:C1.C1Schedule.Reminder"/>  object has been removed from the collection.
            </summary>
            <remarks>A reminder can be removed from the Reminders collection 
            by any of the following means:
            - The Reminders collection's Remove method. 
            - The Reminder object's Dismiss method. 
            - When the user clicks the Dismiss button. 
            - When a user turns off a meeting reminder from within the associated item.
            - When a user deletes an item that contains a reminder. </remarks>
        </member>
        <member name="M:C1.C1Schedule.ReminderCollection.#ctor">
            <summary>
            Initialize new <see cref="T:C1.C1Schedule.ReminderCollection"/> object.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.ReminderCollection.InsertItem(System.Int32,C1.C1Schedule.Reminder)">
            <summary>
            Overrides default behavior.
            </summary>
            <param name="index">The zero-based index of the item.</param>
            <param name="item">The <see cref="T:C1.C1Schedule.Reminder"/> object to insert.</param>
        </member>
        <member name="M:C1.C1Schedule.ReminderCollection.RemoveItem(System.Int32)">
            <summary>
            Overrides default behavior.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:C1.C1Schedule.ReminderCollection.ClearItems">
            <summary>
            Overrides default behavior.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.ReminderCollection.SetItem(System.Int32,C1.C1Schedule.Reminder)">
            <summary>
            Overrides default behavior.
            </summary>
            <param name="index">The zero-based index of the item.</param>
            <param name="item">The <see cref="T:C1.C1Schedule.Reminder"/> object to set.</param>
        </member>
        <member name="M:C1.C1Schedule.ReminderCollection.WaitProc(System.Object,System.Boolean)">
            <summary>
            Method to be called when it is time to show reminder.
            </summary>
            <param name="state"></param>
            <param name="timedOut"></param>
        </member>
        <member name="M:C1.C1Schedule.ReminderCollection.Dispose">
            <summary>
            Releases all unmanaged resources.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.ReminderEventArgs">
            <summary>
            Describes event data for <see cref="P:C1.C1Schedule.ReminderEventArgs.Reminder"/> object events.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.ReminderEventArgs.#ctor(C1.C1Schedule.Reminder)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.ReminderEventArgs"/> 
            class with the specified <see cref="P:C1.C1Schedule.ReminderEventArgs.Reminder"/> object. 
            </summary>
            <param name="reminder">The <see cref="P:C1.C1Schedule.ReminderEventArgs.Reminder"/> object.</param>
        </member>
        <member name="P:C1.C1Schedule.ReminderEventArgs.Reminder">
            <summary>
            Gets the reminder which the event was raised for. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.CancelReminderEventHandler">
            <summary>
            Delegate for handling the cancelable event involving a single <see cref="T:C1.C1Schedule.Reminder"/> object. 
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:C1.C1Schedule.CancelReminderEventArgs"/> 
            that contains the event data.</param>
        </member>
        <member name="T:C1.C1Schedule.CancelReminderEventArgs">
            <summary>
            Describes event data for cancelable Reminder events.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.CancelReminderEventArgs.#ctor(C1.C1Schedule.Reminder)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.CancelReminderEventArgs"/>
            class with the specified <see cref="P:C1.C1Schedule.CancelReminderEventArgs.Reminder"/> object. 
            </summary>
            <param name="reminder">The <see cref="T:C1.C1Schedule.Reminder"/> object.</param>
        </member>
        <member name="P:C1.C1Schedule.CancelReminderEventArgs.Reminder">
            <summary>
            Gets the reminder which the event was raised for. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.CancelReminderEventArgs.Cancel">
            <summary>
            Set to true to cancel the operation.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.Resource">
            <summary>
            The <see cref="T:C1.C1Schedule.Resource"/> class represents the resource which can be
            associated with the <see cref="T:C1.C1Schedule.Appointment"/> object. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Resource.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Resource"/> class with the specified key.
            </summary>
            <param name="key">The <see cref="T:System.Int32"/> value which should be used as resource key.</param>
            <remarks>Use this constructor if your business logic requires setting custom key value.
            Make sure that you use the correct constructor overload (with integer or Guid key value) and that key value is unique.</remarks>
        </member>
        <member name="M:C1.C1Schedule.Resource.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Resource"/> class with the specified key.
            </summary>
            <param name="key">The <see cref="T:System.Guid"/> value which should be used as resource key.</param>
            <remarks>Use this constructor if your business logic requires setting custom key value.
            Make sure that you use the correct constructor overload (with integer or Guid key value) and that key value is unique.</remarks>
        </member>
        <member name="M:C1.C1Schedule.Resource.#ctor">
            <summary>
            Creates the new <see cref="T:C1.C1Schedule.Resource"/> object.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Resource.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Special constructor for deserialization.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <param name="context">The context information.</param>
        </member>
        <member name="T:C1.C1Schedule.ResourceCollection">
            <summary>
            The <see cref="T:C1.C1Schedule.ResourceCollection"/> is a collection of <see cref="T:C1.C1Schedule.Resource"/> 
            objects which represents all available resources in C1Schedule object model.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.ResourceCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.ResourceCollection"/> class.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.ResourceList">
            <summary>
            The <see cref="T:C1.C1Schedule.ResourceList"/> is a list of <see cref="T:C1.C1Schedule.Resource"/> objects.
            Only objects existing in the owning <see cref="T:C1.C1Schedule.ResourceCollection"/> object 
            may be added to this list.
            Use the <see cref="T:C1.C1Schedule.ResourceList"/> to associate the set of <see cref="T:C1.C1Schedule.Resource"/> objects 
            with an <see cref="T:C1.C1Schedule.Appointment"/> object.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.StatusTypeEnum">
            <summary>
            Determines the type of status.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.StatusTypeEnum.Free">
            <summary>
            This status means that a person is in the office and available to others. 
            </summary>
        </member>
        <member name="F:C1.C1Schedule.StatusTypeEnum.Tentative">
            <summary>
            This status means that a person is in the office and tentatively available to others.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.StatusTypeEnum.Busy">
            <summary>
            This status means that a person is in the office but unavailable to others.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.StatusTypeEnum.OutOfOffice">
            <summary>
            This status means that a person is out of the office and unavailable to others.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.StatusTypeEnum.Custom">
            <summary>
            This status represents all custom statuses added to the StatusCollection.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.StatusTypeEnum.WorkingElsewhere">
            <summary>
            This status means that a person is working elsewhere.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.Status">
            <summary>
            The <see cref="T:C1.C1Schedule.Status"/> class represents an availability status 
            for the <see cref="T:C1.C1Schedule.Appointment"/> object. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Status.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Status"/> class with the specified key.
            </summary>
            <param name="key">The <see cref="T:System.Int32"/> value which should be used as status key.</param>
            <remarks>Use this constructor if your business logic requires setting custom key value.
            Make sure that you use the correct constructor overload (with integer or Guid key value) and that key value is unique.</remarks>
        </member>
        <member name="M:C1.C1Schedule.Status.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Status"/> class with the specified key.
            </summary>
            <param name="key">The <see cref="T:System.Guid"/> value which should be used as status key.</param>
            <remarks>Use this constructor if your business logic requires setting custom key value.
            Make sure that you use the correct constructor overload (with integer or Guid key value) and that key value is unique.</remarks>
        </member>
        <member name="M:C1.C1Schedule.Status.#ctor">
            <summary>
            Creates the new custom <see cref="T:C1.C1Schedule.Status"/> object with default parameters.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Status.#ctor(C1.C1Schedule.StatusTypeEnum)">
            <summary>
            Creates a new instance of the <see cref="T:C1.C1Schedule.Status"/> class 
            and initializes it with the specified type. 
            </summary>
            <param name="type">The <see cref="T:C1.C1Schedule.StatusTypeEnum"/> value.</param>
        </member>
        <member name="M:C1.C1Schedule.Status.#ctor(C1.C1Schedule.StatusTypeEnum,System.Globalization.CultureInfo)">
            <summary>
            Creates a new instance of the <see cref="T:C1.C1Schedule.Status"/> class 
            and initializes it with the specified type. 
            </summary>
            <param name="type">The <see cref="T:C1.C1Schedule.StatusTypeEnum"/> value.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> value.</param>
        </member>
        <member name="M:C1.C1Schedule.Status.#ctor(System.String)">
            <summary>
            Creates a new instance of the custom <see cref="T:C1.C1Schedule.Status"/> object with the specified text.
            </summary>
            <param name="text">The <see cref="T:System.String"/> value.</param>
        </member>
        <member name="M:C1.C1Schedule.Status.#ctor(System.String,System.String)">
            <summary>
            Creates the new custom <see cref="T:C1.C1Schedule.Status"/> object with specified text and menu caption.
            </summary>
            <param name="text">The <see cref="T:System.String"/> value.</param>
            <param name="menuCaption">The menu caption for displaying status in dialogs.</param>
        </member>
        <member name="M:C1.C1Schedule.Status.#ctor(System.Drawing.Color,System.String,System.String)">
            <summary>
            Creates the new custom <see cref="T:C1.C1Schedule.Status"/> object with specified color, 
            text and menu caption.
            </summary>
            <param name="color">The color which will be used for displaying status.</param>
            <param name="text">The <see cref="T:System.String"/> value.</param>
            <param name="menuCaption">The menu caption for displaying status in dialogs.</param>
        </member>
        <member name="M:C1.C1Schedule.Status.#ctor(System.Drawing.Color,System.String,System.String,C1.C1Schedule.C1Brush)">
            <summary>
            Creates the new custom <see cref="T:C1.C1Schedule.Status"/> object with specified parameters.
            </summary>
            <param name="color">The color which will be used for displaying status.</param>
            <param name="text">The <see cref="T:System.String"/> value.</param>
            <param name="menuCaption">The menu caption for displaying status in dialogs.</param>
            <param name="brush">The brush which will be used for displaying status.</param>
        </member>
        <member name="M:C1.C1Schedule.Status.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Special constructor for deserialization.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <param name="context">The context information.</param>
        </member>
        <member name="P:C1.C1Schedule.Status.StatusType">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.StatusTypeEnum"/> value determining the type of the status. 
            </summary>
        </member>
        <member name="T:C1.C1Schedule.StatusCollection">
            <summary>
            The <see cref="T:C1.C1Schedule.StatusCollection"/> is a collection of <see cref="T:C1.C1Schedule.Status"/> 
            objects which represents all available statuses in C1Schedule object model.
            By default it contains the set of predefined statuses. 
            </summary>
        </member>
        <member name="M:C1.C1Schedule.StatusCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.StatusCollection"/> class.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.StatusCollection.LoadDefaults">
            <summary>
            Restores the collection to its default state.
            </summary>
            <remarks>The <see cref="M:C1.C1Schedule.StatusCollection.LoadDefaults"/> method removes all the custom 
            appointment statuses from the collection and leaves only the standard ones.
            </remarks>
        </member>
        <member name="P:C1.C1Schedule.StatusCollection.Item(C1.C1Schedule.StatusTypeEnum)">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.Status"/> object specified by the appointment status type. 
            For custom statuses returns the first occurrence.
            If there is no such <see cref="T:C1.C1Schedule.Status"/> object in the collection, returns null.
            </summary>
            <param name="type">The <see cref="T:C1.C1Schedule.StatusTypeEnum"/> value.</param>
            <returns>The <see cref="T:C1.C1Schedule.Status"/> object.</returns>
        </member>
        <member name="T:C1.C1Schedule.StatusList">
            <summary>
            The <see cref="T:C1.C1Schedule.StatusList"/> is a list of <see cref="T:C1.C1Schedule.Status"/> objects.
            Only objects existing in the owning <see cref="T:C1.C1Schedule.StatusCollection"/> object 
            may be added to this list.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.TimeZoneInfo">
            <summary>
            The <see cref="T:C1.C1Schedule.TimeZoneInfo"/> class determines time zone properties.
            It can be used for conversion to/from utc times and local times and respect DST.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.TimeZoneInfo.TimeZones">
            <summary>
            Gets a list of all time zones defined in the local system.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.TimeZoneInfo.TimeZoneNames">
            <summary>
            Gets a string array of display time zone names supported in the local system.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.TimeZoneInfo.CurrentTimeZone">
            <summary>
            Gets the current time zone information.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.TimeZoneInfo.StandardName">
            <summary>
            The time zone's name during 'standard' time (i.e. not daylight savings).
            </summary>
        </member>
        <member name="P:C1.C1Schedule.TimeZoneInfo.DaylightName">
            <summary>
            The time zone's name during daylight savings time (DST).
            </summary>
        </member>
        <member name="P:C1.C1Schedule.TimeZoneInfo.DisplayName">
            <summary>
            The time zone's display name (e.g. '(GMT-05:00) Eastern Time (US and Canada)').
            </summary>
        </member>
        <member name="P:C1.C1Schedule.TimeZoneInfo.StandardOffset">
            <summary>
            Gets the standard offset from UTC as a TimeSpan.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.TimeZoneInfo.DaylightOffset">
            <summary>
            Gets the daylight offset from UTC as a TimeSpan.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.TimeZoneInfo.StandardBias">
            <summary>
            Gets the difference, in minutes, between UTC and local time.
            UTC = local time + bias.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.TimeZoneInfo.DaylightBias">
            <summary>
            Gets the difference, in minutes, between UTC and local time (in daylight savings time).
            UTC = local time + bias.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.TimeZoneInfo.ToString">
            <summary>
            Gets display name of this time zone instance.
            </summary>
            <returns>Time zone standard name.</returns>
        </member>
        <member name="M:C1.C1Schedule.TimeZoneInfo.GetTimeZone(System.String)">
            <summary>
            Returns a TimeZoneInfo instance for the time zone with supplied name.
            </summary>
            <remarks>This method searches by standard, daylight and display names.</remarks>
            <param name="name">A name of the time zone to search for.</param>
            <returns>TimeZoneInfo instance if any; null otherwise.</returns>
        </member>
        <member name="M:C1.C1Schedule.TimeZoneInfo.ToLocalTime(System.DateTime)">
            <summary>
            Converts the value of the utc time to a local time in this time zone.
            </summary>
            <param name="utc">The UTC time to convert.</param>
            <returns>The local time.</returns>
        </member>
        <member name="M:C1.C1Schedule.TimeZoneInfo.ToUniversalTime(System.DateTime)">
            <summary>
            Converts the value of the local time to UTC time.
            Note that there may be different possible interpretations at the daylight time boundaries.
            </summary>
            <param name="local">The local time to convert.</param>
            <returns>The UTC DateTime.</returns>
            <exception cref="T:System.NotSupportedException">Thrown if the method failed due to missing platform support.</exception>
        </member>
        <member name="M:C1.C1Schedule.TimeZoneInfo.CopyFrom(C1.C1Schedule.TimeZoneInfo)">
            <summary>
            Copies a time zone info form the specified <see cref="T:C1.C1Schedule.TimeZoneInfo"/> object into the current instance.
            </summary>
            <param name="info"></param>
        </member>
        <member name="T:C1.C1Schedule.TimeZoneInfo.SYSTEMTIME">
            <summary>
            The standard Windows SYSTEMTIME structure.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.TimeZoneInfo.TZI">
            <summary>
            The layout of the Tzi value in the registry.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.TimeZoneInfo.TIME_ZONE_INFORMATION">
            <summary>
            The standard Win32 TIME_ZONE_INFORMATION structure.
            Thanks to www.pinvoke.net.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.TimeZoneInfo.NativeMethods">
            <summary>
            A container for P/Invoke declarations.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.TimeZoneInfo.NativeMethods.TzSpecificLocalTimeToSystemTime(C1.C1Schedule.TimeZoneInfo.TIME_ZONE_INFORMATION@,C1.C1Schedule.TimeZoneInfo.SYSTEMTIME@,C1.C1Schedule.TimeZoneInfo.SYSTEMTIME@)">
            <summary>
            Convert a local time to UTC, using the supplied time zone information.
            Windows XP and Server 2003 and later only.
            </summary>
            <param name="lpTimeZone">The time zone to use.</param>
            <param name="lpLocalTime">The local time to convert.</param>
            <param name="lpUniversalTime">The resultant time in UTC.</param>
            <returns>true if successful, false otherwise.</returns>
        </member>
        <member name="M:C1.C1Schedule.TimeZoneInfo.InitTzi(System.Byte[])">
            <summary>
            Initialize the _tzi member.
            </summary>
            <param name="info">The Tzi data from the registry.</param>
        </member>
        <member name="T:C1.C1Schedule.Printing.DateAppointments">
            <summary>
            The <see cref="T:C1.C1Schedule.Printing.DateAppointments"/> class represents the single calendar day
            with the <see cref="T:System.Collections.Generic.List`1"/> list of appointments.
            It is an auxiliary class for use in C1PrintDocument scripts.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Printing.DateAppointments.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Printing.DateAppointments"/> class.
            </summary>
            <param name="date">The <see cref="T:System.DateTime"/> value determining the represented date.</param>
        </member>
        <member name="P:C1.C1Schedule.Printing.DateAppointments.Date">
            <summary>
            Gets the <see cref="T:System.DateTime"/> value determining the represented date.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.DateAppointments.HasAppointments">
            <summary>
            Returns true if current day contains one or more appointments.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.DateAppointments.BusyStatus">
            <summary>
            Returns availability status of the current day.
            </summary>
            <remarks>Availability status is determined according to availability statuses of
            AllDay events for the representing day.</remarks>
        </member>
        <member name="P:C1.C1Schedule.Printing.DateAppointments.Appointments">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.List`1"/> list of all appointments for the represented day.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Printing.DateAppointments.AddAppointment(C1.C1Schedule.Appointment)">
            <summary>
            Adds a new <see cref="T:C1.C1Schedule.Appointment"/> object to the current day.
            </summary>
            <remarks>The specified <see cref="T:C1.C1Schedule.Appointment"/> object will be added 
            only if some part of the appointment falls on the current day.</remarks>
            <param name="appointment">The <see cref="T:C1.C1Schedule.Appointment"/> object to add.</param>
        </member>
        <member name="T:C1.C1Schedule.Printing.DateAppointmentsCollection">
            <summary>
            The <see cref="T:C1.C1Schedule.Printing.DateAppointmentsCollection"/> class represents 
            the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2"/> collection 
            which can be used as a data source in C1PrintDocument documents.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Printing.DateAppointmentsCollection.#ctor(System.DateTime,System.DateTime,C1.C1Schedule.AppointmentCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Printing.DateAppointmentsCollection"/> collection
            for the specified date range with appointment from the specified <see cref="T:C1.C1Schedule.AppointmentCollection"/> collection.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value representing the beginning of the date range.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value representing the end of the date range.</param>
            <param name="appointmentCollection">The <see cref="T:C1.C1Schedule.AppointmentCollection"/> collection for getting appointments from.</param>
        </member>
        <member name="M:C1.C1Schedule.Printing.DateAppointmentsCollection.#ctor(System.DateTime,System.DateTime,C1.C1Schedule.AppointmentCollection,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Printing.DateAppointmentsCollection"/> collection
            for the specified date range with appointment from the specified <see cref="T:C1.C1Schedule.AppointmentCollection"/> collection.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value representing the beginning of the date range.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value representing the end of the date range.</param>
            <param name="appointmentCollection">The <see cref="T:C1.C1Schedule.AppointmentCollection"/> collection for getting appointments from.</param>
            <param name="includeEmptyDays">The <see cref="T:System.Boolean"/> value specifying whether to include days without appointments into collection.</param>
            <param name="includePrivateAppointments">The <see cref="T:System.Boolean"/> value specifying whether to include private appointments into collection.</param>
        </member>
        <member name="M:C1.C1Schedule.Printing.DateAppointmentsCollection.#ctor(System.DateTime,System.DateTime,C1.C1Schedule.AppointmentCollection,C1.C1Schedule.CalendarInfo,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Printing.DateAppointmentsCollection"/> collection
            for the specified date range with appointment from the specified <see cref="T:C1.C1Schedule.AppointmentCollection"/> collection.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value representing the beginning of the date range.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value representing the end of the date range.</param>
            <param name="appointmentCollection">The <see cref="T:C1.C1Schedule.AppointmentCollection"/> collection for getting appointments from.</param>
            <param name="calendarInfo">The <see cref="T:C1.C1Schedule.CalendarInfo"/> object containing calendar specific information.</param>
            <param name="includeEmptyDays">The <see cref="T:System.Boolean"/> value specifying whether to include days without appointments into collection.</param>
            <param name="includeWeekends">The <see cref="T:System.Boolean"/> value specifying whether to include weekend days into collection.</param>
            <param name="includePrivateAppointments">The <see cref="T:System.Boolean"/> value specifying whether to include private appointments into collection.</param>
        </member>
        <member name="M:C1.C1Schedule.Printing.DateAppointmentsCollection.#ctor(System.DateTime,System.DateTime,System.Collections.Generic.IList{C1.C1Schedule.Appointment},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Printing.DateAppointmentsCollection"/> collection
            for the specified date range with appointment from the specified <see cref="T:C1.C1Schedule.AppointmentCollection"/> collection.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value representing the beginning of the date range.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value representing the end of the date range.</param>
            <param name="appointments">The <see cref="T:System.Collections.Generic.IList`1"/> list of appointments.</param>
            <param name="includeEmptyDays">The <see cref="T:System.Boolean"/> value specifying whether to include days without appointments into collection.</param>
        </member>
        <member name="M:C1.C1Schedule.Printing.DateAppointmentsCollection.#ctor(System.DateTime,System.DateTime,System.Collections.Generic.IList{C1.C1Schedule.Appointment},C1.C1Schedule.CalendarInfo,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Printing.DateAppointmentsCollection"/> collection
            for the specified date range with appointment from the specified <see cref="T:C1.C1Schedule.AppointmentCollection"/> collection.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value representing the beginning of the date range.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value representing the end of the date range.</param>
            <param name="appointments">The <see cref="T:System.Collections.Generic.IList`1"/> list of appointments.</param>
            <param name="calendarInfo">The <see cref="T:C1.C1Schedule.CalendarInfo"/> object containing calendar specific information.</param>
            <param name="includeEmptyDays">The <see cref="T:System.Boolean"/> value specifying whether to include days without appointments into collection.</param>
            <param name="includeWeekends">The <see cref="T:System.Boolean"/> value specifying whether to include weekend days into collection.</param>
        </member>
        <member name="P:C1.C1Schedule.Printing.DateAppointmentsCollection.Item(System.DateTime,System.DateTime)">
            <summary>
            Gets a new <see cref="T:C1.C1Schedule.Printing.DateAppointmentsCollection"/> collection containing 
            <see cref="T:C1.C1Schedule.Printing.DateAppointments"/> objects for the specified date range.
            </summary>
            <remarks>Resulting collection always contains the subset of the current collection.
            All days out of this collection date range are omitted.</remarks>
            <param name="start">The <see cref="T:System.DateTime"/> value representing the beginning of the date range.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value representing the end of the date range.</param>
            <returns>The <see cref="T:C1.C1Schedule.Printing.DateAppointmentsCollection"/> collection containing 
            <see cref="T:C1.C1Schedule.Printing.DateAppointments"/> objects for the specified date range.</returns>
        </member>
        <member name="M:C1.C1Schedule.Printing.DateAppointmentsCollection.GetIntervalAppointments(System.DateTime,System.DateTime,System.Boolean)">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.List`1"/> containing <see cref="T:C1.C1Schedule.Appointment"/>
            objects for the specified DateTime range.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value representing the beginning of the DateTime range.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value representing the end of the DateTime range.</param>
            <param name="includeAll">Specifies whether the returned list contains all appointments 
            intercepting the specified DateTime range. If this value is False, the returned list
            will contain only appointments starting within the specified DateTime range.</param>
            <returns>The <see cref="T:System.Collections.Generic.List`1"/> list containing 
            <see cref="T:C1.C1Schedule.Appointment"/> objects for the specified DateTime range.</returns>
        </member>
        <member name="M:C1.C1Schedule.Printing.DateAppointmentsCollection.GetKeyForItem(C1.C1Schedule.Printing.DateAppointments)">
            <summary>
            Returns key value for the specified item.
            </summary>
            <param name="item">A <see cref="T:C1.C1Schedule.Printing.DateAppointments"/> object.</param>
            <returns>The <see cref="T:System.DateTime"/> value used as a key.</returns>
        </member>
        <member name="M:C1.C1Schedule.Printing.DateAppointmentsCollection.FillCollection(System.DateTime,System.DateTime)">
            <summary>
            Returns DayCollection for all dates from the start till the end.
            </summary>
            <returns></returns>
        </member>
        <member name="T:C1.C1Schedule.Printing.PrintContextType">
            <summary>
            The <see cref="T:C1.C1Schedule.Printing.PrintContextType"/> defines the printing context for the <see cref="T:C1.C1Schedule.Printing.PrintStyle"/> object.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.Printing.PrintContextType.Appointment">
            <summary>
            Document displays content of the <see cref="T:C1.C1Schedule.Appointment"/> object.
            </summary>
        </member>
        <member name="F:C1.C1Schedule.Printing.PrintContextType.DateRange">
            <summary>
            Document displays appointments for the specified date range.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.Printing.PreviewWrapper">
            <summary>
            The <see cref="T:C1.C1Schedule.Printing.PreviewWrapper"/> class wraps the print preview dialog functionality.
            It allows showing C1.C1Preview.C1PrintDocument content in a C1.Win.RibbonPreview.C1RibbonPreviewDialog, 
            loaded via reflection from C1.Win.RibbonPreview.4.5.2 assembly.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.PreviewWrapper.Caption">
            <summary>
            Gets or sets the caption of the preview window.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.PreviewWrapper.C1PrintPreviewDialog">
            <summary>
            Gets or sets the C1.Win.RibbonPreview.C1RibbonPreviewDialog object, used for previewing.
            </summary>
            <remarks>
            You can set this property from code if your application contains reference 
            to the C1.Win.RibbonPreview.4.5.2 assembly.
            In such case you'll be able to set various C1.Win.RibbonPreview.C1RibbonPreviewDialog 
            properties before showing it to end-users.
            </remarks>
        </member>
        <member name="M:C1.C1Schedule.Printing.PreviewWrapper.Preview(System.Object)">
            <summary>
            Shows the specified object in a print preview dialog.
            </summary>
            <param name="printDocument">An object to preview. 
            It might be one of the next types:
              - C1.C1Preview.C1PrintDocument, 
              - <see cref="T:System.Drawing.Printing.PrintDocument"/>,
              - C1.C1Report.C1Report, 
              - <see cref="T:System.ComponentModel.IBindingList"/>, 
              - <see cref="T:System.Collections.IEnumerable"/>.</param>
        </member>
        <member name="M:C1.C1Schedule.Printing.PreviewWrapper.Preview(C1.C1Schedule.Printing.PrintDocumentWrapper,System.Drawing.Printing.PageSettings@)">
            <summary>
            Shows the specified object in a print preview dialog using the specified <see cref="T:System.Drawing.Printing.PageSettings"/> object.
            </summary>
            <param name="printDocument">The <see cref="T:C1.C1Schedule.Printing.PrintDocumentWrapper"/> object to preview.</param>
            <param name="pageSettings">The <see cref="T:System.Drawing.Printing.PageSettings"/> object for using in preview.</param>
        </member>
        <member name="M:C1.C1Schedule.Printing.PreviewWrapper.Preview(C1.C1Schedule.Printing.PrintDocumentWrapper)">
            <summary>
            Shows the specified <see cref="T:C1.C1Schedule.Printing.PrintDocumentWrapper"/> object in a print preview dialog.
            </summary>
            <param name="printDocument">The <see cref="T:C1.C1Schedule.Printing.PrintDocumentWrapper"/> object to preview.</param>
        </member>
        <member name="M:C1.C1Schedule.Printing.PreviewWrapper.Dispose">
            <summary>
            Releases all unmanaged resources.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.Printing.PrintDocumentWrapper">
            <summary>
            The <see cref="T:C1.C1Schedule.Printing.PrintDocumentWrapper"/> class wraps the C1.C1Preview.C1PrintDocument functionality.
            It loads C1.C1Preview.C1PrintDocument component via reflection from the C1.C1Report.2 assembly.
            </summary>
        </member>
        <member name="E:C1.C1Schedule.Printing.PrintDocumentWrapper.DocumentStarting">
            <summary>
            Occurs when the document building is started.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.PrintDocumentWrapper.C1PrintDocument">
            <summary>
            Gets or sets wrapped C1PrintDocument instance.
            </summary>
            <remarks>
            Set this property from code if your application contains reference 
            to the C1.WPF.C1Report or C1.C1Report.2 assembly.
            In such case you'll be able to work with C1PrintDocument directly from your code.
            </remarks>
        </member>
        <member name="M:C1.C1Schedule.Printing.PrintDocumentWrapper.GetDocumentInfoProperty(System.String)">
            <summary>
            Returns the value of the specified property of the document's DocumentInfo object.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Printing.PrintDocumentWrapper.AddExternalAssembly(System.String)">
            <summary>
            Adds specified external assembly reference to the currently loaded document.
            </summary>
            <param name="assemblyName">The <see cref="T:System.String"/> value specifying assembly name for adding.</param>
        </member>
        <member name="M:C1.C1Schedule.Printing.PrintDocumentWrapper.Load(System.IO.Stream)">
            <summary>
            Loads the current document from a stream.
            The stream should contain a document in C1D format.
            </summary>
            <param name="stream">The stream from which to load the document.</param>
        </member>
        <member name="M:C1.C1Schedule.Printing.PrintDocumentWrapper.Load(System.IO.Stream,System.Object)">
            <summary>
            Loads the current document from a stream.
            </summary>
            <param name="stream">The stream from which to load the document.</param>
            <param name="documentFormat">The document persistence format to use.</param>
        </member>
        <member name="M:C1.C1Schedule.Printing.PrintDocumentWrapper.Load(System.String)">
            <summary>
            Loads the current document from a file.
            The file format (C1D or C1DX) is determined by the file extension.
            The format defaults to C1D if the format cannot be determined from the extension.
            </summary>
            <param name="fileName">The file name.</param>
        </member>
        <member name="M:C1.C1Schedule.Printing.PrintDocumentWrapper.Load(System.String,System.Object)">
            <summary>
            Loads the current document from a file.
            </summary>
            <param name="fileName">The file name.</param>
            <param name="documentFormat">The document persistence format to use.</param>
        </member>
        <member name="M:C1.C1Schedule.Printing.PrintDocumentWrapper.Print">
            <summary>
            Prints the document.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Printing.PrintDocumentWrapper.Print(System.Drawing.Printing.PrinterSettings)">
            <summary>
            Prints the document.
            </summary>
            <param name="printerSettings">The printer settings to use.</param>
        </member>
        <member name="M:C1.C1Schedule.Printing.PrintDocumentWrapper.Print(System.Drawing.Printing.PrinterSettings,System.Boolean)">
            <summary>
            Prints the document.
            </summary>
            <param name="printerSettings">The printer settings to use.</param>
            <param name="showProgress">Flag indicating whether to show the progress dialog.</param>
        </member>
        <member name="M:C1.C1Schedule.Printing.PrintDocumentWrapper.Print(System.Drawing.Printing.PrinterSettings,System.Drawing.Printing.PageSettings,System.Boolean)">
            <summary>
            Prints the document.
            </summary>
            <param name="printerSettings">The printer settings to use.</param>
            <param name="defaultPageSettings">The default page settings to use.</param>
            <param name="showProgress">Flag indicating whether to show the progress dialog.</param>
        </member>
        <member name="M:C1.C1Schedule.Printing.PrintDocumentWrapper.Generate">
            <summary>
            Generates a document.
            </summary>
            <returns>Returns true if no warning occurs during generating.</returns>
        </member>
        <member name="M:C1.C1Schedule.Printing.PrintDocumentWrapper.ReadTags(System.Collections.Generic.Dictionary{System.String,C1.C1Schedule.Printing.TagInfo}@)">
            <summary>
            Updates specified tag dictionary with the current document tags.
            </summary>
            <param name="tags">The <see cref="T:System.Collections.Generic.Dictionary`2"/> dictionary of tags for updating.</param>
            <remarks>If specified dictionary doesn't contain one of document tags, this tag will be added to the dictionary.
            If the dictionary contains tag with the same name and type, this tag won't be changed.
            If the dictionary contains tag with the same name and different type, this tag will be replaced with the new one.</remarks>
        </member>
        <member name="M:C1.C1Schedule.Printing.PrintDocumentWrapper.SetDocumentTag(System.String,System.Object)">
            <summary>
            Sets the value of the specified document tag.
            </summary>
            <param name="name">The <see cref="T:System.String"/> value specifying the name of the document tag.</param>
            <param name="value">The value to be set.</param>
        </member>
        <member name="M:C1.C1Schedule.Printing.PrintDocumentWrapper.AddDocumentTag(System.String,System.Object)">
            <summary>
            Adds the new tag with the specified value to the document.
            </summary>
            <param name="name">The <see cref="T:System.String"/> value specifying the name of the document tag.</param>
            <param name="value">The value to be set.</param>
        </member>
        <member name="M:C1.C1Schedule.Printing.PrintDocumentWrapper.Clear">
            <summary>
            Clears the document, all its properties will be set to default values
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Printing.PrintDocumentWrapper.Dispose">
            <summary>
            Releases all unmanaged resources.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.Printing.PrintInfo">
            <summary>
            The object used to manage schedule printing.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.PrintInfo.IsPrintingEnabled">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value determining whether printing is enabled.
            </summary>
            <remarks> At run-time this property returns false if
            C1PrintDocument control can't be initialized.</remarks>
        </member>
        <member name="P:C1.C1Schedule.Printing.PrintInfo.IsPreviewEnabled">
            <summary>
            Gets a <see cref="T:System.Boolean"/> value determining whether preview is enabled.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.PrintInfo.PrintStyles">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.Printing.PrintStyleCollection"/> collection, containing all available styles of printing.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.PrintInfo.PrintDocumentHelper">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.Printing.PrintDocumentWrapper"/> object.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.PrintInfo.PreviewHelper">
            <summary>
            Gets the <see cref="T:C1.C1Schedule.Printing.PreviewWrapper"/> object.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.PrintInfo.ShowOptionsForm">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value determining whether control should
            show options form before printing.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.PrintInfo.ShowProgressForm">
            <summary>
            Gets or sets a value indicating whether the Progress Form is displayed.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.PrintInfo.CurrentStyle">
            <summary>
            Gets a <see cref="T:C1.C1Schedule.Printing.PrintStyle"/> object which is currently selected for printing.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.PrintInfo.HidePrivateAppointments">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value determining whether control should
            hide details of private appointments in the resulting document.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.PrintInfo.PrintSelectedCalendar">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value determining whether control should only
            show appointments from the currently selected <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem"/> in the resulting document.
            By default resulting document contains all appointments regardless of the C1Schedule grouping.
            Set this property to true to show appointments from the currently selected <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem"/>.
            </summary>
            <remarks>This property only makes sense if the C1Schedule.GroupBy property is set.</remarks>
        </member>
        <member name="M:C1.C1Schedule.Printing.PrintInfo.Print">
            <summary>
            Sends default printing style for the currently selected view to the printer.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Printing.PrintInfo.Print(C1.C1Schedule.Printing.PrintStyle)">
            <summary>
            Sends the specified printing style to the printer.
            </summary>
            <param name="style">The <see cref="T:C1.C1Schedule.Printing.PrintStyle"/> object to print.</param>
        </member>
        <member name="M:C1.C1Schedule.Printing.PrintInfo.Print(C1.C1Schedule.Appointment)">
            <summary>
            Sends the specified <see cref="T:C1.C1Schedule.Appointment"/> object to the printer.
            </summary>
            <param name="appointment">The <see cref="T:C1.C1Schedule.Appointment"/> object to print.</param>
        </member>
        <member name="M:C1.C1Schedule.Printing.PrintInfo.Print(C1.C1Schedule.Printing.PrintStyle,System.DateTime,System.DateTime)">
            <summary>
            Sends the specified printing style to the printer.
            </summary>
            <param name="style">The <see cref="T:C1.C1Schedule.Printing.PrintStyle"/> object to print.</param>
            <param name="start">The <see cref="T:System.DateTime"/> value specifying the beginning of the print range.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value specifying the end of the print range.</param>
        </member>
        <member name="M:C1.C1Schedule.Printing.PrintInfo.Preview">
            <summary>
            Opens a separate application window in which end users can preview 
            the output that would be generated by the print operation.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Printing.PrintInfo.Preview(C1.C1Schedule.Printing.PrintStyle)">
            <summary>
            Opens a separate application window in which end users can preview 
            the output that would be generated by the print operation.
            </summary>
            <param name="style">The <see cref="T:C1.C1Schedule.Printing.PrintStyle"/> object to preview.</param>
        </member>
        <member name="M:C1.C1Schedule.Printing.PrintInfo.Preview(C1.C1Schedule.Appointment)">
            <summary>
            Opens a separate application window in which end users can preview 
            the output that would be generated by the print operation.
            </summary>
            <param name="appointment">The <see cref="T:C1.C1Schedule.Appointment"/> object to preview.</param>
        </member>
        <member name="M:C1.C1Schedule.Printing.PrintInfo.Preview(C1.C1Schedule.Printing.PrintStyle,System.DateTime,System.DateTime)">
            <summary>
            Opens a separate application window in which end users can preview 
            the output that would be generated by the print operation.
            </summary>
            <param name="style">The <see cref="T:C1.C1Schedule.Printing.PrintStyle"/> object to preview.</param>
            <param name="start">The <see cref="T:System.DateTime"/> value specifying the beginning of the print range.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value specifying the end of the print range.</param>
        </member>
        <member name="M:C1.C1Schedule.Printing.PrintInfo.LoadStyle(C1.C1Schedule.Printing.PrintStyle)">
            <summary>
            Loads style definition to C1PrintDocument control.
            </summary>
            <param name="style">The <see cref="T:C1.C1Schedule.Printing.PrintStyle"/> for loading into print document object.</param>
        </member>
        <member name="M:C1.C1Schedule.Printing.PrintInfo.EditPrintStyle(C1.C1Schedule.Printing.PrintStyle)">
            <summary>
            Shows a dialog window for editing the specified <see cref="T:C1.C1Schedule.Printing.PrintStyle"/> object.
            </summary>
            <param name="style">The <see cref="T:C1.C1Schedule.Printing.PrintStyle"/> object to edit.</param>
            <returns>Returns true if user pressed Ok in a Print Options dialog;
            false otherwise.</returns>
        </member>
        <member name="M:C1.C1Schedule.Printing.PrintInfo.EditPrintStyle">
            <summary>
            Shows a dialog window for selecting printing style and setting it's properties.
            </summary>
            <returns>Returns true if user pressed Ok in a Print Options dialog;
            false otherwise.</returns>
        </member>
        <member name="T:C1.C1Schedule.Printing.PrintStyle">
            <summary>
            The <see cref="T:C1.C1Schedule.Printing.PrintStyle"/> class represents the single printing style for a schedule control.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Printing.PrintStyle.#ctor">
            <summary>
            Initializes the new <see cref="T:C1.C1Schedule.Printing.PrintStyle"/> object.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.PrintStyle.StyleName">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value, determining the unique style name for using in
            <see cref="T:C1.C1Schedule.Printing.PrintStyleCollection"/>. 
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.PrintStyle.Description">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value, determining style description.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.PrintStyle.DisplayName">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value, determining style display name.
            </summary>
            <remarks>For default styles this value is initialized with the value of 
            the <see cref="P:C1.C1Schedule.Printing.PrintStyle.Description"/> property localized according to the owning control's culture.</remarks>
        </member>
        <member name="P:C1.C1Schedule.Printing.PrintStyle.DocumentFormat">
            <summary>
            Gets an <see cref="T:System.Int32"/> value determining the format of source document.
            Returns 0 for .c1d and 1 for .c1dx documents.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.PrintStyle.Context">
            <summary>
            Gets or sets a <see cref="T:C1.C1Schedule.Printing.PrintContextType"/> value, specifying whether the current
            <see cref="T:C1.C1Schedule.Printing.PrintStyle"/> objects displays the single appointment or appointments
            of the specified date range.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.PrintStyle.DateHeadingsFont">
            <summary>
            Gets or sets a <see cref="T:System.Drawing.Font"/> object used for printing date headings.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.PrintStyle.AppointmentsFont">
            <summary>
            Gets or sets a <see cref="T:System.Drawing.Font"/> object used for printing appointments.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.PrintStyle.HeaderFont">
            <summary>
            Gets or sets a <see cref="T:System.Drawing.Font"/> object used for printing page headers.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.PrintStyle.FooterFont">
            <summary>
            Gets or sets a <see cref="T:System.Drawing.Font"/> object used for printing page footers.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.PrintStyle.HeaderColor">
            <summary>
            Gets or sets a <see cref="T:System.Drawing.Color"/> value used for printing page headers.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.PrintStyle.FooterColor">
            <summary>
            Gets or sets a <see cref="T:System.Drawing.Color"/> value used for printing page footers.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.PrintStyle.PreviewImage">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.Image"/> object, representing a small preview of the style 
            which can be used for displaying style information in UI..
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.PrintStyle.CurrentPageSettings">
            <summary>
            Gets or sets the PageSettings for printing.
            </summary>
            <remarks>If end-user changes style PageSettings at run-time, 
            the changed settings will be used as default at every next printing or previewing.</remarks>
        </member>
        <member name="P:C1.C1Schedule.Printing.PrintStyle.HeaderLeft">
            <summary>
            Gets or sets a <see cref="T:System.String"/> value used in the left part of the page header.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.PrintStyle.HeaderCenter">
            <summary>
            Gets or sets a <see cref="T:System.String"/> value used in the center part of the page header.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.PrintStyle.HeaderRight">
            <summary>
            Gets or sets a <see cref="T:System.String"/> value used in the right part of the page header.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.PrintStyle.FooterLeft">
            <summary>
            Gets or sets a <see cref="T:System.String"/> value used in the left part of the page footer.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.PrintStyle.FooterCenter">
            <summary>
            Gets or sets a <see cref="T:System.String"/> value used in the center part of the page footer.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.PrintStyle.FooterRight">
            <summary>
            Gets or sets a <see cref="T:System.String"/> value used in the right part of the page footer.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.PrintStyle.ReverseOnEvenPages">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value determining whether 
            page headers and footers should be reversed on even pages.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.PrintStyle.HidePrivateAppointments">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value determining whether control should
            hide details of private appointments in resulting document.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.PrintStyle.StyleSource">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value determining the source of
            C1PrintDocument template. It might be the name of .c1d or .c1dx file or the name
            of resource.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.PrintStyle.IsLoaded">
            <summary>
            Returns true if the current style is loaded into C1PrintDocument control.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.PrintStyle.Tags">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.Dictionary`2"/> dictionary, containing information 
            about C1PrintDocument tags.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Printing.PrintStyle.Load(C1.C1Schedule.Printing.PrintDocumentWrapper)">
            <summary>
            Loads style definition to the specified C1PrintDocument control.
            </summary>
            <param name="printDoc">The <see cref="T:C1.C1Schedule.Printing.PrintDocumentWrapper"/> object.</param>
            <returns>Returns true at successful loading; false - otherwise.</returns>
        </member>
        <member name="M:C1.C1Schedule.Printing.PrintStyle.IsStandardTag(C1.C1Schedule.Printing.TagInfo)">
            <summary>
            Returns a <see cref="T:System.Boolean"/> value, determining whether the specified tag in one of 
            the predefined tags used by the <see cref="T:C1.C1Schedule.Printing.PrintStyle"/> and PrintOptionsForm classes.
            </summary>
            <param name="tag"></param>
            <returns></returns>
        </member>
        <member name="T:C1.C1Schedule.Printing.PrintStyleCollection">
            <summary>
            The <see cref="T:C1.C1Schedule.Printing.PrintStyleCollection"/> class represents the keyed collection of scheduler printing styles.
            The <see cref="P:C1.C1Schedule.Printing.PrintStyle.StyleName"/> property is used as a collection key.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Printing.PrintStyleCollection.LoadDefaults">
            <summary>
            Fills collection with default printing styles.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Printing.PrintStyleCollection.AddRange(C1.C1Schedule.Printing.PrintStyle[])">
            <summary>
            Adds a set of <see cref="T:C1.C1Schedule.Printing.PrintStyle"/> objects to the collection.
            </summary>
            <param name="items">An array of type <see cref="T:C1.C1Schedule.Printing.PrintStyle"/>
            that contains the print styles to add. </param>
        </member>
        <member name="M:C1.C1Schedule.Printing.PrintStyleCollection.GetUniqueStyleName">
            <summary>
            Returns the <see cref="T:System.String"/> value which can be used
            as unique style name.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Printing.PrintStyleCollection.GetKeyForItem(C1.C1Schedule.Printing.PrintStyle)">
            <summary>
            Extracts the key from the specified item.
            </summary>
            <param name="item">The <see cref="T:C1.C1Schedule.Printing.PrintStyle"/> object from which to extract the key.</param>
            <returns>The key for the specified item.</returns>
        </member>
        <member name="M:C1.C1Schedule.Printing.PrintStyleCollection.InsertItem(System.Int32,C1.C1Schedule.Printing.PrintStyle)">
            <summary>
            Inserts the specified item in the collection at the specified index.
            </summary>
            <param name="index">The zero-based index where the item is to be inserted.</param>
            <param name="item">The item to insert in the collection.</param>
        </member>
        <member name="T:C1.C1Schedule.Printing.TagInfo">
            <summary>
            The <see cref="T:C1.C1Schedule.Printing.TagInfo"/> class represents the facade for the C1.C1Preview.Tag class.
            Use this class for getting information about document tags and for 
            setting tag values before rendering the document.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.TagInfo.Value">
            <summary>
            Gets or sets the C1.C1Preview.Tag object value.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.TagInfo.ShowInDialog">
            <summary>
            Gets or sets a value indicating whether to show the current tag and
            allow the user to edit its <see cref="P:C1.C1Schedule.Printing.TagInfo.Value"/> in the tags input dialog.
            True by default.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.TagInfo.Name">
            <summary>
            Gets the unique name of the tag object as it is defined in a document.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.TagInfo.Description">
            <summary>
            Gets or sets the description of the tag.
            If not empty, used as the label in the tag input dialog.
            (If Description is empty, the value of the <see cref="P:C1.C1Schedule.Printing.TagInfo.Name"/> property 
            will be used as default value.)
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.TagInfo.Type">
            <summary>
            Gets the current tag type.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.TagInfo.InputParams">
            <summary>
            Gets a <see cref="T:C1.C1Schedule.Printing.TagInputParams"/> object that is used by the tag input dialog
            to customize the editor for the current tag. By default, this property is null.
            </summary>
            <remarks>
            The <see cref="T:C1.C1Schedule.Printing.TagInputParams"/> class is abstract, the following types derived from it
            can be used, depending on the current tag's type:
            <list type="bullet">
            <item><term><see cref="T:C1.C1Schedule.Printing.TagStringInputParams"/></term>
            <description>Used to customize input of a string value.</description></item>
            <item><term><see cref="T:C1.C1Schedule.Printing.TagDateTimeInputParams"/></term>
            <description>Used to customize input of a <see cref="T:System.DateTime"/> value.</description></item>
            <item><term><see cref="T:C1.C1Schedule.Printing.TagListInputParams"/></term>
            <description>Allows to use a ListBox or ComboBox for input of the tag's value.</description></item>
            <item><term><see cref="T:C1.C1Schedule.Printing.TagBoolInputParams"/></term>
            <description>Allows to input a Boolean value using a check box.</description></item>
            <item><term><see cref="T:C1.C1Schedule.Printing.TagNumericInputParams"/></term>
            <description>Used to customize input of a integer value.</description></item>
            </list>
            </remarks>
        </member>
        <member name="T:C1.C1Schedule.Printing.TagInputParams">
            <summary>
            The abstract base class for specialized classes used by the
            tag input dialog to customize input of individual tags.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.TagInputParams.IsShowLabel">
            <summary>
            Gets or sets a value indicating whether the input form should show the label with the tag's
            description adjacent to the input control.
            </summary>
            <returns>True if the label is to be shown, false otherwise.</returns>
        </member>
        <member name="T:C1.C1Schedule.Printing.TagStringInputParams">
            <summary>
            Represents customization parameters for input of string tag values.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Printing.TagStringInputParams.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Printing.TagStringInputParams"/> class.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.TagStringInputParams.MaxLength">
            <summary>
            Gets or sets the maximum length of the input string.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.Printing.TagDateTimeInputParams">
            <summary>
            Represents customization parameters for input of <see cref="T:System.DateTime"/> tag values.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Printing.TagDateTimeInputParams.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Printing.TagDateTimeInputParams"/> class.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.TagDateTimeInputParams.Format">
            <summary>
            Gets or sets the format to use in the date/time picker.
            	Long = 1 - the long date format set by the user's operating system,
            	Short = 2 - the short date format set by the user's operating system,
            	Time = 4 - the time format set by the user's operating system,
            	Custom = 8 - the date/time value in a custom format.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.Printing.TagListInputParams">
            <summary>
            Represents customization parameters for input of tag values that can be selected from a list.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Printing.TagListInputParams.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Printing.TagListInputParams"/> class.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.TagListInputParams.Type">
            <summary>
            Gets or sets the type of list input to use.
              ListBox = 0,
              ComboBox = 1/
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.TagListInputParams.Items">
            <summary>
            Gets the collection of list items.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.Printing.TagBoolInputParams">
            <summary>
            Represents customization parameters for input of Boolean tag values.
            </summary>
        </member>
        <member name="T:C1.C1Schedule.Printing.TagNumericInputParams">
            <summary>
            Represents customization parameters for input of integer tag values.
            </summary>
        </member>
        <member name="M:C1.C1Schedule.Printing.TagNumericInputParams.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.C1Schedule.Printing.TagNumericInputParams"/> class.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.TagNumericInputParams.Minimum">
            <summary>
            Gets or sets the minimum allowed value.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.TagNumericInputParams.Maximum">
            <summary>
            Gets or sets the maximum allowed value.
            </summary>
        </member>
        <member name="P:C1.C1Schedule.Printing.TagNumericInputParams.Increment">
            <summary>
            Gets or sets the increment for the spin buttons.
            </summary>
        </member>
        <member name="T:C1.Util.Design.Floaties.IFloatieOwnerExt">
            <summary>
            Additional stuff required (so far - Aug 2006) for C1Command only.
            </summary>
        </member>
        <member name="P:C1.Util.Design.Floaties.IFloatieOwnerExt.LogicalParent">
            <summary>
            Gets the control that is to be used instead of the real parent
            when checking that the parent is in focus etc.
            Used for popup menus.
            </summary>
        </member>
        <member name="P:C1.Util.Design.Floaties.IFloatieOwnerExt.DesignedComponent">
            <summary>
            Gets the designer component if it is distinct from what
            is returned by Control property.
            </summary>
        </member>
        <member name="M:C1.Util.Design.Floaties.FloatieBase.FloatieConstructed">
            <summary>
            This method MUST be called by the inheritor's ctor before exiting!
            </summary>
        </member>
        <member name="M:C1.Util.Design.Floaties.FloatieBase.CanShow">
            <summary>
            Returns false if the floatie should not be shown for reasons such as:
            - the designer is hidden;
            - ???
            Returning true does not mean that the floatie must show, only that it can.
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Util.Design.Floaties.Util.InActiveApplication">
            <summary>
            Gets the value indicating whether the caller process owns
            the current foreground window.
            </summary>
        </member>
        <member name="T:C1.Util.Design.Floaties.FloatiesStrings">
            <summary>
            Contains localizable design-time strings.
            </summary>
        </member>
        <member name="F:C1.Util.Design.Floaties.MainFloatie.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Util.Design.Floaties.MainFloatie.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Util.Design.Floaties.MainFloatie.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:C1.Util.Design.Floaties.PopupFloatie.AutoPopupDelay">
            <summary>
            Gets or sets the timespan between the moment the floatie is ready to be shown
            and the moment it is actually shown.
            </summary>
        </member>
        <member name="M:C1.Util.Design.Floaties.PopupFloatie.#ctor(C1.Util.Design.Floaties.IFloatieOwner,System.Type)">
            <summary>
            ctor for inherited classes
            </summary>
        </member>
        <member name="M:C1.Util.Design.Floaties.PopupFloatie._updateRegion">
            <summary>
            Updates the region to include just the toolbar and the help label.
            This helps avoid flickering due to whole form resizing when help string changes.
            </summary>
        </member>
        <member name="F:C1.Util.Design.Floaties.PopupFloatie.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Util.Design.Floaties.PopupFloatie.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Util.Design.Floaties.PopupFloatie.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Util.Design.UITypeEditorControl">
            <summary>
            UITypeEditorControl
            </summary>
        </member>
        <member name="T:C1.Util.Design.ColorPicker">
            <summary>
            ColorPicker
            Uses the Color UITypeEditor to show a form where users can pick colors
            </summary>
        </member>
        <member name="T:C1.Util.Design.FileNamePicker">
            <summary>
            FileNamePicker
            Uses the FileName UITypeEditor to show a form where users can pick filenames
            </summary>
        </member>
        <member name="T:C1.Util.Design.ImagePicker">
            <summary>
            ImagePicker
            Uses the Image UITypeEditor to show a form where users can pick images
            </summary>
        </member>
        <member name="T:C1.Util.Design.FontPicker">
            <summary>
            FontPicker
            Uses the Font UITypeEditor to show a form where users can pick fonts
            </summary>
        </member>
        <member name="T:C1.Util.Design.DockPicker">
            <summary>
            DockPicker
            Uses the Dock UITypeEditor to show a form where users can pick Dock settings
            </summary>
        </member>
        <member name="T:C1.Util.Design.AnchorPicker">
            <summary>
            AnchorPicker
            Uses the Anchor UITypeEditor to show a form where users can Anchor settings
            </summary>
        </member>
        <member name="T:C1.Util.Design.ExternalEditorWrapper">
            <summary>
            ExternalEditorWrapper
            Wraps an external UITypeEditor.
            </summary>
        </member>
        <member name="T:C1.Util.Design.CollectionEditorControl">
            <summary>
            FontPicker
            Uses the Font UITypeEditor to show a form where users can pick fonts
            </summary>
        </member>
        <member name="F:C1.Util.Licensing.AboutForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Util.Licensing.AboutForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Util.Licensing.AboutForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.ProviderInfo">
            <summary>
            <para>Provides static <see cref="M:C1.Util.Licensing.ProviderInfo.Validate(System.Type,System.Object)"/> methods that 
            should be called from the constructors of licensed classes.</para>
            <para>Also provides a static <see cref="M:C1.Util.Licensing.ProviderInfo.ShowAboutBox(System.Object)"/> method that can 
            be called to show the about box with product and licensing information.</para>
            </summary>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.Validate(System.Type,System.Object)">
            <summary>
            Perform license validation. Call this method from the licensed object's 
            constructor to save a license key at design time, validate it at runtime, 
            and display a nag dialog if a valid license is not found.
            </summary>
            <param name="type">Type of licensed object (use typeof() and not GetType()).</param>
            <param name="instance">Reference to the licensed object (not currently used).</param>
            <returns>A <see cref="T:C1.Util.Licensing.LicenseInfo"/> object that contains information about the license.</returns>
            <remarks>
            <para>Check the <b>ShouldNag</b> property of the returned <see cref="T:C1.Util.Licensing.LicenseInfo"/> 
            to determine whether the licensed class should nag the user. This value is set
            to true in situations where a valid license was not found but a nag dialog
            could not be displayed. In these cases, the licensed class is supposed to nag
            in some other way (with a watermark for example).</para>
            </remarks>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.Validate(System.Type,System.Object,System.Boolean)">
            <summary>
            Perform license validation. Call this method from the licensed object's 
            constructor to save a license key at design time, validate it at runtime, 
            and display a nag dialog if a valid license is not found.
            </summary>
            <param name="type">Type of licensed object (use typeof() and not GetType()).</param>
            <param name="instance">Reference to the licensed object (not currently used).</param>
            <param name="showNagDialog">Whether the nag dialog should be displayed when a valid license is not found.</param>
            <returns>A <see cref="T:C1.Util.Licensing.LicenseInfo"/> object that contains information about the license.</returns>
            <remarks>
            <para>This overload was created for use in WPF. It should be called in the control's constructor
            in order to support license persistence correctly. But it should not show the nag dialog until the
            control is fully loaded, or the VS designer may remain blank.</para>
            <para>So the solution is this:</para>
            <code>
            LicenseInfo _licInfo;
            public LicensedControl()
            {
              // check license but don't nag yet
              _licInfo = ProviderInfo.Validate(typeof(LicensedControl), this, false);
              
              // perform licensing after control is fully loaded
              Loaded += LicensedControl_Loaded;
            }
            void LicensedControl_Loaded(object sender, RoutedEventArgs e)
            {
              // nag after loading
              if (_licInfo.ShouldNag)
              {
                ProviderInfo.ShowAboutBox(this);
              }
            }
            </code>
            </remarks>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.Nag(System.Type,C1.Util.Licensing.LicenseInfo,System.Boolean)">
            <summary>
            Nag user by showing AboutBox with license information.
            Show it only once per day per assembly.
            </summary>
            <param name="type">Type of licensed object (use typeof() and not GetType()).</param>
            <param name="li"><see cref="T:C1.Util.Licensing.LicenseInfo"/> object that contains information about the license.</param>
            <param name="designTime">Whether we're running at design or run time.</param>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.Validate(System.Type,System.Object,System.Reflection.Assembly,System.String)">
            <summary>
            Version of Validate used by constructors that take runtime keys.
            </summary>
            <param name="type">Type of licensed object (use typeof() and not GetType()).</param>
            <param name="instance">Reference to the licensed object.</param>
            <param name="callingAsm">Assembly that contains the owner licensed control.</param>
            <param name="runtimeKey">Any valid C1 runtime key.</param>
            <returns>A <see cref="T:C1.Util.Licensing.LicenseInfo"/> with information about the runtime key.</returns>
            <remarks>
            <para>This allows a licensed C1 class to create other C1 objects bypassing 
            license verification for the child objects.</para>
            <para>For extra safety, we check that the owner object is defined in an assembly
            the contains a 'C1ProductInfo' attribute.</para>
            </remarks>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.ValidateDesigntime(System.Type,System.ComponentModel.LicenseContext)">
            <summary>
            Design time validation. Looks for a license in the registry and saves it in the
            provided <see cref="T:System.ComponentModel.LicenseContext"/>.
            </summary>
            <param name="type">Type of licensed object (use typeof() and not GetType()).</param>
            <param name="context"><see cref="T:System.ComponentModel.LicenseContext"/> where the runtime key will be stored.</param>
            <returns>A <see cref="T:C1.Util.Licensing.LicenseInfo"/> with information about the license.</returns>
            <remarks>
            Call this method from application-type products (that always require a license to be
            installed in the registry). In this case, the <paramref name="context"/> parameter 
            should be set to null.
            </remarks>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.ValidateRuntime(System.Type,System.ComponentModel.LicenseContext)">
            <summary>
            Runtime validation.
            Looks for a runtime key stored in the current application's resources.
            </summary>
            <param name="type">Type of licensed object (use typeof() and not GetType()).</param>
            <param name="context"><see cref="T:System.ComponentModel.LicenseContext"/> where the runtime key will be stored.</param>
            <returns>A <see cref="T:C1.Util.Licensing.LicenseInfo"/> with information about the license.</returns>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.ShowAboutBox(System.Object)">
            <summary>
            Shows the About Box for an instance of a C1 product.
            </summary>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.GetC1Type(System.Object)">
            <summary>
            Get the type whose assembly contains a 'C1ProductInfoAttribute'.
            </summary>
            <param name="instance">Instance of an object whose type is to be checked.</param>
            <returns>The type whose assembly contains a 'C1ProductInfoAttribute'</returns>
        </member>
        <member name="T:C1.Util.Licensing.LicenseInfo">
            <summary>
            Contains information about a license stored in an application.
            </summary>
        </member>
        <member name="M:C1.Util.Licensing.LicenseInfo.#ctor(System.Type,C1.Util.Licensing.LicenseStatus,C1.Util.Licensing.ProductLicense)">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Util.Licensing.LicenseInfo"/> class.
            </summary>
        </member>
        <member name="M:C1.Util.Licensing.LicenseInfo.#ctor(System.Type,C1.Util.Licensing.LicenseStatus)">
            <summary>
            Initializes a new instance of a <see cref="T:C1.Util.Licensing.LicenseInfo"/> class.
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.LicenseStatus">
            <summary>
            Gets or sets the status of this license (valid, expired, unlicensed).
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.License">
            <summary>
            Gets or sets the <see cref="T:C1.Util.Licensing.ProductLicense"/> associated with this license.
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.Type">
            <summary>
            Gets or sets the <see cref="P:C1.Util.Licensing.LicenseInfo.Type"/> associated with this license.
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.EvaluationDaysElapsed">
            <summary>
            Gets the number of evaluation days elapsed.
            Returns -1 for valid licenses.
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.EvaluationDaysLeft">
            <summary>
            Gets the number of evaluation days still left.
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.ShouldNag">
            <summary>
            Gets or sets a value that determines whether the caller should
            nag the user. This is the case when the component/control is 
            not licensed, but is not running in interactive mode. So we can't
            show a dialog and the caller is supposed to nag some other way
            (typically by adding watermarks to the UI or output).
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.IsValid">
            <summary>
            Gets a value that determines whether the license found is valid.
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.IsExpired">
            <summary>
            Gets a value that determines whether the license found is expired.
            </summary>
        </member>
        <member name="P:C1.Util.Licensing.LicenseInfo.IsLocalHost">
            <summary>
            Gets a value that determines whether the component is running under
            localhost and therefore should not nag the user with alert dialogs.
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.SafeLicenseContext">
            <summary>
            
            Provides a version of GetSavedLicenseKey that doesn't require
            special permissions.
            
            The code was mostly copied from the .NET framework, but then changed 
            in a few places to require fewer permissions (assembly name, file io, 
            etc). 
            
            The main change is the use of a custom deserializer to read Hashtable 
            objects instead of the original BinaryFormatter, which requires
            permissions.
            
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.C1AboutNameAttribute">
            <summary>
            Attribute used to specify the product name shown on the About Box.
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.C1AllowedCallerAttribute">
            <summary>
            Attribute used to specify assemblies that can use this product without a license.
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.C1ProductInfoAttribute">
            <summary>
            Attribute used to attach licensing/product information to assemblies.
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.ProductLicense">
            <summary>
            Represents a license for a product (e.g. C1BarCode, C1Studio Enterprise).
            
            Provides methods for:
            - generating new license keys (administrative task)
            - checking license key validity (used by installer and products)
            - generating and checking runtime keys (used by products)
            - installing/uninstalling licenses (used by installer)
            
            The install/uninstall code requires elevated permissions, and is
            used only by setups and utilities (not by controls). The code is 
            implemented in the ProductLicense.Installer.cs, which controls should
            not include since it won't be useful to them.
            
            When a product is sold, we send the user a license KEY. The user installs
            a license on his machine by providing his name, his company name, and the 
            key.
            
            The <see cref="P:C1.Util.Licensing.ProductLicense.Key"/> is a string in the following format:
            
                AAQYYCC-XX-NNNNNN-DD-DZZZZZZ
                
            Where:
            
                AA:     Product code (should match one of the products in the 
                        product catalog (see ProductInformation.GetProductCatalog()).
                Q:      Quarter when the license key was issued (1, 2, or 3)
                YY:     Year when the license key was issued (e.g., 10 for 2010)
                CC:     Order code, two chars that indicate whether this is a 
                        new sale, upgrade, renewal, special offer, etc.
                XX:     Hash code to ensure key validity.
                NNNNNN: Unique serial number.
                DDD:    Vendor code, three chars
                ZZZZZZ: Combination of random numbers for uniqueness and extra hash.
                
            </summary>
        </member>
        <member name="F:C1.Util.Licensing.VersionConst.VerString">
            <summary>
            WinForms version string representation (4 dot-delimited numbers).
            </summary>
        </member>
        <member name="F:C1.Util.Licensing.VersionConst.VersionStr">
            <summary>
            Same as <see cref="F:C1.Util.Licensing.VersionConst.VerString"/>.
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.AssemblyNames">
            <summary>
            Specifies assembly name parts, used by AssemblyCommonInfo to generate actual assembly names.
            </summary>
        </member>
        <member name="T:C1.Design.ColorPickerUITypeEditor">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Design.ColorPickerUITypeEditor.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Design.ColorPickerUITypeEditor.FormType">
            <summary>
            Gets or sets the type of the form used as the color picker.
            The form must expose the public property Color Color {get;set;}.
            </summary>
        </member>
        <member name="M:C1.Design.ColorPickerUITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Design.ColorPickerUITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="provider"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Common.GcNetFxLicenseProvider`1.VerifyDesignTimeEnvironment">
            <summary>
              Verify the environment to get whether the component is in design-time. 
            </summary>
            <returns>
              <c>true</c> if it is in design-time; otherwise <c>false</c>.
            </returns>
            <remarks>
              In DesignTime, because of IDE bugs, some component are not created with DesigntimeLicenseContext. 
              For example, when drag a control from Win Forms DataSource tool window, or use a web control in a ASP.NET Template.
              This may cause the control do run-time license validation and found that there is no license.
              To resolve this problem, we will check the environment and decide whether to do design-time license validation again.
            </remarks>
        </member>
        <member name="F:GrapeCity.Common.LicenseDialog`1.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GrapeCity.Common.LicenseDialog`1.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GrapeCity.Common.LicenseDialog`1.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GrapeCity.Common.WinFormLicenseProvider`1">
            <summary>
              Represents a license provider of a Windows Forms PowerTools component.
            </summary>
        </member>
        <member name="T:GrapeCity.Common.Resources.LicenseResource">
            <summary>
              Contains the resource for PowerToolsLicenseProvider
            </summary>
        </member>
        <member name="P:GrapeCity.Common.Resources.LicenseResource.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:GrapeCity.Common.Resources.LicenseResource.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:GrapeCity.Common.Resources.LicenseResource.ErrorIcon">
            <summary>
              Gets the Error icon for license dialog.
            </summary>
        </member>
        <member name="P:GrapeCity.Common.Resources.LicenseResource.InfoIcon">
            <summary>
              Gets the Info icon for license dialog.
            </summary>
        </member>
        <member name="P:GrapeCity.Common.Resources.LicenseResource.WarningIcon">
            <summary>
              Gets the Warning icon for license dialog.
            </summary>
        </member>
        <member name="P:GrapeCity.Common.Resources.LicenseResource.GrapeCityIcon">
            <summary>
              Gets the GrapeCity icon for license dialog.
            </summary>
        </member>
        <member name="M:GrapeCity.Common.Resources.LicenseResource.GetString(System.String)">
            <summary>
              Gets the localized string.
            </summary>
            <param name="name">
              The name of the string. It could be a const value in <see cref="T:GrapeCity.Common.Resources.LicenseResource"/>.
            </param>
            <returns>
              The localized string.
            </returns>
        </member>
        <member name="M:GrapeCity.Common.Resources.LicenseResource.GetString(System.String,System.Object[])">
            <summary>
              Gets the localized string.
            </summary>
            <param name="name">
              The name of the string. It could be a const value in <see cref="T:GrapeCity.Common.Resources.LicenseResource"/>.
            </param>
            <param name="args">
              The data used in the string.
            </param>
            <returns>
              The localized string.
            </returns>
        </member>
        <member name="M:GrapeCity.Common.Resources.LicenseResource.GetAssemblyFileVersion(System.Reflection.Assembly)">
            <summary>
              Get the file version description of the specified assembly.
            </summary>
            <param name="assembly">
              The <see cref="T:System.Reflection.Assembly"/> whose file version description should be get.
            </param>
            <returns>
              A <see cref="T:System.String"/> indicates the file version description of the specified assembly.
            </returns>
        </member>
        <member name="M:GrapeCity.Common.Resources.LicenseResource.GetAssemblyName(System.Reflection.Assembly)">
            <summary>
              Get the name of the specified assembly.
            </summary>
            <param name="assembly">
              The <see cref="T:System.Reflection.Assembly"/> whose name should be get.
            </param>
            <returns>
              A <see cref="T:System.String"/> indicates the name of the specified assembly.
            </returns>
            <remarks>
              Please use this method to get assembly name. It is because that the Assembly.GetName method need FileIO permission.
            </remarks>
        </member>
        <member name="M:GrapeCity.Common.Resources.LicenseResource.FormatSerialKey(System.String)">
            <summary>
              Format the product key as "xxxx-xxxx-xxxx-xxxx-xxxx-xxxx".
            </summary>
            <param name="productKey">
              A <see cref="T:System.String"/> indicates the original product key which is a sequence of 24 digits.
            </param>
            <returns>
              A readable text indicates the product key.
            </returns>
        </member>
        <member name="T:GrapeCity.Common.Resources.LicenseDialogKind">
            <summary>
              Represents the kind of license dialog.
            </summary>
        </member>
        <member name="F:GrapeCity.Common.Resources.LicenseDialogKind.Info">
            <summary>
              Info dialog. It is shown for a trial license.
            </summary>
        </member>
        <member name="F:GrapeCity.Common.Resources.LicenseDialogKind.Warning">
            <summary>
              Warning dialog. It is shown for a trial license which is expired.
            </summary>
        </member>
        <member name="F:GrapeCity.Common.Resources.LicenseDialogKind.Error">
            <summary>
              Error dialog. It is shown for an invalid license or other errors.
            </summary>
        </member>
        <member name="T:GrapeCity.Common.Resources.LicenseDialogWebLinkTarget">
            <summary>
              Represents the target web site for the link in license dialog.
            </summary>
        </member>
        <member name="F:GrapeCity.Common.Resources.LicenseDialogWebLinkTarget.None">
            <summary>
              None target.
            </summary>
        </member>
        <member name="F:GrapeCity.Common.Resources.LicenseDialogWebLinkTarget.GotoWebFAQ">
            <summary>
              Goto web site http://www.grapecity.com/support/portal/.
            </summary>
        </member>
        <member name="F:GrapeCity.Common.Resources.LicenseDialogWebLinkTarget.GotoWebActivation">
            <summary>
              Goto web site http://www.grapecity.com/componentone/.
            </summary>
        </member>
        <member name="F:GrapeCity.Common.Resources.LicenseDialogWebLinkTarget.GotoWebShop">
            <summary>
              Goto web site http://www.grapecity.com/pricing/componentone/.
            </summary>
        </member>
    </members>
</doc>
